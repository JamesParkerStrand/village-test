{
  "version": 3,
  "sources": ["../../events/events.js", "../../gl-vec3/epsilon.js", "../../gl-vec3/create.js", "../../gl-vec3/clone.js", "../../gl-vec3/fromValues.js", "../../gl-vec3/normalize.js", "../../gl-vec3/dot.js", "../../gl-vec3/angle.js", "../../gl-vec3/copy.js", "../../gl-vec3/set.js", "../../gl-vec3/equals.js", "../../gl-vec3/exactEquals.js", "../../gl-vec3/add.js", "../../gl-vec3/subtract.js", "../../gl-vec3/sub.js", "../../gl-vec3/multiply.js", "../../gl-vec3/mul.js", "../../gl-vec3/divide.js", "../../gl-vec3/div.js", "../../gl-vec3/min.js", "../../gl-vec3/max.js", "../../gl-vec3/floor.js", "../../gl-vec3/ceil.js", "../../gl-vec3/round.js", "../../gl-vec3/scale.js", "../../gl-vec3/scaleAndAdd.js", "../../gl-vec3/distance.js", "../../gl-vec3/dist.js", "../../gl-vec3/squaredDistance.js", "../../gl-vec3/sqrDist.js", "../../gl-vec3/length.js", "../../gl-vec3/len.js", "../../gl-vec3/squaredLength.js", "../../gl-vec3/sqrLen.js", "../../gl-vec3/negate.js", "../../gl-vec3/inverse.js", "../../gl-vec3/cross.js", "../../gl-vec3/lerp.js", "../../gl-vec3/random.js", "../../gl-vec3/transformMat4.js", "../../gl-vec3/transformMat3.js", "../../gl-vec3/transformQuat.js", "../../gl-vec3/rotateX.js", "../../gl-vec3/rotateY.js", "../../gl-vec3/rotateZ.js", "../../gl-vec3/forEach.js", "../../gl-vec3/index.js", "../../iota-array/iota.js", "../../ndarray/node_modules/is-buffer/index.js", "../../ndarray/ndarray.js", "../../fast-voxel-raycast/index.js", "../../voxel-aabb-sweep/index.js", "../../ent-comp/src/dataStore.js", "../../ent-comp/src/ECS.js", "../../bit-twiddle/twiddle.js", "../../dup/dup.js", "../../is-buffer/index.js", "../../@jpweeks/typedarray-pool/pool.js", "../../box-intersect/lib/sort.js", "../../box-intersect/lib/sweep.js", "../../box-intersect/lib/brute.js", "../../box-intersect/lib/partition.js", "../../box-intersect/lib/median.js", "../../box-intersect/lib/intersect.js", "../../box-intersect/index.js", "../../noa-engine/src/lib/shims.js", "../../noa-engine/src/index.js", "../../game-inputs/src/inputs.js", "../../game-inputs/package.json", "../../noa-engine/src/lib/inputs.js", "../../noa-engine/src/lib/container.js", "../../micro-game-shell/src/micro-game-shell.js", "../../noa-engine/src/lib/camera.js", "../../gl-matrix/esm/common.js", "../../gl-matrix/esm/mat3.js", "../../gl-matrix/esm/vec3.js", "../../gl-matrix/esm/vec4.js", "../../gl-matrix/esm/quat.js", "../../gl-matrix/esm/vec2.js", "../../aabb-3d/src/index.ts", "../../noa-engine/src/lib/entities.js", "../../noa-engine/src/components/position.js", "../../noa-engine/src/components/physics.js", "../../noa-engine/src/components/collideEntities.js", "../../noa-engine/src/components/collideTerrain.js", "../../noa-engine/src/components/fadeOnZoom.js", "../../noa-engine/src/components/followsEntity.js", "../../noa-engine/src/components/mesh.js", "../../noa-engine/src/components/movement.js", "../../noa-engine/src/components/receivesInputs.js", "../../noa-engine/src/components/shadow.js", "../../noa-engine/src/components/smoothCamera.js", "../../noa-engine/src/lib/util.js", "../../noa-engine/src/lib/objectMesher.js", "../../noa-engine/src/lib/terrainMesher.js", "../../noa-engine/src/lib/terrainMaterials.js", "../../noa-engine/src/lib/registry.js", "../../noa-engine/src/lib/rendering.js", "../../noa-engine/src/lib/sceneOctreeManager.js", "../../voxel-physics-engine/src/index.js", "../../voxel-physics-engine/src/rigidBody.js", "../../noa-engine/src/lib/physics.js", "../../noa-engine/src/lib/world.js", "../../noa-engine/src/lib/chunk.js", "../../noa-engine/package.json"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "module.exports = 0.000001\n", "module.exports = create;\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n    var out = new Float32Array(3)\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    return out\n}", "module.exports = clone;\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(3)\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n    return out\n}", "module.exports = fromValues;\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n    var out = new Float32Array(3)\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}", "module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}", "module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}", "module.exports = angle\n\nvar fromValues = require('./fromValues')\nvar normalize = require('./normalize')\nvar dot = require('./dot')\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n    var tempA = fromValues(a[0], a[1], a[2])\n    var tempB = fromValues(b[0], b[1], b[2])\n \n    normalize(tempA, tempA)\n    normalize(tempB, tempB)\n \n    var cosine = dot(tempA, tempB)\n\n    if(cosine > 1.0){\n        return 0\n    } else {\n        return Math.acos(cosine)\n    }     \n}\n", "module.exports = copy;\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n    return out\n}", "module.exports = set;\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}", "module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var a2 = a[2]\n  var b0 = b[0]\n  var b1 = b[1]\n  var b2 = b[2]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)))\n}\n", "module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2]\n}\n", "module.exports = add;\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    out[2] = a[2] + b[2]\n    return out\n}", "module.exports = subtract;\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    out[2] = a[2] - b[2]\n    return out\n}", "module.exports = require('./subtract')\n", "module.exports = multiply;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    out[2] = a[2] * b[2]\n    return out\n}", "module.exports = require('./multiply')\n", "module.exports = divide;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    out[2] = a[2] / b[2]\n    return out\n}", "module.exports = require('./divide')\n", "module.exports = min;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    out[2] = Math.min(a[2], b[2])\n    return out\n}", "module.exports = max;\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    out[2] = Math.max(a[2], b[2])\n    return out\n}", "module.exports = floor\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  out[2] = Math.floor(a[2])\n  return out\n}\n", "module.exports = ceil\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  out[2] = Math.ceil(a[2])\n  return out\n}\n", "module.exports = round\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  out[2] = Math.round(a[2])\n  return out\n}\n", "module.exports = scale;\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    out[2] = a[2] * b\n    return out\n}", "module.exports = scaleAndAdd;\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    out[2] = a[2] + (b[2] * scale)\n    return out\n}", "module.exports = distance;\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}", "module.exports = require('./distance')\n", "module.exports = squaredDistance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2]\n    return x*x + y*y + z*z\n}", "module.exports = require('./squaredDistance')\n", "module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}", "module.exports = require('./length')\n", "module.exports = squaredLength;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return x*x + y*y + z*z\n}", "module.exports = require('./squaredLength')\n", "module.exports = negate;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    out[2] = -a[2]\n    return out\n}", "module.exports = inverse;\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  out[2] = 1.0 / a[2]\n  return out\n}", "module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}", "module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}", "module.exports = random;\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n\n    var r = Math.random() * 2.0 * Math.PI\n    var z = (Math.random() * 2.0) - 1.0\n    var zScale = Math.sqrt(1.0-z*z) * scale\n\n    out[0] = Math.cos(r) * zScale\n    out[1] = Math.sin(r) * zScale\n    out[2] = z * scale\n    return out\n}", "module.exports = transformMat4;\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15]\n    w = w || 1.0\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w\n    return out\n}", "module.exports = transformMat3;\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0], y = a[1], z = a[2]\n    out[0] = x * m[0] + y * m[3] + z * m[6]\n    out[1] = x * m[1] + y * m[4] + z * m[7]\n    out[2] = x * m[2] + y * m[5] + z * m[8]\n    return out\n}", "module.exports = transformQuat;\n\n/**\n * Transforms the vec3 with a quat\n *\n * Note: the quaternion must be a unit quaternion (|q| = 1) in\n * order for this operation to be valid.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q unit quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n    // Fast Vector Rotation using Quaternions by Robert Eisele\n    // https://raw.org/proof/vector-rotation-using-quaternions/\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3]\n\n    // t = q x v\n    var tx = qy * z - qz * y\n    var ty = qz * x - qx * z\n    var tz = qx * y - qy * x\n\n    // t = 2t\n    tx *= 2\n    ty *= 2\n    tz *= 2\n\n    // v + w t + q x t\n    out[0] = x + qw * tx + qy * tz - qz * ty\n    out[1] = y + qw * ty + qz * tx - qx * tz\n    out[2] = z + qw * tz + qx * ty - qy * tx\n\n    return out\n}\n", "module.exports = rotateX;\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c){\n    var by = b[1]\n    var bz = b[2]\n\n    // Translate point to the origin\n    var py = a[1] - by\n    var pz = a[2] - bz\n\n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n\n    // perform rotation and translate to correct position\n    out[0] = a[0]\n    out[1] = by + py * cc - pz * sc\n    out[2] = bz + py * sc + pz * cc\n\n    return out\n}\n", "module.exports = rotateY;\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c){\n    var bx = b[0]\n    var bz = b[2]\n\n    // translate point to the origin\n    var px = a[0] - bx\n    var pz = a[2] - bz\n    \n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n  \n    // perform rotation and translate to correct position\n    out[0] = bx + pz * sc + px * cc\n    out[1] = a[1]\n    out[2] = bz + pz * cc - px * sc\n  \n    return out\n}\n", "module.exports = rotateZ;\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c){\n    var bx = b[0]\n    var by = b[1]\n\n    //Translate point to the origin\n    var px = a[0] - bx\n    var py = a[1] - by\n  \n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n\n    // perform rotation and translate to correct position\n    out[0] = bx + px * cc - py * sc\n    out[1] = by + px * sc + py * cc\n    out[2] = a[2]\n  \n    return out\n}\n", "module.exports = forEach;\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n        var i, l\n        if(!stride) {\n            stride = 3\n        }\n\n        if(!offset) {\n            offset = 0\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length)\n        } else {\n            l = a.length\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i] \n            vec[1] = a[i+1] \n            vec[2] = a[i+2]\n            fn(vec, vec, arg)\n            a[i] = vec[0] \n            a[i+1] = vec[1] \n            a[i+2] = vec[2]\n        }\n        \n        return a\n}", "module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , angle: require('./angle')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , min: require('./min')\n  , max: require('./max')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , inverse: require('./inverse')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat4: require('./transformMat4')\n  , transformMat3: require('./transformMat3')\n  , transformQuat: require('./transformQuat')\n  , rotateX: require('./rotateX')\n  , rotateY: require('./rotateY')\n  , rotateZ: require('./rotateZ')\n  , forEach: require('./forEach')\n}\n", "\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n", "var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n", "\"use strict\"\n\nfunction traceRay_impl( getVoxel,\n\tpx, py, pz,\n\tdx, dy, dz,\n\tmax_d, hit_pos, hit_norm) {\n\t\n\t// consider raycast vector to be parametrized by t\n\t//   vec = [px,py,pz] + t * [dx,dy,dz]\n\t\n\t// algo below is as described by this paper:\n\t// http://www.cse.chalmers.se/edu/year/2010/course/TDA361/grid.pdf\n\t\n\tvar t = 0.0\n\t\t, floor = Math.floor\n\t\t, ix = floor(px) | 0\n\t\t, iy = floor(py) | 0\n\t\t, iz = floor(pz) | 0\n\n\t\t, stepx = (dx > 0) ? 1 : -1\n\t\t, stepy = (dy > 0) ? 1 : -1\n\t\t, stepz = (dz > 0) ? 1 : -1\n\t\t\n\t// dx,dy,dz are already normalized\n\t\t, txDelta = Math.abs(1 / dx)\n\t\t, tyDelta = Math.abs(1 / dy)\n\t\t, tzDelta = Math.abs(1 / dz)\n\n\t\t, xdist = (stepx > 0) ? (ix + 1 - px) : (px - ix)\n\t\t, ydist = (stepy > 0) ? (iy + 1 - py) : (py - iy)\n\t\t, zdist = (stepz > 0) ? (iz + 1 - pz) : (pz - iz)\n\t\t\n\t// location of nearest voxel boundary, in units of t \n\t\t, txMax = (txDelta < Infinity) ? txDelta * xdist : Infinity\n\t\t, tyMax = (tyDelta < Infinity) ? tyDelta * ydist : Infinity\n\t\t, tzMax = (tzDelta < Infinity) ? tzDelta * zdist : Infinity\n\n\t\t, steppedIndex = -1\n\t\n\t// main loop along raycast vector\n\twhile (t <= max_d) {\n\t\t\n\t\t// exit check\n\t\tvar b = getVoxel(ix, iy, iz)\n\t\tif (b) {\n\t\t\tif (hit_pos) {\n\t\t\t\thit_pos[0] = px + t * dx\n\t\t\t\thit_pos[1] = py + t * dy\n\t\t\t\thit_pos[2] = pz + t * dz\n\t\t\t}\n\t\t\tif (hit_norm) {\n\t\t\t\thit_norm[0] = hit_norm[1] = hit_norm[2] = 0\n\t\t\t\tif (steppedIndex === 0) hit_norm[0] = -stepx\n\t\t\t\tif (steppedIndex === 1) hit_norm[1] = -stepy\n\t\t\t\tif (steppedIndex === 2) hit_norm[2] = -stepz\n\t\t\t}\n\t\t\treturn b\n\t\t}\n\t\t\n\t\t// advance t to next nearest voxel boundary\n\t\tif (txMax < tyMax) {\n\t\t\tif (txMax < tzMax) {\n\t\t\t\tix += stepx\n\t\t\t\tt = txMax\n\t\t\t\ttxMax += txDelta\n\t\t\t\tsteppedIndex = 0\n\t\t\t} else {\n\t\t\t\tiz += stepz\n\t\t\t\tt = tzMax\n\t\t\t\ttzMax += tzDelta\n\t\t\t\tsteppedIndex = 2\n\t\t\t}\n\t\t} else {\n\t\t\tif (tyMax < tzMax) {\n\t\t\t\tiy += stepy\n\t\t\t\tt = tyMax\n\t\t\t\ttyMax += tyDelta\n\t\t\t\tsteppedIndex = 1\n\t\t\t} else {\n\t\t\t\tiz += stepz\n\t\t\t\tt = tzMax\n\t\t\t\ttzMax += tzDelta\n\t\t\t\tsteppedIndex = 2\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\t// no voxel hit found\n\tif (hit_pos) {\n\t\thit_pos[0] = px + t * dx\n\t\thit_pos[1] = py + t * dy\n\t\thit_pos[2] = pz + t * dz\n\t}\n\tif (hit_norm) {\n\t\thit_norm[0] = hit_norm[1] = hit_norm[2] = 0\n\t}\n\n\treturn 0\n\n}\n\n\n// conform inputs\n\nfunction traceRay(getVoxel, origin, direction, max_d, hit_pos, hit_norm) {\n\tvar px = +origin[0]\n\t\t, py = +origin[1]\n\t\t, pz = +origin[2]\n\t\t, dx = +direction[0]\n\t\t, dy = +direction[1]\n\t\t, dz = +direction[2]\n\t\t, ds = Math.sqrt(dx * dx + dy * dy + dz * dz)\n\n\tif (ds === 0) {\n\t\tthrow new Error(\"Can't raycast along a zero vector\")\n\t}\n\n\tdx /= ds\n\tdy /= ds\n\tdz /= ds\n\tif (typeof (max_d) === \"undefined\") {\n\t\tmax_d = 64.0\n\t} else {\n\t\tmax_d = +max_d\n\t}\n\treturn traceRay_impl(getVoxel, px, py, pz, dx, dy, dz, max_d, hit_pos, hit_norm)\n}\n\nmodule.exports = traceRay", "'use strict'\n\n\n// reused array instances\n\nvar tr_arr = []\nvar ldi_arr = []\nvar tri_arr = []\nvar step_arr = []\nvar tDelta_arr = []\nvar tNext_arr = []\nvar vec_arr = []\nvar normed_arr = []\nvar base_arr = []\nvar max_arr = []\nvar left_arr = []\nvar result_arr = []\n\n\n\n// core implementation:\n\nfunction sweep_impl(getVoxel, callback, vec, base, max, epsilon) {\n\n    // consider algo as a raycast along the AABB's leading corner\n    // as raycast enters each new voxel, iterate in 2D over the AABB's \n    // leading face in that axis looking for collisions\n    // \n    // original raycast implementation: https://github.com/andyhall/fast-voxel-raycast\n    // original raycast paper: http://www.cse.chalmers.se/edu/year/2010/course/TDA361/grid.pdf\n\n    var tr = tr_arr\n    var ldi = ldi_arr\n    var tri = tri_arr\n    var step = step_arr\n    var tDelta = tDelta_arr\n    var tNext = tNext_arr\n    var normed = normed_arr\n\n    var floor = Math.floor\n    var cumulative_t = 0.0\n    var t = 0.0\n    var max_t = 0.0\n    var axis = 0\n    var i = 0\n\n\n    // init for the current sweep vector and take first step\n    initSweep()\n    if (max_t === 0) return 0\n\n    axis = stepForward()\n\n    // loop along raycast vector\n    while (t <= max_t) {\n\n        // sweeps over leading face of AABB\n        if (checkCollision(axis)) {\n            // calls the callback and decides whether to continue\n            var done = handleCollision()\n            if (done) return cumulative_t\n        }\n\n        axis = stepForward()\n    }\n\n    // reached the end of the vector unobstructed, finish and exit\n    cumulative_t += max_t\n    for (i = 0; i < 3; i++) {\n        base[i] += vec[i]\n        max[i] += vec[i]\n    }\n    return cumulative_t\n\n\n\n\n\n    // low-level implementations of each step:\n    function initSweep() {\n\n        // parametrization t along raycast\n        t = 0.0\n        max_t = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2])\n        if (max_t === 0) return\n        for (var i = 0; i < 3; i++) {\n            var dir = (vec[i] >= 0)\n            step[i] = dir ? 1 : -1\n            // trailing / trailing edge coords\n            var lead = dir ? max[i] : base[i]\n            tr[i] = dir ? base[i] : max[i]\n            // int values of lead/trail edges\n            ldi[i] = leadEdgeToInt(lead, step[i])\n            tri[i] = trailEdgeToInt(tr[i], step[i])\n            // normed vector\n            normed[i] = vec[i] / max_t\n            // distance along t required to move one voxel in each axis\n            tDelta[i] = Math.abs(1 / normed[i])\n            // location of nearest voxel boundary, in units of t \n            var dist = dir ? (ldi[i] + 1 - lead) : (lead - ldi[i])\n            tNext[i] = (tDelta[i] < Infinity) ? tDelta[i] * dist : Infinity\n        }\n\n    }\n\n\n    // check for collisions - iterate over the leading face on the advancing axis\n\n    function checkCollision(i_axis) {\n        var stepx = step[0]\n        var x0 = (i_axis === 0) ? ldi[0] : tri[0]\n        var x1 = ldi[0] + stepx\n\n        var stepy = step[1]\n        var y0 = (i_axis === 1) ? ldi[1] : tri[1]\n        var y1 = ldi[1] + stepy\n\n        var stepz = step[2]\n        var z0 = (i_axis === 2) ? ldi[2] : tri[2]\n        var z1 = ldi[2] + stepz\n\n        // var j_axis = (i_axis + 1) % 3\n        // var k_axis = (i_axis + 2) % 3\n        // var s = ['x', 'y', 'z'][i_axis]\n        // var js = ['x', 'y', 'z'][j_axis]\n        // var ks = ['x', 'y', 'z'][k_axis]\n        // var i0 = [x0, y0, z0][i_axis]\n        // var j0 = [x0, y0, z0][j_axis]\n        // var k0 = [x0, y0, z0][k_axis]\n        // var i1 = [x1 - stepx, y1 - stepy, z1 - stepz][i_axis]\n        // var j1 = [x1 - stepx, y1 - stepy, z1 - stepz][j_axis]\n        // var k1 = [x1 - stepx, y1 - stepy, z1 - stepz][k_axis]\n        // console.log('=== step', s, 'to', i0, '   sweep', js, j0 + ',' + j1, '   ', ks, k0 + ',' + k1)\n\n        for (var x = x0; x != x1; x += stepx) {\n            for (var y = y0; y != y1; y += stepy) {\n                for (var z = z0; z != z1; z += stepz) {\n                    if (getVoxel(x, y, z)) return true\n                }\n            }\n        }\n        return false\n    }\n\n\n    // on collision - call the callback and return or set up for the next sweep\n\n    function handleCollision() {\n\n        // set up for callback\n        cumulative_t += t\n        var dir = step[axis]\n\n        // vector moved so far, and left to move\n        var done = t / max_t\n        var left = left_arr\n        for (i = 0; i < 3; i++) {\n            var dv = vec[i] * done\n            base[i] += dv\n            max[i] += dv\n            left[i] = vec[i] - dv\n        }\n\n        // set leading edge of stepped axis exactly to voxel boundary\n        // else we'll sometimes rounding error beyond it\n        if (dir > 0) {\n            max[axis] = Math.round(max[axis])\n        } else {\n            base[axis] = Math.round(base[axis])\n        }\n        \n        // call back to let client update the \"left to go\" vector\n        var res = callback(cumulative_t, axis, dir, left)\n\n        // bail out out on truthy response\n        if (res) return true\n\n        // init for new sweep along vec\n        for (i = 0; i < 3; i++) vec[i] = left[i]\n        initSweep()\n        if (max_t === 0) return true // no vector left\n\n        return false\n    }\n\n\n    // advance to next voxel boundary, and return which axis was stepped\n\n    function stepForward() {\n        var axis = (tNext[0] < tNext[1]) ?\n            ((tNext[0] < tNext[2]) ? 0 : 2) :\n            ((tNext[1] < tNext[2]) ? 1 : 2)\n        var dt = tNext[axis] - t\n        t = tNext[axis]\n        ldi[axis] += step[axis]\n        tNext[axis] += tDelta[axis]\n        for (i = 0; i < 3; i++) {\n            tr[i] += dt * normed[i]\n            tri[i] = trailEdgeToInt(tr[i], step[i])\n        }\n\n        return axis\n    }\n\n\n\n    function leadEdgeToInt(coord, step) {\n        return floor(coord - step * epsilon)\n    }\n    function trailEdgeToInt(coord, step) {\n        return floor(coord + step * epsilon)\n    }\n\n}\n\n\n\n\n\n// conform inputs\n\nfunction sweep(getVoxel, box, dir, callback, noTranslate, epsilon) {\n\n    var vec = vec_arr\n    var base = base_arr\n    var max = max_arr\n    var result = result_arr\n\n    // init parameter float arrays\n    for (var i = 0; i < 3; i++) {\n        vec[i] = +dir[i]\n        max[i] = +box.max[i]\n        base[i] = +box.base[i]\n    }\n\n    if (!epsilon) epsilon = 1e-10\n\n    // run sweep implementation\n    var dist = sweep_impl(getVoxel, callback, vec, base, max, epsilon)\n\n    // translate box by distance needed to updated base value\n    if (!noTranslate) {\n        for (i = 0; i < 3; i++) {\n            result[i] = (dir[i] > 0) ? max[i] - box.max[i] : base[i] - box.base[i]\n        }\n        box.translate(result)\n    }\n\n    // return value is total distance moved (not necessarily magnitude of [end]-[start])\n    return dist\n}\n\nmodule.exports = sweep\n\n", "\n\n/*\n * \n *      Encapsulates (mostly) a collection of objects, \n *      exposed both as a hash and as an array\n *      _map maps hash id to list index\n * \n *      Note this is a dumb store, it doesn't check any inputs at all.\n *      It also assumes every stored data object is stored like:\n *          dataStore.add(37, {__id:37} )\n * \n*/\n\n\nmodule.exports = class DataStore {\n\n    constructor() {\n        this.list = []\n        this.hash = {}\n        this._map = {}\n        this._pendingRemovals = []\n    }\n\n\n    // add a new state object\n    add(id, stateObject) {\n        if (typeof this._map[id] === 'number') {\n            // this happens if id is removed/readded without flushing\n            var index = this._map[id]\n            this.hash[id] = stateObject\n            this.list[index] = stateObject\n        } else {\n            this._map[id] = this.list.length\n            this.hash[id] = stateObject\n            this.list.push(stateObject)\n        }\n    }\n\n\n    // remove - nulls the state object, actual removal comes later\n    remove(id) {\n        var index = this._map[id]\n        this.hash[id] = null\n        this.list[index] = null\n        this._pendingRemovals.push(id)\n    }\n\n\n    // just sever references\n    dispose() {\n        this.list = null\n        this.hash = null\n        this._map = null\n        this._pendingRemovals.length = 0\n    }\n\n\n    // deletes removed objects from data structures\n    flush() {\n        for (var i = 0; i < this._pendingRemovals.length; i++) {\n            var id = this._pendingRemovals[i]\n            // removal might have been reversed, or already handled\n            if (this.hash[id] !== null) continue\n            removeElement(this, id)\n        }\n        this._pendingRemovals.length = 0\n    }\n\n}\n\n\n/*\n * \n *      actual remove / cleanup logic, fixes up data structures after removal\n * \n * \n*/\n\n\nfunction removeElement(data, id) {\n    // current location of this element in the list\n    var index = data._map[id]\n    // for hash and map, just delete by id\n    delete data.hash[id]\n    delete data._map[id]\n    // now splice - either by popping or by swapping with final element\n    if (index === data.list.length - 1) {\n        data.list.pop()\n    } else {\n        // swap last item with the one we're removing\n        var swapped = data.list.pop()\n        data.list[index] = swapped\n        // need to fix _map for swapped item\n        if (swapped === null || swapped[0] === null) {\n            // slowest but rarest case - swapped item is ALSO pending removal\n            var prevIndex = data.list.length\n            for (var swapID in data._map) {\n                if (data._map[swapID] === prevIndex) {\n                    data._map[swapID] = index\n                    return\n                }\n            }\n        } else {\n            var swappedID = swapped.__id || swapped[0].__id\n            data._map[swappedID] = index\n        }\n    }\n}\n\n\n", "\nmodule.exports = ECS\nvar DataStore = require('./dataStore')\n\n\n\n/*!\n * ent-comp: a light, *fast* Entity Component System in JS\n * @url      github.com/fenomas/ent-comp\n * @author   Andy Hall <andy@fenomas.com>\n * @license  MIT\n*/\n\n\n\n/**\n * Constructor for a new entity-component-system manager.\n * \n * ```js\n * var ECS = require('ent-comp')\n * var ecs = new ECS()\n * ```\n * @class\n * @constructor\n * @exports ECS\n * @typicalname ecs\n*/\n\nfunction ECS() {\n\tvar self = this\n\n\t/** \n\t * Hash of component definitions. Also aliased to `comps`.\n\t * \n\t * ```js\n\t * var comp = { name: 'foo' }\n\t * ecs.createComponent(comp)\n\t * ecs.components['foo'] === comp  // true\n\t * ecs.comps['foo']                // same\n\t * ```\n\t*/\n\tthis.components = {}\n\tthis.comps = this.components\n\n\n\n\t/*\n\t * \n\t * \t\tinternal properties:\n\t * \n\t*/\n\n\tvar components = this.components\n\n\t// counter for entity IDs\n\tvar UID = 1\n\n\t// Storage for all component state data:\n\t// storage['component-name'] = DataStore instance\n\tvar storage = {}\n\n\t// flat arrays of names of components with systems\n\tvar systems = []\n\tvar renderSystems = []\n\n\t// flags and arrays for deferred cleanup of removed stuff\n\tvar deferrals = {\n\t\ttimeout: false,\n\t\tremovals: [],\n\t\tmultiComps: [],\n\t}\n\n\t// expose references to internals for debugging or hacking\n\tthis._storage = storage\n\tthis._systems = systems\n\tthis._renderSystems = renderSystems\n\n\n\n\n\n\t/*\n\t * \n\t * \n\t * \t\t\t\tPublic API\n\t * \n\t * \n\t*/\n\n\n\n\n\t/**\n\t * Creates a new entity id (currently just an incrementing integer).\n\t * \n\t * Optionally takes a list of component names to add to the entity (with default state data).\n\t * \n\t * ```js\n\t * var id1 = ecs.createEntity()\n\t * var id2 = ecs.createEntity([ 'some-component', 'other-component' ])\n\t * ```\n\t*/\n\tthis.createEntity = function (compList) {\n\t\tvar id = UID++\n\t\tif (Array.isArray(compList)) {\n\t\t\tcompList.forEach(compName => self.addComponent(id, compName))\n\t\t}\n\t\treturn id\n\t}\n\n\n\n\t/**\n\t * Deletes an entity, which in practice means removing all its components.\n\t * \n\t * ```js\n\t * ecs.deleteEntity(id)\n\t * ```\n\t*/\n\tthis.deleteEntity = function (entID) {\n\t\t// loop over all components and maybe remove them\n\t\t// this avoids needing to keep a list of components-per-entity\n\t\tObject.keys(storage).forEach(compName => {\n\t\t\tvar data = storage[compName]\n\t\t\tif (data.hash[entID]) {\n\t\t\t\tremoveComponent(entID, compName)\n\t\t\t}\n\t\t})\n\t\treturn self\n\t}\n\n\n\n\n\n\n\n\t/**\n\t * Creates a new component from a definition object. \n\t * The definition must have a `name`; all other properties are optional.\n\t * \n\t * Returns the component name, to make it easy to grab when the component\n\t * is being `require`d from a module.\n\t * \n\t * ```js\n\t * var comp = {\n\t * \t name: 'some-unique-string',\n\t * \t state: {},\n\t * \t order: 99,\n\t * \t multi: false,\n\t * \t onAdd:        (id, state) => { },\n\t * \t onRemove:     (id, state) => { },\n\t * \t system:       (dt, states) => { },\n\t * \t renderSystem: (dt, states) => { },\n\t * }\n\t * \n\t * var name = ecs.createComponent( comp )\n\t * // name == 'some-unique-string'\n\t * ```\n\t * \n\t * Note the `multi` flag - for components where this is true, a given \n\t * entity can have multiple state objects for that component.\n\t * For multi-components, APIs that would normally return a state object \n\t * (like `getState`) will instead return an array of them.\n\t*/\n\tthis.createComponent = function (compDefn) {\n\t\tif (!compDefn) throw new Error('Missing component definition')\n\t\tvar name = compDefn.name\n\t\tif (!name) throw new Error('Component definition must have a name property.')\n\t\tif (typeof name !== 'string') throw new Error('Component name must be a string.')\n\t\tif (name === '') throw new Error('Component name must be a non-empty string.')\n\t\tif (storage[name]) throw new Error(`Component ${name} already exists.`)\n\n\t\t// rebuild definition object for monomorphism\n\t\tvar internalDef = {}\n\t\tinternalDef.name = name\n\t\tinternalDef.multi = !!compDefn.multi\n\t\tinternalDef.order = isNaN(compDefn.order) ? 99 : compDefn.order\n\t\tinternalDef.state = compDefn.state || {}\n\t\tinternalDef.onAdd = compDefn.onAdd || null\n\t\tinternalDef.onRemove = compDefn.onRemove || null\n\t\tinternalDef.system = compDefn.system || null\n\t\tinternalDef.renderSystem = compDefn.renderSystem || null\n\n\t\tcomponents[name] = internalDef\n\t\tstorage[name] = new DataStore()\n\t\tstorage[name]._pendingMultiCleanup = false\n\t\tstorage[name]._multiCleanupIDs = (internalDef.multi) ? [] : null\n\n\t\tif (internalDef.system) {\n\t\t\tsystems.push(name)\n\t\t\tsystems.sort((a, b) => components[a].order - components[b].order)\n\t\t}\n\t\tif (internalDef.renderSystem) {\n\t\t\trenderSystems.push(name)\n\t\t\trenderSystems.sort((a, b) => components[a].order - components[b].order)\n\t\t}\n\n\t\treturn name\n\t}\n\n\n\n\n\n\n\t/**\n\t * Overwrites an existing component with a new definition object, which\n\t * must have the same `name` property as the component it overwrites.\n\t * Otherwise identical to `createComponent`\n\t * \n\t * ```js\n\t *   ecs.createComponent({\n\t *     name: 'foo',\n\t *     state: { aaa: 0 },\n\t *   })\n\t *   ecs.addComponent(myEntity, 'foo')\n\t *   ecs.getState(myEntity, 'foo').aaa = 123\n\t *   \n\t *   ecs.overwriteComponent('foo', {\n\t *\t   name: 'foo',\n\t *\t   state: { bbb: 456 },\n\t *\t })\n\t *   ecs.getState(myEntity, 'foo')  // { aaa:123, bbb:456 }\n\t * ```\n\t * \n\t*/\n\tthis.overwriteComponent = function (compName, compDefn) {\n\t\tvar def = components[compName]\n\t\tif (!def) throw new Error(`Unknown component: ${compName}`)\n\t\tif (!compDefn) throw new Error('Missing component definition')\n\t\tif (def.name !== compDefn.name) throw new Error('Overwriting component must use the same name property.')\n\n\t\t// rebuild definition object for monomorphism\n\t\tvar internalDef = {}\n\t\tinternalDef.name = compName\n\t\tinternalDef.multi = !!compDefn.multi\n\t\tinternalDef.order = isNaN(compDefn.order) ? 99 : compDefn.order\n\t\tinternalDef.state = compDefn.state || {}\n\t\tinternalDef.onAdd = compDefn.onAdd || null\n\t\tinternalDef.onRemove = compDefn.onRemove || null\n\t\tinternalDef.system = compDefn.system || null\n\t\tinternalDef.renderSystem = compDefn.renderSystem || null\n\n\t\t// overwrite internal references to old component def\n\t\tcomponents[compName] = internalDef\n\t\tstorage[compName]._pendingMultiCleanup = false\n\t\tstorage[compName]._multiCleanupIDs = (internalDef.multi) ? [] : null\n\n\t\tvar si = systems.indexOf(compName)\n\t\tif (internalDef.system && si < 0) systems.push(compName)\n\t\tif (!internalDef.system && si >= 0) systems.splice(si, 1)\n\t\tsystems.sort((a, b) => components[a].order - components[b].order)\n\n\t\tvar ri = renderSystems.indexOf(compName)\n\t\tif (internalDef.renderSystem && ri < 0) renderSystems.push(compName)\n\t\tif (!internalDef.renderSystem && ri >= 0) renderSystems.splice(ri, 1)\n\t\trenderSystems.sort((a, b) => components[a].order - components[b].order)\n\n\t\t// for any existing entities with the component,\n\t\t// add any default state properties they're missing\n\t\tvar baseState = internalDef.state\n\t\tthis.getStatesList(compName).forEach(state => {\n\t\t\tfor (var key in baseState) {\n\t\t\t\tif (!(key in state)) state[key] = baseState[key]\n\t\t\t}\n\t\t\t// also call the new comp's add handler, if any\n\t\t\tif (internalDef.onAdd) internalDef.onAdd(state.__id, state)\n\t\t})\n\n\n\t\treturn compName\n\t}\n\n\n\n\n\n\n\n\t/**\n\t * Deletes the component definition with the given name. \n\t * First removes the component from all entities that have it.\n\t * \n\t * **Note:** This API shouldn't be necessary in most real-world usage - \n\t * you should set up all your components during init and then leave them be.\n\t * But it's useful if, say, you receive an ECS from another library and \n\t * you need to replace its components.\n\t * \n\t * ```js\n\t * ecs.deleteComponent( 'some-component' )\n\t * ```\n\t*/\n\tthis.deleteComponent = function (compName) {\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}`)\n\n\t\tdata.flush()\n\t\tdata.list.forEach(obj => {\n\t\t\tif (!obj) return\n\t\t\tvar id = obj.__id || obj[0].__id\n\t\t\tremoveComponent(id, compName)\n\t\t})\n\n\t\tvar i = systems.indexOf(compName)\n\t\tvar j = renderSystems.indexOf(compName)\n\t\tif (i > -1) systems.splice(i, 1)\n\t\tif (j > -1) renderSystems.splice(j, 1)\n\n\t\tstorage[compName].dispose()\n\t\tdelete storage[compName]\n\t\tdelete components[compName]\n\n\t\treturn self\n\t}\n\n\n\n\n\t/**\n\t * Adds a component to an entity, optionally initializing the state object.\n\t * \n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: 'foo',\n\t * \tstate: { val: 1 }\n\t * })\n\t * ecs.addComponent(id1, 'foo')             // use default state\n\t * ecs.addComponent(id2, 'foo', { val:2 })  // pass in state data\n\t * ```\n\t*/\n\tthis.addComponent = function (entID, compName, state) {\n\t\tvar def = components[compName]\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\n\t\t// treat adding an existing (non-multi-) component as an error\n\t\tif (data.hash[entID] && !def.multi) {\n\t\t\tthrow new Error(`Entity ${entID} already has component: ${compName}.`)\n\t\t}\n\n\t\t// create new component state object for this entity\n\t\tvar newState = Object.assign({}, { __id: entID }, def.state, state)\n\n\t\t// just in case passed-in state object had an __id property\n\t\tnewState.__id = entID\n\n\t\t// add to data store - for multi components, may already be present\n\t\tif (def.multi) {\n\t\t\tvar statesArr = data.hash[entID]\n\t\t\tif (!statesArr) {\n\t\t\t\tstatesArr = []\n\t\t\t\tdata.add(entID, statesArr)\n\t\t\t}\n\t\t\tstatesArr.push(newState)\n\t\t} else {\n\t\t\tdata.add(entID, newState)\n\t\t}\n\n\t\t// call handler and return\n\t\tif (def.onAdd) def.onAdd(entID, newState)\n\n\t\treturn this\n\t}\n\n\n\n\t/**\n\t * Checks if an entity has a component.\n\t * \n\t * ```js\n\t * ecs.addComponent(id, 'foo')\n\t * ecs.hasComponent(id, 'foo')       // true\n\t * ```\n\t*/\n\n\tthis.hasComponent = function (entID, compName) {\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\t\treturn !!data.hash[entID]\n\t}\n\n\n\n\n\n\t/**\n\t * Removes a component from an entity, triggering the component's \n\t * `onRemove` handler, and then deleting any state data.\n\t * \n\t * ```js\n\t * ecs.removeComponent(id, 'foo')\n\t * ecs.hasComponent(id, 'foo')     \t // false\n\t * ```\n\t*/\n\tthis.removeComponent = function (entID, compName) {\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\n\t\t// removal implementations at end\n\t\tremoveComponent(entID, compName)\n\n\t\treturn self\n\t}\n\n\n\n\n\n\t/**\n\t * Get the component state for a given entity.\n\t * It will automatically have an `__id` property for the entity id.\n\t * \n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: 'foo',\n\t * \tstate: { val: 0 }\n\t * })\n\t * ecs.addComponent(id, 'foo')\n\t * ecs.getState(id, 'foo').val       // 0\n\t * ecs.getState(id, 'foo').__id      // equals id\n\t * ```\n\t*/\n\n\tthis.getState = function (entID, compName) {\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\t\treturn data.hash[entID]\n\t}\n\n\n\n\n\t/**\n\t * Get an array of state objects for every entity with the given component. \n\t * Each one will have an `__id` property for the entity id it refers to.\n\t * Don't add or remove elements from the returned list!\n\t * \n\t * ```js\n\t * var arr = ecs.getStatesList('foo')\n\t * // returns something shaped like:\n\t * //   [\n\t * //     {__id:0, x:1},\n\t * //     {__id:7, x:2},\n\t * //   ]\n\t * ```  \n\t*/\n\n\tthis.getStatesList = function (compName) {\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\t\tdoDeferredCleanup(data)\n\t\treturn data.list\n\t}\n\n\n\n\n\t/**\n\t * Makes a `getState`-like accessor bound to a given component. \n\t * The accessor is faster than `getState`, so you may want to create \n\t * an accessor for any component you'll be accessing a lot.\n\t * \n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: 'size',\n\t * \tstate: { val: 0 }\n\t * })\n\t * var getEntitySize = ecs.getStateAccessor('size')\n\t * // ...\n\t * ecs.addComponent(id, 'size', { val:123 })\n\t * getEntitySize(id).val      // 123\n\t * ```  \n\t*/\n\n\tthis.getStateAccessor = function (compName) {\n\t\tif (!storage[compName]) throw new Error(`Unknown component: ${compName}.`)\n\t\tvar hash = storage[compName].hash\n\t\treturn (id) => hash[id]\n\t}\n\n\n\n\n\t/**\n\t * Makes a `hasComponent`-like accessor function bound to a given component. \n\t * The accessor is much faster than `hasComponent`.\n\t * \n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: 'foo',\n\t * })\n\t * var hasFoo = ecs.getComponentAccessor('foo')\n\t * // ...\n\t * ecs.addComponent(id, 'foo')\n\t * hasFoo(id) // true\n\t * ```  \n\t*/\n\n\tthis.getComponentAccessor = function (compName) {\n\t\tif (!storage[compName]) throw new Error(`Unknown component: ${compName}.`)\n\t\tvar hash = storage[compName].hash\n\t\treturn (id) => !!hash[id]\n\t}\n\n\n\n\n\n\t/**\n\t * Tells the ECS that a game tick has occurred, causing component \n\t * `system` functions to get called.\n\t * \n\t * The optional parameter simply gets passed to the system functions. \n\t * It's meant to be a timestep, but can be used (or not used) as you like.    \n\t * \n\t * If components have an `order` property, they'll get called in that order\n\t * (lowest to highest). Component order defaults to `99`.\n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: foo,\n\t * \torder: 1,\n\t * \tsystem: function(dt, states) {\n\t * \t\t// states is the same array you'd get from #getStatesList()\n\t * \t\tstates.forEach(state => {\n\t * \t\t\tconsole.log('Entity ID: ', state.__id)\n\t * \t\t})\n\t * \t}\n\t * })\n\t * ecs.tick(30) // triggers log statements\n\t * ```\n\t*/\n\n\tthis.tick = function (dt) {\n\t\tdoDeferredCleanup()\n\t\tfor (var i = 0; i < systems.length; i++) {\n\t\t\tvar compName = systems[i]\n\t\t\tvar comp = components[compName]\n\t\t\tvar data = storage[compName]\n\t\t\tcomp.system(dt, data.list)\n\t\t\tdoDeferredCleanup()\n\t\t}\n\t\treturn self\n\t}\n\n\n\n\t/**\n\t * Functions exactly like `tick`, but calls `renderSystem` functions.\n\t * this effectively gives you a second set of systems that are \n\t * called with separate timing, in case you want to \n\t * [tick and render in separate loops](http://gafferongames.com/game-physics/fix-your-timestep/)\n\t * (which you should!).\n\t * \n\t * ```js\n\t * ecs.createComponent({\n\t * \tname: foo,\n\t * \torder: 5,\n\t * \trenderSystem: function(dt, states) {\n\t * \t\t// states is the same array you'd get from #getStatesList()\n\t * \t}\n\t * })\n\t * ecs.render(1000/60)\n\t * ```\n\t*/\n\n\tthis.render = function (dt) {\n\t\tdoDeferredCleanup()\n\t\tfor (var i = 0; i < renderSystems.length; i++) {\n\t\t\tvar compName = renderSystems[i]\n\t\t\tvar comp = components[compName]\n\t\t\tvar data = storage[compName]\n\t\t\tcomp.renderSystem(dt, data.list)\n\t\t\tdoDeferredCleanup()\n\t\t}\n\t\treturn self\n\t}\n\n\n\n\n\t/**\n\t * Removes one particular instance of a multi-component.\n\t * To avoid breaking loops, the relevant state object will get nulled\n\t * immediately, and spliced from the states array later when safe \n\t * (after the current tick/render/animationFrame).\n\t * \n\t * ```js\n\t * // where component 'foo' is a multi-component\n\t * ecs.getState(id, 'foo')   // [ state1, state2, state3 ]\n\t * ecs.removeMultiComponent(id, 'foo', 1)\n\t * ecs.getState(id, 'foo')   // [ state1, null, state3 ]\n\t * // one JS event loop later...\n\t * ecs.getState(id, 'foo')   // [ state1, state3 ]\n\t * ```\n\t */\n\tthis.removeMultiComponent = function (entID, compName, index) {\n\t\tvar def = components[compName]\n\t\tvar data = storage[compName]\n\t\tif (!data) throw new Error(`Unknown component: ${compName}.`)\n\t\tif (!def.multi) throw new Error('removeMultiComponent called on non-multi component')\n\n\t\t// removal implementations at end\n\t\tremoveMultiCompElement(entID, def, data, index)\n\n\t\treturn self\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t/*\n\t * \n\t * \n\t *\t\tinternal implementations of remove/delete operations\n\t * \t\ta bit hairy due to deferred cleanup, etc.\n\t * \n\t * \n\t*/\n\n\n\t// remove given component from an entity\n\tfunction removeComponent(entID, compName) {\n\t\tvar def = components[compName]\n\t\tvar data = storage[compName]\n\n\t\t// fail silently on all cases where removal target isn't present,\n\t\t// since multiple pieces of logic often remove/delete simultaneously\n\t\tvar state = data.hash[entID]\n\t\tif (!state) return\n\n\t\t// null out data now, so overlapped remove events won't fire\n\t\tdata.remove(entID)\n\n\t\t// call onRemove handler - on each instance for multi components\n\t\tif (def.onRemove) {\n\t\t\tif (def.multi) {\n\t\t\t\tstate.forEach(state => {\n\t\t\t\t\tif (state) def.onRemove(entID, state)\n\t\t\t\t})\n\t\t\t\tstate.length = 0\n\t\t\t} else {\n\t\t\t\tdef.onRemove(entID, state)\n\t\t\t}\n\t\t}\n\n\t\tdeferrals.removals.push(data)\n\t\tpingDeferrals()\n\t}\n\n\n\t// remove one state from a multi component\n\tfunction removeMultiCompElement(entID, def, data, index) {\n\t\t// if statesArr isn't present there's no work or cleanup to do\n\t\tvar statesArr = data.hash[entID]\n\t\tif (!statesArr) return\n\n\t\t// as above, ignore cases where removal target doesn't exist\n\t\tvar state = statesArr[index]\n\t\tif (!state) return\n\n\t\t// null out element and fire event\n\t\tstatesArr[index] = null\n\t\tif (def.onRemove) def.onRemove(entID, state)\n\n\t\tdeferrals.multiComps.push({ entID, data })\n\t\tpingDeferrals()\n\t}\n\n\n\n\n\n\n\n\t// rigging\n\tfunction pingDeferrals() {\n\t\tif (deferrals.timeout) return\n\t\tdeferrals.timeout = true\n\t\tsetTimeout(deferralHandler, 1)\n\t}\n\n\tfunction deferralHandler() {\n\t\tdeferrals.timeout = false\n\t\tdoDeferredCleanup()\n\t}\n\n\n\t/*\n\t * \n\t *\t\tgeneral handling for deferred data cleanup\n\t * \t\t\t- removes null states if component is multi\n\t * \t\t\t- removes null entries from component dataStore\n\t * \t\tshould be called at safe times - not during state loops\n\t * \n\t*/\n\n\tfunction doDeferredCleanup() {\n\t\tif (deferrals.multiComps.length) {\n\t\t\tdeferredMultiCompCleanup(deferrals.multiComps)\n\t\t}\n\t\tif (deferrals.removals.length) {\n\t\t\tdeferredComponentCleanup(deferrals.removals)\n\t\t}\n\t}\n\n\t// removes null elements from multi-comp state arrays\n\tfunction deferredMultiCompCleanup(list) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tvar { entID, data } = list[i]\n\t\t\tvar statesArr = data.hash[entID]\n\t\t\tif (!statesArr) continue\n\t\t\tfor (var j = 0; j < statesArr.length; j++) {\n\t\t\t\tif (statesArr[j]) continue\n\t\t\t\tstatesArr.splice(j, 1)\n\t\t\t\tj--\n\t\t\t}\n\t\t\t// if this leaves the states list empty, remove the whole component\n\t\t\tif (statesArr.length === 0) {\n\t\t\t\tdata.remove(entID)\n\t\t\t\tdeferrals.removals.push(data)\n\t\t\t}\n\t\t}\n\t\tlist.length = 0\n\t}\n\n\t// flushes dataStore after components have been removed\n\tfunction deferredComponentCleanup(list) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tvar data = list[i]\n\t\t\tdata.flush()\n\t\t}\n\t\tlist.length = 0\n\t}\n\n\n\n}\n\n", "/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n", "\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n", "'use strict'\n\nvar bits = require('bit-twiddle')\nvar dup = require('dup')\nvar isBuffer = require('is-buffer')\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8   : dup([32, 0])\n    , UINT16  : dup([32, 0])\n    , UINT32  : dup([32, 0])\n    , INT8    : dup([32, 0])\n    , INT16   : dup([32, 0])\n    , INT32   : dup([32, 0])\n    , FLOAT   : dup([32, 0])\n    , DOUBLE  : dup([32, 0])\n    , DATA    : dup([32, 0])\n    , UINT8C  : dup([32, 0])\n    , BUFFER  : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'buffer':\n        throw 'Buffer not supported'\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}", "'use strict';\n\n//This code is extracted from ndarray-sort\n//It is inlined here as a temporary workaround\n\nmodule.exports = wrapper;\n\nvar INSERT_SORT_CUTOFF = 32\n\nfunction wrapper(data, n0) {\n  if (n0 <= 4*INSERT_SORT_CUTOFF) {\n    insertionSort(0, n0 - 1, data);\n  } else {\n    quickSort(0, n0 - 1, data);\n  }\n}\n\nfunction insertionSort(left, right, data) {\n  var ptr = 2*(left+1)\n  for(var i=left+1; i<=right; ++i) {\n    var a = data[ptr++]\n    var b = data[ptr++]\n    var j = i\n    var jptr = ptr-2\n    while(j-- > left) {\n      var x = data[jptr-2]\n      var y = data[jptr-1]\n      if(x < a) {\n        break\n      } else if(x === a && y < b) {\n        break\n      }\n      data[jptr]   = x\n      data[jptr+1] = y\n      jptr -= 2\n    }\n    data[jptr]   = a\n    data[jptr+1] = b\n  }\n}\n\nfunction swap(i, j, data) {\n  i *= 2\n  j *= 2\n  var x = data[i]\n  var y = data[i+1]\n  data[i] = data[j]\n  data[i+1] = data[j+1]\n  data[j] = x\n  data[j+1] = y\n}\n\nfunction move(i, j, data) {\n  i *= 2\n  j *= 2\n  data[i] = data[j]\n  data[i+1] = data[j+1]\n}\n\nfunction rotate(i, j, k, data) {\n  i *= 2\n  j *= 2\n  k *= 2\n  var x = data[i]\n  var y = data[i+1]\n  data[i] = data[j]\n  data[i+1] = data[j+1]\n  data[j] = data[k]\n  data[j+1] = data[k+1]\n  data[k] = x\n  data[k+1] = y\n}\n\nfunction shufflePivot(i, j, px, py, data) {\n  i *= 2\n  j *= 2\n  data[i] = data[j]\n  data[j] = px\n  data[i+1] = data[j+1]\n  data[j+1] = py\n}\n\nfunction compare(i, j, data) {\n  i *= 2\n  j *= 2\n  var x = data[i],\n      y = data[j]\n  if(x < y) {\n    return false\n  } else if(x === y) {\n    return data[i+1] > data[j+1]\n  }\n  return true\n}\n\nfunction comparePivot(i, y, b, data) {\n  i *= 2\n  var x = data[i]\n  if(x < y) {\n    return true\n  } else if(x === y) {\n    return data[i+1] < b\n  }\n  return false\n}\n\nfunction quickSort(left, right, data) {\n  var sixth = (right - left + 1) / 6 | 0, \n      index1 = left + sixth, \n      index5 = right - sixth, \n      index3 = left + right >> 1, \n      index2 = index3 - sixth, \n      index4 = index3 + sixth, \n      el1 = index1, \n      el2 = index2, \n      el3 = index3, \n      el4 = index4, \n      el5 = index5, \n      less = left + 1, \n      great = right - 1, \n      tmp = 0\n  if(compare(el1, el2, data)) {\n    tmp = el1\n    el1 = el2\n    el2 = tmp\n  }\n  if(compare(el4, el5, data)) {\n    tmp = el4\n    el4 = el5\n    el5 = tmp\n  }\n  if(compare(el1, el3, data)) {\n    tmp = el1\n    el1 = el3\n    el3 = tmp\n  }\n  if(compare(el2, el3, data)) {\n    tmp = el2\n    el2 = el3\n    el3 = tmp\n  }\n  if(compare(el1, el4, data)) {\n    tmp = el1\n    el1 = el4\n    el4 = tmp\n  }\n  if(compare(el3, el4, data)) {\n    tmp = el3\n    el3 = el4\n    el4 = tmp\n  }\n  if(compare(el2, el5, data)) {\n    tmp = el2\n    el2 = el5\n    el5 = tmp\n  }\n  if(compare(el2, el3, data)) {\n    tmp = el2\n    el2 = el3\n    el3 = tmp\n  }\n  if(compare(el4, el5, data)) {\n    tmp = el4\n    el4 = el5\n    el5 = tmp\n  }\n\n  var pivot1X = data[2*el2]\n  var pivot1Y = data[2*el2+1]\n  var pivot2X = data[2*el4]\n  var pivot2Y = data[2*el4+1]\n\n  var ptr0 = 2 * el1;\n  var ptr2 = 2 * el3;\n  var ptr4 = 2 * el5;\n  var ptr5 = 2 * index1;\n  var ptr6 = 2 * index3;\n  var ptr7 = 2 * index5;\n  for (var i1 = 0; i1 < 2; ++i1) {\n    var x = data[ptr0+i1];\n    var y = data[ptr2+i1];\n    var z = data[ptr4+i1];\n    data[ptr5+i1] = x;\n    data[ptr6+i1] = y;\n    data[ptr7+i1] = z;\n  }\n\n  move(index2, left, data)\n  move(index4, right, data)\n  for (var k = less; k <= great; ++k) {\n    if (comparePivot(k, pivot1X, pivot1Y, data)) {\n      if (k !== less) {\n        swap(k, less, data)\n      }\n      ++less;\n    } else {\n      if (!comparePivot(k, pivot2X, pivot2Y, data)) {\n        while (true) {\n          if (!comparePivot(great, pivot2X, pivot2Y, data)) {\n            if (--great < k) {\n              break;\n            }\n            continue;\n          } else {\n            if (comparePivot(great, pivot1X, pivot1Y, data)) {\n              rotate(k, less, great, data)\n              ++less;\n              --great;\n            } else {\n              swap(k, great, data)\n              --great;\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n  shufflePivot(left, less-1, pivot1X, pivot1Y, data)\n  shufflePivot(right, great+1, pivot2X, pivot2Y, data)\n  if (less - 2 - left <= INSERT_SORT_CUTOFF) {\n    insertionSort(left, less - 2, data);\n  } else {\n    quickSort(left, less - 2, data);\n  }\n  if (right - (great + 2) <= INSERT_SORT_CUTOFF) {\n    insertionSort(great + 2, right, data);\n  } else {\n    quickSort(great + 2, right, data);\n  }\n  if (great - less <= INSERT_SORT_CUTOFF) {\n    insertionSort(less, great, data);\n  } else {\n    quickSort(less, great, data);\n  }\n}", "'use strict'\n\nmodule.exports = {\n  init:           sqInit,\n  sweepBipartite: sweepBipartite,\n  sweepComplete:  sweepComplete,\n  scanBipartite:  scanBipartite,\n  scanComplete:   scanComplete\n}\n\nvar pool  = require('@jpweeks/typedarray-pool')\nvar bits  = require('bit-twiddle')\nvar isort = require('./sort')\n\n//Flag for blue\nvar BLUE_FLAG = (1<<28)\n\n//1D sweep event queue stuff (use pool to save space)\nvar INIT_CAPACITY      = 1024\nvar RED_SWEEP_QUEUE    = pool.mallocInt32(INIT_CAPACITY)\nvar RED_SWEEP_INDEX    = pool.mallocInt32(INIT_CAPACITY)\nvar BLUE_SWEEP_QUEUE   = pool.mallocInt32(INIT_CAPACITY)\nvar BLUE_SWEEP_INDEX   = pool.mallocInt32(INIT_CAPACITY)\nvar COMMON_SWEEP_QUEUE = pool.mallocInt32(INIT_CAPACITY)\nvar COMMON_SWEEP_INDEX = pool.mallocInt32(INIT_CAPACITY)\nvar SWEEP_EVENTS       = pool.mallocDouble(INIT_CAPACITY * 8)\n\n//Reserves memory for the 1D sweep data structures\nfunction sqInit(count) {\n  var rcount = bits.nextPow2(count)\n  if(RED_SWEEP_QUEUE.length < rcount) {\n    pool.free(RED_SWEEP_QUEUE)\n    RED_SWEEP_QUEUE = pool.mallocInt32(rcount)\n  }\n  if(RED_SWEEP_INDEX.length < rcount) {\n    pool.free(RED_SWEEP_INDEX)\n    RED_SWEEP_INDEX = pool.mallocInt32(rcount)\n  }\n  if(BLUE_SWEEP_QUEUE.length < rcount) {\n    pool.free(BLUE_SWEEP_QUEUE)\n    BLUE_SWEEP_QUEUE = pool.mallocInt32(rcount)\n  }\n  if(BLUE_SWEEP_INDEX.length < rcount) {\n    pool.free(BLUE_SWEEP_INDEX)\n    BLUE_SWEEP_INDEX = pool.mallocInt32(rcount)\n  }\n  if(COMMON_SWEEP_QUEUE.length < rcount) {\n    pool.free(COMMON_SWEEP_QUEUE)\n    COMMON_SWEEP_QUEUE = pool.mallocInt32(rcount)\n  }\n  if(COMMON_SWEEP_INDEX.length < rcount) {\n    pool.free(COMMON_SWEEP_INDEX)\n    COMMON_SWEEP_INDEX = pool.mallocInt32(rcount)\n  }\n  var eventLength = 8 * rcount\n  if(SWEEP_EVENTS.length < eventLength) {\n    pool.free(SWEEP_EVENTS)\n    SWEEP_EVENTS = pool.mallocDouble(eventLength)\n  }\n}\n\n//Remove an item from the active queue in O(1)\nfunction sqPop(queue, index, count, item) {\n  var idx = index[item]\n  var top = queue[count-1]\n  queue[idx] = top\n  index[top] = idx\n}\n\n//Insert an item into the active queue in O(1)\nfunction sqPush(queue, index, count, item) {\n  queue[count] = item\n  index[item]  = count\n}\n\n//Recursion base case: use 1D sweep algorithm\nfunction sweepBipartite(\n    d, visit,\n    redStart,  redEnd, red, redIndex,\n    blueStart, blueEnd, blue, blueIndex) {\n\n  //store events as pairs [coordinate, idx]\n  //\n  //  red create:  -(idx+1)\n  //  red destroy: idx\n  //  blue create: -(idx+BLUE_FLAG)\n  //  blue destroy: idx+BLUE_FLAG\n  //\n  var ptr      = 0\n  var elemSize = 2*d\n  var istart   = d-1\n  var iend     = elemSize-1\n\n  for(var i=redStart; i<redEnd; ++i) {\n    var idx = redIndex[i]\n    var redOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = red[redOffset+istart]\n    SWEEP_EVENTS[ptr++] = -(idx+1)\n    SWEEP_EVENTS[ptr++] = red[redOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx\n  }\n\n  for(var i=blueStart; i<blueEnd; ++i) {\n    var idx = blueIndex[i]+BLUE_FLAG\n    var blueOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx\n  }\n\n  //process events from left->right\n  var n = ptr >>> 1\n  isort(SWEEP_EVENTS, n)\n  \n  var redActive  = 0\n  var blueActive = 0\n  for(var i=0; i<n; ++i) {\n    var e = SWEEP_EVENTS[2*i+1]|0\n    if(e >= BLUE_FLAG) {\n      //blue destroy event\n      e = (e-BLUE_FLAG)|0\n      sqPop(BLUE_SWEEP_QUEUE, BLUE_SWEEP_INDEX, blueActive--, e)\n    } else if(e >= 0) {\n      //red destroy event\n      sqPop(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive--, e)\n    } else if(e <= -BLUE_FLAG) {\n      //blue create event\n      e = (-e-BLUE_FLAG)|0\n      for(var j=0; j<redActive; ++j) {\n        var retval = visit(RED_SWEEP_QUEUE[j], e)\n        if(retval !== void 0) {\n          return retval\n        }\n      }\n      sqPush(BLUE_SWEEP_QUEUE, BLUE_SWEEP_INDEX, blueActive++, e)\n    } else {\n      //red create event\n      e = (-e-1)|0\n      for(var j=0; j<blueActive; ++j) {\n        var retval = visit(e, BLUE_SWEEP_QUEUE[j])\n        if(retval !== void 0) {\n          return retval\n        }\n      }\n      sqPush(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive++, e)\n    }\n  }\n}\n\n//Complete sweep\nfunction sweepComplete(d, visit, \n  redStart, redEnd, red, redIndex,\n  blueStart, blueEnd, blue, blueIndex) {\n\n  var ptr      = 0\n  var elemSize = 2*d\n  var istart   = d-1\n  var iend     = elemSize-1\n\n  for(var i=redStart; i<redEnd; ++i) {\n    var idx = (redIndex[i]+1)<<1\n    var redOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = red[redOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n    SWEEP_EVENTS[ptr++] = red[redOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx\n  }\n\n  for(var i=blueStart; i<blueEnd; ++i) {\n    var idx = (blueIndex[i]+1)<<1\n    var blueOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+istart]\n    SWEEP_EVENTS[ptr++] = (-idx)|1\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx|1\n  }\n\n  //process events from left->right\n  var n = ptr >>> 1\n  isort(SWEEP_EVENTS, n)\n  \n  var redActive    = 0\n  var blueActive   = 0\n  var commonActive = 0\n  for(var i=0; i<n; ++i) {\n    var e     = SWEEP_EVENTS[2*i+1]|0\n    var color = e&1\n    if(i < n-1 && (e>>1) === (SWEEP_EVENTS[2*i+3]>>1)) {\n      color = 2\n      i += 1\n    }\n    \n    if(e < 0) {\n      //Create event\n      var id = -(e>>1) - 1\n\n      //Intersect with common\n      for(var j=0; j<commonActive; ++j) {\n        var retval = visit(COMMON_SWEEP_QUEUE[j], id)\n        if(retval !== void 0) {\n          return retval\n        }\n      }\n\n      if(color !== 0) {\n        //Intersect with red\n        for(var j=0; j<redActive; ++j) {\n          var retval = visit(RED_SWEEP_QUEUE[j], id)\n          if(retval !== void 0) {\n            return retval\n          }\n        }\n      }\n\n      if(color !== 1) {\n        //Intersect with blue\n        for(var j=0; j<blueActive; ++j) {\n          var retval = visit(BLUE_SWEEP_QUEUE[j], id)\n          if(retval !== void 0) {\n            return retval\n          }\n        }\n      }\n\n      if(color === 0) {\n        //Red\n        sqPush(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive++, id)\n      } else if(color === 1) {\n        //Blue\n        sqPush(BLUE_SWEEP_QUEUE, BLUE_SWEEP_INDEX, blueActive++, id)\n      } else if(color === 2) {\n        //Both\n        sqPush(COMMON_SWEEP_QUEUE, COMMON_SWEEP_INDEX, commonActive++, id)\n      }\n    } else {\n      //Destroy event\n      var id = (e>>1) - 1\n      if(color === 0) {\n        //Red\n        sqPop(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive--, id)\n      } else if(color === 1) {\n        //Blue\n        sqPop(BLUE_SWEEP_QUEUE, BLUE_SWEEP_INDEX, blueActive--, id)\n      } else if(color === 2) {\n        //Both\n        sqPop(COMMON_SWEEP_QUEUE, COMMON_SWEEP_INDEX, commonActive--, id)\n      }\n    }\n  }\n}\n\n//Sweep and prune/scanline algorithm:\n//  Scan along axis, detect intersections\n//  Brute force all boxes along axis\nfunction scanBipartite(\n  d, axis, visit, flip,\n  redStart,  redEnd, red, redIndex,\n  blueStart, blueEnd, blue, blueIndex) {\n  \n  var ptr      = 0\n  var elemSize = 2*d\n  var istart   = axis\n  var iend     = axis+d\n\n  var redShift  = 1\n  var blueShift = 1\n  if(flip) {\n    blueShift = BLUE_FLAG\n  } else {\n    redShift  = BLUE_FLAG\n  }\n\n  for(var i=redStart; i<redEnd; ++i) {\n    var idx = i + redShift\n    var redOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = red[redOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n    SWEEP_EVENTS[ptr++] = red[redOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx\n  }\n  for(var i=blueStart; i<blueEnd; ++i) {\n    var idx = i + blueShift\n    var blueOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n  }\n\n  //process events from left->right\n  var n = ptr >>> 1\n  isort(SWEEP_EVENTS, n)\n  \n  var redActive    = 0\n  for(var i=0; i<n; ++i) {\n    var e = SWEEP_EVENTS[2*i+1]|0\n    if(e < 0) {\n      var idx   = -e\n      var isRed = false\n      if(idx >= BLUE_FLAG) {\n        isRed = !flip\n        idx -= BLUE_FLAG \n      } else {\n        isRed = !!flip\n        idx -= 1\n      }\n      if(isRed) {\n        sqPush(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive++, idx)\n      } else {\n        var blueId  = blueIndex[idx]\n        var bluePtr = elemSize * idx\n        \n        var b0 = blue[bluePtr+axis+1]\n        var b1 = blue[bluePtr+axis+1+d]\n\nred_loop:\n        for(var j=0; j<redActive; ++j) {\n          var oidx   = RED_SWEEP_QUEUE[j]\n          var redPtr = elemSize * oidx\n\n          if(b1 < red[redPtr+axis+1] || \n             red[redPtr+axis+1+d] < b0) {\n            continue\n          }\n\n          for(var k=axis+2; k<d; ++k) {\n            if(blue[bluePtr + k + d] < red[redPtr + k] || \n               red[redPtr + k + d] < blue[bluePtr + k]) {\n              continue red_loop\n            }\n          }\n\n          var redId  = redIndex[oidx]\n          var retval\n          if(flip) {\n            retval = visit(blueId, redId)\n          } else {\n            retval = visit(redId, blueId)\n          }\n          if(retval !== void 0) {\n            return retval \n          }\n        }\n      }\n    } else {\n      sqPop(RED_SWEEP_QUEUE, RED_SWEEP_INDEX, redActive--, e - redShift)\n    }\n  }\n}\n\nfunction scanComplete(\n  d, axis, visit,\n  redStart,  redEnd, red, redIndex,\n  blueStart, blueEnd, blue, blueIndex) {\n\n  var ptr      = 0\n  var elemSize = 2*d\n  var istart   = axis\n  var iend     = axis+d\n\n  for(var i=redStart; i<redEnd; ++i) {\n    var idx = i + BLUE_FLAG\n    var redOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = red[redOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n    SWEEP_EVENTS[ptr++] = red[redOffset+iend]\n    SWEEP_EVENTS[ptr++] = idx\n  }\n  for(var i=blueStart; i<blueEnd; ++i) {\n    var idx = i + 1\n    var blueOffset = elemSize*i\n    SWEEP_EVENTS[ptr++] = blue[blueOffset+istart]\n    SWEEP_EVENTS[ptr++] = -idx\n  }\n\n  //process events from left->right\n  var n = ptr >>> 1\n  isort(SWEEP_EVENTS, n)\n  \n  var redActive    = 0\n  for(var i=0; i<n; ++i) {\n    var e = SWEEP_EVENTS[2*i+1]|0\n    if(e < 0) {\n      var idx   = -e\n      if(idx >= BLUE_FLAG) {\n        RED_SWEEP_QUEUE[redActive++] = idx - BLUE_FLAG\n      } else {\n        idx -= 1\n        var blueId  = blueIndex[idx]\n        var bluePtr = elemSize * idx\n\n        var b0 = blue[bluePtr+axis+1]\n        var b1 = blue[bluePtr+axis+1+d]\n\nred_loop:\n        for(var j=0; j<redActive; ++j) {\n          var oidx   = RED_SWEEP_QUEUE[j]\n          var redId  = redIndex[oidx]\n\n          if(redId === blueId) {\n            break\n          }\n\n          var redPtr = elemSize * oidx\n          if(b1 < red[redPtr+axis+1] || \n            red[redPtr+axis+1+d] < b0) {\n            continue\n          }\n          for(var k=axis+2; k<d; ++k) {\n            if(blue[bluePtr + k + d] < red[redPtr + k] || \n               red[redPtr + k + d]   < blue[bluePtr + k]) {\n              continue red_loop\n            }\n          }\n\n          var retval = visit(redId, blueId)\n          if(retval !== void 0) {\n            return retval \n          }\n        }\n      }\n    } else {\n      var idx = e - BLUE_FLAG\n      for(var j=redActive-1; j>=0; --j) {\n        if(RED_SWEEP_QUEUE[j] === idx) {\n          for(var k=j+1; k<redActive; ++k) {\n            RED_SWEEP_QUEUE[k-1] = RED_SWEEP_QUEUE[k]\n          }\n          break\n        }\n      }\n      --redActive\n    }\n  }\n}", "'use strict'\n\nvar DIMENSION   = 'd'\nvar AXIS        = 'ax'\nvar VISIT       = 'vv'\nvar FLIP        = 'fp'\n\nvar ELEM_SIZE   = 'es'\n\nvar RED_START   = 'rs'\nvar RED_END     = 're'\nvar RED_BOXES   = 'rb'\nvar RED_INDEX   = 'ri'\nvar RED_PTR     = 'rp'\n\nvar BLUE_START  = 'bs'\nvar BLUE_END    = 'be'\nvar BLUE_BOXES  = 'bb'\nvar BLUE_INDEX  = 'bi'\nvar BLUE_PTR    = 'bp'\n\nvar RETVAL      = 'rv'\n\nvar INNER_LABEL = 'Q'\n\nvar ARGS = [\n  DIMENSION,\n  AXIS,\n  VISIT,\n  RED_START,\n  RED_END,\n  RED_BOXES,\n  RED_INDEX,\n  BLUE_START,\n  BLUE_END,\n  BLUE_BOXES,\n  BLUE_INDEX\n]\n\nfunction generateBruteForce(redMajor, flip, full) {\n  var funcName = 'bruteForce' + \n    (redMajor ? 'Red' : 'Blue') + \n    (flip ? 'Flip' : '') +\n    (full ? 'Full' : '')\n\n  var code = ['function ', funcName, '(', ARGS.join(), '){',\n    'var ', ELEM_SIZE, '=2*', DIMENSION, ';']\n\n  var redLoop = \n    'for(var i=' + RED_START + ',' + RED_PTR + '=' + ELEM_SIZE + '*' + RED_START + ';' +\n        'i<' + RED_END +';' +\n        '++i,' + RED_PTR + '+=' + ELEM_SIZE + '){' +\n        'var x0=' + RED_BOXES + '[' + AXIS + '+' + RED_PTR + '],' +\n            'x1=' + RED_BOXES + '[' + AXIS + '+' + RED_PTR + '+' + DIMENSION + '],' +\n            'xi=' + RED_INDEX + '[i];'\n\n  var blueLoop = \n    'for(var j=' + BLUE_START + ',' + BLUE_PTR + '=' + ELEM_SIZE + '*' + BLUE_START + ';' +\n        'j<' + BLUE_END + ';' +\n        '++j,' + BLUE_PTR + '+=' + ELEM_SIZE + '){' +\n        'var y0=' + BLUE_BOXES + '[' + AXIS + '+' + BLUE_PTR + '],' +\n            (full ? 'y1=' + BLUE_BOXES + '[' + AXIS + '+' + BLUE_PTR + '+' + DIMENSION + '],' : '') +\n            'yi=' + BLUE_INDEX + '[j];'\n\n  if(redMajor) {\n    code.push(redLoop, INNER_LABEL, ':', blueLoop)\n  } else {\n    code.push(blueLoop, INNER_LABEL, ':', redLoop)\n  }\n\n  if(full) {\n    code.push('if(y1<x0||x1<y0)continue;')\n  } else if(flip) {\n    code.push('if(y0<=x0||x1<y0)continue;')\n  } else {\n    code.push('if(y0<x0||x1<y0)continue;')\n  }\n\n  code.push('for(var k='+AXIS+'+1;k<'+DIMENSION+';++k){'+\n    'var r0='+RED_BOXES+'[k+'+RED_PTR+'],'+\n        'r1='+RED_BOXES+'[k+'+DIMENSION+'+'+RED_PTR+'],'+\n        'b0='+BLUE_BOXES+'[k+'+BLUE_PTR+'],'+\n        'b1='+BLUE_BOXES+'[k+'+DIMENSION+'+'+BLUE_PTR+'];'+\n      'if(r1<b0||b1<r0)continue ' + INNER_LABEL + ';}' +\n      'var ' + RETVAL + '=' + VISIT + '(')\n\n  if(flip) {\n    code.push('yi,xi')\n  } else {\n    code.push('xi,yi')\n  }\n\n  code.push(');if(' + RETVAL + '!==void 0)return ' + RETVAL + ';}}}')\n\n  return {\n    name: funcName, \n    code: code.join('')\n  }\n}\n\nfunction bruteForcePlanner(full) {\n  var funcName = 'bruteForce' + (full ? 'Full' : 'Partial')\n  var prefix = []\n  var fargs = ARGS.slice()\n  if(!full) {\n    fargs.splice(3, 0, FLIP)\n  }\n\n  var code = ['function ' + funcName + '(' + fargs.join() + '){']\n\n  function invoke(redMajor, flip) {\n    var res = generateBruteForce(redMajor, flip, full)\n    prefix.push(res.code)\n    code.push('return ' + res.name + '(' + ARGS.join() + ');')\n  }\n\n  code.push('if(' + RED_END + '-' + RED_START + '>' +\n                    BLUE_END + '-' + BLUE_START + '){')\n\n  if(full) {\n    invoke(true, false)\n    code.push('}else{')\n    invoke(false, false)\n  } else {\n    code.push('if(' + FLIP + '){')\n    invoke(true, true)\n    code.push('}else{')\n    invoke(true, false)\n    code.push('}}else{if(' + FLIP + '){')\n    invoke(false, true)\n    code.push('}else{')\n    invoke(false, false)\n    code.push('}')\n  }\n  code.push('}}return ' + funcName)\n\n  var codeStr = prefix.join('') + code.join('')\n  var proc = new Function(codeStr)\n  return proc()\n}\n\n\nexports.partial = bruteForcePlanner(false)\nexports.full    = bruteForcePlanner(true)", "'use strict'\n\nmodule.exports = genPartition\n\nvar code = 'for(var j=2*a,k=j*c,l=k,m=c,n=b,o=a+b,p=c;d>p;++p,k+=j){var _;if($)if(m===p)m+=1,l+=j;else{for(var s=0;j>s;++s){var t=e[k+s];e[k+s]=e[l],e[l++]=t}var u=f[p];f[p]=f[m],f[m++]=u}}return m'\n\nfunction genPartition(predicate, args) {\n  var fargs ='abcdef'.split('').concat(args)\n  var reads = []\n  if(predicate.indexOf('lo') >= 0) {\n    reads.push('lo=e[k+n]')\n  }\n  if(predicate.indexOf('hi') >= 0) {\n    reads.push('hi=e[k+o]')\n  }\n  fargs.push(\n    code.replace('_', reads.join())\n        .replace('$', predicate))\n  return Function.apply(void 0, fargs)\n}", "'use strict'\n\nmodule.exports = findMedian\n\nvar genPartition = require('./partition')\n\nvar partitionStartLessThan = genPartition('lo<p0', ['p0'])\n\nvar PARTITION_THRESHOLD = 8   //Cut off for using insertion sort in findMedian\n\n//Base case for median finding:  Use insertion sort\nfunction insertionSort(d, axis, start, end, boxes, ids) {\n  var elemSize = 2 * d\n  var boxPtr = elemSize * (start+1) + axis\n  for(var i=start+1; i<end; ++i, boxPtr+=elemSize) {\n    var x = boxes[boxPtr]\n    for(var j=i, ptr=elemSize*(i-1); \n        j>start && boxes[ptr+axis] > x; \n        --j, ptr-=elemSize) {\n      //Swap\n      var aPtr = ptr\n      var bPtr = ptr+elemSize\n      for(var k=0; k<elemSize; ++k, ++aPtr, ++bPtr) {\n        var y = boxes[aPtr]\n        boxes[aPtr] = boxes[bPtr]\n        boxes[bPtr] = y\n      }\n      var tmp = ids[j]\n      ids[j] = ids[j-1]\n      ids[j-1] = tmp\n    }\n  }\n}\n\n//Find median using quick select algorithm\n//  takes O(n) time with high probability\nfunction findMedian(d, axis, start, end, boxes, ids) {\n  if(end <= start+1) {\n    return start\n  }\n\n  var lo       = start\n  var hi       = end\n  var mid      = ((end + start) >>> 1)\n  var elemSize = 2*d\n  var pivot    = mid\n  var value    = boxes[elemSize*mid+axis]\n  \n  while(lo < hi) {\n    if(hi - lo < PARTITION_THRESHOLD) {\n      insertionSort(d, axis, lo, hi, boxes, ids)\n      value = boxes[elemSize*mid+axis]\n      break\n    }\n    \n    //Select pivot using median-of-3\n    var count  = hi - lo\n    var pivot0 = (Math.random()*count+lo)|0\n    var value0 = boxes[elemSize*pivot0 + axis]\n    var pivot1 = (Math.random()*count+lo)|0\n    var value1 = boxes[elemSize*pivot1 + axis]\n    var pivot2 = (Math.random()*count+lo)|0\n    var value2 = boxes[elemSize*pivot2 + axis]\n    if(value0 <= value1) {\n      if(value2 >= value1) {\n        pivot = pivot1\n        value = value1\n      } else if(value0 >= value2) {\n        pivot = pivot0\n        value = value0\n      } else {\n        pivot = pivot2\n        value = value2\n      }\n    } else {\n      if(value1 >= value2) {\n        pivot = pivot1\n        value = value1\n      } else if(value2 >= value0) {\n        pivot = pivot0\n        value = value0\n      } else {\n        pivot = pivot2\n        value = value2\n      }\n    }\n\n    //Swap pivot to end of array\n    var aPtr = elemSize * (hi-1)\n    var bPtr = elemSize * pivot\n    for(var i=0; i<elemSize; ++i, ++aPtr, ++bPtr) {\n      var x = boxes[aPtr]\n      boxes[aPtr] = boxes[bPtr]\n      boxes[bPtr] = x\n    }\n    var y = ids[hi-1]\n    ids[hi-1] = ids[pivot]\n    ids[pivot] = y\n\n    //Partition using pivot\n    pivot = partitionStartLessThan(\n      d, axis, \n      lo, hi-1, boxes, ids,\n      value)\n\n    //Swap pivot back\n    var aPtr = elemSize * (hi-1)\n    var bPtr = elemSize * pivot\n    for(var i=0; i<elemSize; ++i, ++aPtr, ++bPtr) {\n      var x = boxes[aPtr]\n      boxes[aPtr] = boxes[bPtr]\n      boxes[bPtr] = x\n    }\n    var y = ids[hi-1]\n    ids[hi-1] = ids[pivot]\n    ids[pivot] = y\n\n    //Swap pivot to last pivot\n    if(mid < pivot) {\n      hi = pivot-1\n      while(lo < hi && \n        boxes[elemSize*(hi-1)+axis] === value) {\n        hi -= 1\n      }\n      hi += 1\n    } else if(pivot < mid) {\n      lo = pivot + 1\n      while(lo < hi &&\n        boxes[elemSize*lo+axis] === value) {\n        lo += 1\n      }\n    } else {\n      break\n    }\n  }\n\n  //Make sure pivot is at start\n  return partitionStartLessThan(\n    d, axis, \n    start, mid, boxes, ids,\n    boxes[elemSize*mid+axis])\n}", "'use strict'\n\nmodule.exports = boxIntersectIter\n\nvar pool = require('@jpweeks/typedarray-pool')\nvar bits = require('bit-twiddle')\nvar bruteForce = require('./brute')\nvar bruteForcePartial = bruteForce.partial\nvar bruteForceFull = bruteForce.full\nvar sweep = require('./sweep')\nvar findMedian = require('./median')\nvar genPartition = require('./partition')\n\n//Twiddle parameters\nvar BRUTE_FORCE_CUTOFF    = 128       //Cut off for brute force search\nvar SCAN_CUTOFF           = (1<<22)   //Cut off for two way scan\nvar SCAN_COMPLETE_CUTOFF  = (1<<22)  \n\n//Partition functions\nvar partitionInteriorContainsInterval = genPartition(\n  '!(lo>=p0)&&!(p1>=hi)', \n  ['p0', 'p1'])\n\nvar partitionStartEqual = genPartition(\n  'lo===p0',\n  ['p0'])\n\nvar partitionStartLessThan = genPartition(\n  'lo<p0',\n  ['p0'])\n\nvar partitionEndLessThanEqual = genPartition(\n  'hi<=p0',\n  ['p0'])\n\nvar partitionContainsPoint = genPartition(\n  'lo<=p0&&p0<=hi',\n  ['p0'])\n\nvar partitionContainsPointProper = genPartition(\n  'lo<p0&&p0<=hi',\n  ['p0'])\n\n//Frame size for iterative loop\nvar IFRAME_SIZE = 6\nvar DFRAME_SIZE = 2\n\n//Data for box statck\nvar INIT_CAPACITY = 1024\nvar BOX_ISTACK  = pool.mallocInt32(INIT_CAPACITY)\nvar BOX_DSTACK  = pool.mallocDouble(INIT_CAPACITY)\n\n//Initialize iterative loop queue\nfunction iterInit(d, count) {\n  var levels = (8 * bits.log2(count+1) * (d+1))|0\n  var maxInts = bits.nextPow2(IFRAME_SIZE*levels)\n  if(BOX_ISTACK.length < maxInts) {\n    pool.free(BOX_ISTACK)\n    BOX_ISTACK = pool.mallocInt32(maxInts)\n  }\n  var maxDoubles = bits.nextPow2(DFRAME_SIZE*levels)\n  if(BOX_DSTACK.length < maxDoubles) {\n    pool.free(BOX_DSTACK)\n    BOX_DSTACK = pool.mallocDouble(maxDoubles)\n  }\n}\n\n//Append item to queue\nfunction iterPush(ptr,\n  axis, \n  redStart, redEnd, \n  blueStart, blueEnd, \n  state, \n  lo, hi) {\n\n  var iptr = IFRAME_SIZE * ptr\n  BOX_ISTACK[iptr]   = axis\n  BOX_ISTACK[iptr+1] = redStart\n  BOX_ISTACK[iptr+2] = redEnd\n  BOX_ISTACK[iptr+3] = blueStart\n  BOX_ISTACK[iptr+4] = blueEnd\n  BOX_ISTACK[iptr+5] = state\n\n  var dptr = DFRAME_SIZE * ptr\n  BOX_DSTACK[dptr]   = lo\n  BOX_DSTACK[dptr+1] = hi\n}\n\n//Special case:  Intersect single point with list of intervals\nfunction onePointPartial(\n  d, axis, visit, flip,\n  redStart, redEnd, red, redIndex,\n  blueOffset, blue, blueId) {\n\n  var elemSize = 2 * d\n  var bluePtr  = blueOffset * elemSize\n  var blueX    = blue[bluePtr + axis]\n\nred_loop:\n  for(var i=redStart, redPtr=redStart*elemSize; i<redEnd; ++i, redPtr+=elemSize) {\n    var r0 = red[redPtr+axis]\n    var r1 = red[redPtr+axis+d]\n    if(blueX < r0 || r1 < blueX) {\n      continue\n    }\n    if(flip && blueX === r0) {\n      continue\n    }\n    var redId = redIndex[i]\n    for(var j=axis+1; j<d; ++j) {\n      var r0 = red[redPtr+j]\n      var r1 = red[redPtr+j+d]\n      var b0 = blue[bluePtr+j]\n      var b1 = blue[bluePtr+j+d]\n      if(r1 < b0 || b1 < r0) {\n        continue red_loop\n      }\n    }\n    var retval\n    if(flip) {\n      retval = visit(blueId, redId)\n    } else {\n      retval = visit(redId, blueId)\n    }\n    if(retval !== void 0) {\n      return retval\n    }\n  }\n}\n\n//Special case:  Intersect one point with list of intervals\nfunction onePointFull(\n  d, axis, visit,\n  redStart, redEnd, red, redIndex,\n  blueOffset, blue, blueId) {\n\n  var elemSize = 2 * d\n  var bluePtr  = blueOffset * elemSize\n  var blueX    = blue[bluePtr + axis]\n\nred_loop:\n  for(var i=redStart, redPtr=redStart*elemSize; i<redEnd; ++i, redPtr+=elemSize) {\n    var redId = redIndex[i]\n    if(redId === blueId) {\n      continue\n    }\n    var r0 = red[redPtr+axis]\n    var r1 = red[redPtr+axis+d]\n    if(blueX < r0 || r1 < blueX) {\n      continue\n    }\n    for(var j=axis+1; j<d; ++j) {\n      var r0 = red[redPtr+j]\n      var r1 = red[redPtr+j+d]\n      var b0 = blue[bluePtr+j]\n      var b1 = blue[bluePtr+j+d]\n      if(r1 < b0 || b1 < r0) {\n        continue red_loop\n      }\n    }\n    var retval = visit(redId, blueId)\n    if(retval !== void 0) {\n      return retval\n    }\n  }\n}\n\n//The main box intersection routine\nfunction boxIntersectIter(\n  d, visit, initFull,\n  xSize, xBoxes, xIndex,\n  ySize, yBoxes, yIndex) {\n\n  //Reserve memory for stack\n  iterInit(d, xSize + ySize)\n\n  var top  = 0\n  var elemSize = 2 * d\n  var retval\n\n  iterPush(top++,\n      0,\n      0, xSize,\n      0, ySize,\n      initFull ? 16 : 0, \n      -Infinity, Infinity)\n  if(!initFull) {\n    iterPush(top++,\n      0,\n      0, ySize,\n      0, xSize,\n      1, \n      -Infinity, Infinity)\n  }\n\n  while(top > 0) {\n    top  -= 1\n\n    var iptr = top * IFRAME_SIZE\n    var axis      = BOX_ISTACK[iptr]\n    var redStart  = BOX_ISTACK[iptr+1]\n    var redEnd    = BOX_ISTACK[iptr+2]\n    var blueStart = BOX_ISTACK[iptr+3]\n    var blueEnd   = BOX_ISTACK[iptr+4]\n    var state     = BOX_ISTACK[iptr+5]\n\n    var dptr = top * DFRAME_SIZE\n    var lo        = BOX_DSTACK[dptr]\n    var hi        = BOX_DSTACK[dptr+1]\n\n    //Unpack state info\n    var flip      = (state & 1)\n    var full      = !!(state & 16)\n\n    //Unpack indices\n    var red       = xBoxes\n    var redIndex  = xIndex\n    var blue      = yBoxes\n    var blueIndex = yIndex\n    if(flip) {\n      red         = yBoxes\n      redIndex    = yIndex\n      blue        = xBoxes\n      blueIndex   = xIndex\n    }\n\n    if(state & 2) {\n      redEnd = partitionStartLessThan(\n        d, axis,\n        redStart, redEnd, red, redIndex,\n        hi)\n      if(redStart >= redEnd) {\n        continue\n      }\n    }\n    if(state & 4) {\n      redStart = partitionEndLessThanEqual(\n        d, axis,\n        redStart, redEnd, red, redIndex,\n        lo)\n      if(redStart >= redEnd) {\n        continue\n      }\n    }\n    \n    var redCount  = redEnd  - redStart\n    var blueCount = blueEnd - blueStart\n\n    if(full) {\n      if(d * redCount * (redCount + blueCount) < SCAN_COMPLETE_CUTOFF) {\n        retval = sweep.scanComplete(\n          d, axis, visit, \n          redStart, redEnd, red, redIndex,\n          blueStart, blueEnd, blue, blueIndex)\n        if(retval !== void 0) {\n          return retval\n        }\n        continue\n      }\n    } else {\n      if(d * Math.min(redCount, blueCount) < BRUTE_FORCE_CUTOFF) {\n        //If input small, then use brute force\n        retval = bruteForcePartial(\n            d, axis, visit, flip,\n            redStart,  redEnd,  red,  redIndex,\n            blueStart, blueEnd, blue, blueIndex)\n        if(retval !== void 0) {\n          return retval\n        }\n        continue\n      } else if(d * redCount * blueCount < SCAN_CUTOFF) {\n        //If input medium sized, then use sweep and prune\n        retval = sweep.scanBipartite(\n          d, axis, visit, flip, \n          redStart, redEnd, red, redIndex,\n          blueStart, blueEnd, blue, blueIndex)\n        if(retval !== void 0) {\n          return retval\n        }\n        continue\n      }\n    }\n    \n    //First, find all red intervals whose interior contains (lo,hi)\n    var red0 = partitionInteriorContainsInterval(\n      d, axis, \n      redStart, redEnd, red, redIndex,\n      lo, hi)\n\n    //Lower dimensional case\n    if(redStart < red0) {\n\n      if(d * (red0 - redStart) < BRUTE_FORCE_CUTOFF) {\n        //Special case for small inputs: use brute force\n        retval = bruteForceFull(\n          d, axis+1, visit,\n          redStart, red0, red, redIndex,\n          blueStart, blueEnd, blue, blueIndex)\n        if(retval !== void 0) {\n          return retval\n        }\n      } else if(axis === d-2) {\n        if(flip) {\n          retval = sweep.sweepBipartite(\n            d, visit,\n            blueStart, blueEnd, blue, blueIndex,\n            redStart, red0, red, redIndex)\n        } else {\n          retval = sweep.sweepBipartite(\n            d, visit,\n            redStart, red0, red, redIndex,\n            blueStart, blueEnd, blue, blueIndex)\n        }\n        if(retval !== void 0) {\n          return retval\n        }\n      } else {\n        iterPush(top++,\n          axis+1,\n          redStart, red0,\n          blueStart, blueEnd,\n          flip,\n          -Infinity, Infinity)\n        iterPush(top++,\n          axis+1,\n          blueStart, blueEnd,\n          redStart, red0,\n          flip^1,\n          -Infinity, Infinity)\n      }\n    }\n\n    //Divide and conquer phase\n    if(red0 < redEnd) {\n\n      //Cut blue into 3 parts:\n      //\n      //  Points < mid point\n      //  Points = mid point\n      //  Points > mid point\n      //\n      var blue0 = findMedian(\n        d, axis, \n        blueStart, blueEnd, blue, blueIndex)\n      var mid = blue[elemSize * blue0 + axis]\n      var blue1 = partitionStartEqual(\n        d, axis,\n        blue0, blueEnd, blue, blueIndex,\n        mid)\n\n      //Right case\n      if(blue1 < blueEnd) {\n        iterPush(top++,\n          axis,\n          red0, redEnd,\n          blue1, blueEnd,\n          (flip|4) + (full ? 16 : 0),\n          mid, hi)\n      }\n\n      //Left case\n      if(blueStart < blue0) {\n        iterPush(top++,\n          axis,\n          red0, redEnd,\n          blueStart, blue0,\n          (flip|2) + (full ? 16 : 0),\n          lo, mid)\n      }\n\n      //Center case (the hard part)\n      if(blue0 + 1 === blue1) {\n        //Optimization: Range with exactly 1 point, use a brute force scan\n        if(full) {\n          retval = onePointFull(\n            d, axis, visit,\n            red0, redEnd, red, redIndex,\n            blue0, blue, blueIndex[blue0])\n        } else {\n          retval = onePointPartial(\n            d, axis, visit, flip,\n            red0, redEnd, red, redIndex,\n            blue0, blue, blueIndex[blue0])\n        }\n        if(retval !== void 0) {\n          return retval\n        }\n      } else if(blue0 < blue1) {\n        var red1\n        if(full) {\n          //If full intersection, need to handle special case\n          red1 = partitionContainsPoint(\n            d, axis,\n            red0, redEnd, red, redIndex,\n            mid)\n          if(red0 < red1) {\n            var redX = partitionStartEqual(\n              d, axis,\n              red0, red1, red, redIndex,\n              mid)\n            if(axis === d-2) {\n              //Degenerate sweep intersection:\n              //  [red0, redX] with [blue0, blue1]\n              if(red0 < redX) {\n                retval = sweep.sweepComplete(\n                  d, visit,\n                  red0, redX, red, redIndex,\n                  blue0, blue1, blue, blueIndex)\n                if(retval !== void 0) {\n                  return retval\n                }\n              }\n\n              //Normal sweep intersection:\n              //  [redX, red1] with [blue0, blue1]\n              if(redX < red1) {\n                retval = sweep.sweepBipartite(\n                  d, visit,\n                  redX, red1, red, redIndex,\n                  blue0, blue1, blue, blueIndex)\n                if(retval !== void 0) {\n                  return retval\n                }\n              }\n            } else {\n              if(red0 < redX) {\n                iterPush(top++,\n                  axis+1,\n                  red0, redX,\n                  blue0, blue1,\n                  16,\n                  -Infinity, Infinity)\n              }\n              if(redX < red1) {\n                iterPush(top++,\n                  axis+1,\n                  redX, red1,\n                  blue0, blue1,\n                  0,\n                  -Infinity, Infinity)\n                iterPush(top++,\n                  axis+1,\n                  blue0, blue1,\n                  redX, red1,\n                  1,\n                  -Infinity, Infinity)\n              }\n            }\n          }\n        } else {\n          if(flip) {\n            red1 = partitionContainsPointProper(\n              d, axis,\n              red0, redEnd, red, redIndex,\n              mid)\n          } else {\n            red1 = partitionContainsPoint(\n              d, axis,\n              red0, redEnd, red, redIndex,\n              mid)\n          }\n          if(red0 < red1) {\n            if(axis === d-2) {\n              if(flip) {\n                retval = sweep.sweepBipartite(\n                  d, visit,\n                  blue0, blue1, blue, blueIndex,\n                  red0, red1, red, redIndex)\n              } else {\n                retval = sweep.sweepBipartite(\n                  d, visit,\n                  red0, red1, red, redIndex,\n                  blue0, blue1, blue, blueIndex)\n              }\n            } else {\n              iterPush(top++,\n                axis+1,\n                red0, red1,\n                blue0, blue1,\n                flip,\n                -Infinity, Infinity)\n              iterPush(top++,\n                axis+1,\n                blue0, blue1,\n                red0, red1,\n                flip^1,\n                -Infinity, Infinity)\n            }\n          }\n        }\n      }\n    }\n  }\n}", "'use strict'\n\nmodule.exports = boxIntersectWrapper\n\nvar pool = require('@jpweeks/typedarray-pool')\nvar sweep = require('./lib/sweep')\nvar boxIntersectIter = require('./lib/intersect')\n\nfunction boxEmpty(d, box) {\n  for(var j=0; j<d; ++j) {\n    if(!(box[j] <= box[j+d])) {\n      return true\n    }\n  }\n  return false\n}\n\n//Unpack boxes into a flat typed array, remove empty boxes\nfunction convertBoxes(boxes, d, data, ids) {\n  var ptr = 0\n  var count = 0\n  for(var i=0, n=boxes.length; i<n; ++i) {\n    var b = boxes[i]\n    if(boxEmpty(d, b)) {\n      continue\n    }\n    for(var j=0; j<2*d; ++j) {\n      data[ptr++] = b[j]\n    }\n    ids[count++] = i\n  }\n  return count\n}\n\n//Perform type conversions, check bounds\nfunction boxIntersect(red, blue, visit, full) {\n  var n = red.length\n  var m = blue.length\n\n  //If either array is empty, then we can skip this whole thing\n  if(n <= 0 || m <= 0) {\n    return\n  }\n\n  //Compute dimension, if it is 0 then we skip\n  var d = (red[0].length)>>>1\n  if(d <= 0) {\n    return\n  }\n\n  var retval\n\n  //Convert red boxes\n  var redList  = pool.mallocDouble(2*d*n)\n  var redIds   = pool.mallocInt32(n)\n  n = convertBoxes(red, d, redList, redIds)\n\n  if(n > 0) {\n    if(d === 1 && full) {\n      //Special case: 1d complete\n      sweep.init(n)\n      retval = sweep.sweepComplete(\n        d, visit, \n        0, n, redList, redIds,\n        0, n, redList, redIds)\n    } else {\n\n      //Convert blue boxes\n      var blueList = pool.mallocDouble(2*d*m)\n      var blueIds  = pool.mallocInt32(m)\n      m = convertBoxes(blue, d, blueList, blueIds)\n\n      if(m > 0) {\n        sweep.init(n+m)\n\n        if(d === 1) {\n          //Special case: 1d bipartite\n          retval = sweep.sweepBipartite(\n            d, visit, \n            0, n, redList,  redIds,\n            0, m, blueList, blueIds)\n        } else {\n          //General case:  d>1\n          retval = boxIntersectIter(\n            d, visit,    full,\n            n, redList,  redIds,\n            m, blueList, blueIds)\n        }\n\n        pool.free(blueList)\n        pool.free(blueIds)\n      }\n    }\n\n    pool.free(redList)\n    pool.free(redIds)\n  }\n\n  return retval\n}\n\n\nvar RESULT\n\nfunction appendItem(i,j) {\n  RESULT.push([i,j])\n}\n\nfunction intersectFullArray(x) {\n  RESULT = []\n  boxIntersect(x, x, appendItem, true)\n  return RESULT\n}\n\nfunction intersectBipartiteArray(x, y) {\n  RESULT = []\n  boxIntersect(x, y, appendItem, false)\n  return RESULT\n}\n\n//User-friendly wrapper, handle full input and no-visitor cases\nfunction boxIntersectWrapper(arg0, arg1, arg2) {\n  var result\n  switch(arguments.length) {\n    case 1:\n      return intersectFullArray(arg0)\n    case 2:\n      if(typeof arg1 === 'function') {\n        return boxIntersect(arg0, arg0, arg1, true)\n      } else {\n        return intersectBipartiteArray(arg0, arg1)\n      }\n    case 3:\n      return boxIntersect(arg0, arg1, arg2, false)\n    default:\n      throw new Error('box-intersect: Invalid arguments')\n  }\n}", "\n/**\n * This works around some old node-style code in a\n * dependency of box-intersect.\n*/\nif (window && !window['global']) {\n    window['global'] = window.globalThis || {}\n}\n\n", "\n/*!\n * noa: an experimental voxel game engine.\n * @url      github.com/fenomas/noa\n * @author   Andy Hall <andy@fenomas.com>\n * @license  MIT\n */\n\nimport './lib/shims'\n\nimport { EventEmitter } from 'events'\nimport vec3 from 'gl-vec3'\nimport ndarray from 'ndarray'\nimport raycast from 'fast-voxel-raycast'\n\nimport { Inputs } from './lib/inputs'\nimport { Container } from './lib/container'\nimport { Camera } from './lib/camera'\nimport { Entities } from './lib/entities'\nimport { ObjectMesher } from './lib/objectMesher'\nimport { TerrainMesher } from './lib/terrainMesher'\nimport { Registry } from './lib/registry'\nimport { Rendering } from './lib/rendering'\nimport { Physics } from './lib/physics'\nimport { World } from './lib/world'\nimport { locationHasher } from './lib/util'\nimport { makeProfileHook } from './lib/util'\n\n\nimport packageJSON from '../package.json'\nvar version = packageJSON.version\n\n\n\n// profile every N ticks/renders\nvar PROFILE = 0\nvar PROFILE_RENDER = 0\n\n\nvar defaultOptions = {\n    debug: false,\n    silent: false,\n    silentBabylon: false,\n    playerHeight: 1.8,\n    playerWidth: 0.6,\n    playerStart: [0, 10, 0],\n    playerAutoStep: false,\n    playerShadowComponent: true,\n    tickRate: 30,           // ticks per second\n    maxRenderRate: 0,       // max FPS, 0 for uncapped \n    blockTestDistance: 10,\n    stickyPointerLock: true,\n    dragCameraOutsidePointerLock: true,\n    stickyFullscreen: false,\n    skipDefaultHighlighting: false,\n    originRebaseDistance: 25,\n}\n\n\n/**\n * Main engine class.  \n * Takes an object full of optional settings as a parameter.\n * \n * ```js\n * import { Engine } from 'noa-engine'\n * var noa = new Engine({\n *    debug: false,\n * })\n * ```\n * \n * Note that the options object is also passed to noa's \n * child modules ({@link Rendering}, {@link Container}, etc).\n * See docs for each module for their options.\n * \n*/\n\nexport class Engine extends EventEmitter {\n\n    /**\n     * The core Engine constructor uses the following options:\n     * \n     * ```js\n     * var defaultOptions = {\n     *    debug: false,\n     *    silent: false,\n     *    playerHeight: 1.8,\n     *    playerWidth: 0.6,\n     *    playerStart: [0, 10, 0],\n     *    playerAutoStep: false,\n     *    playerShadowComponent: true,\n     *    tickRate: 30,           // ticks per second\n     *    maxRenderRate: 0,       // max FPS, 0 for uncapped \n     *    blockTestDistance: 10,\n     *    stickyPointerLock: true,\n     *    dragCameraOutsidePointerLock: true,\n     *    stickyFullscreen: false,\n     *    skipDefaultHighlighting: false,\n     *    originRebaseDistance: 25,\n     * }\n     * ```\n     * \n     * **Events:**\n     *  + `tick => (dt)`  \n     *    Tick update, `dt` is (fixed) tick duration in ms\n     *  + `beforeRender => (dt)`  \n     *    `dt` is the time (in ms) since the most recent tick\n     *  + `afterRender => (dt)`  \n     *    `dt` is the time (in ms) since the most recent tick\n     *  + `targetBlockChanged => (blockInfo)`  \n     *    Emitted each time the user's targeted world block changes\n     *  + `addingTerrainMesh => (mesh)`  \n     *    Alerts client about a terrain mesh being added to the scene\n     *  + `removingTerrainMesh => (mesh)`  \n     *    Alerts client before a terrain mesh is removed.\n    */\n    constructor(opts = {}) {\n        super()\n        opts = Object.assign({}, defaultOptions, opts)\n\n        /** Version string, e.g. `\"0.25.4\"` */\n        this.version = version\n        if (!opts.silent) {\n            var debugstr = (opts.debug) ? ' (debug)' : ''\n            console.log(`noa-engine v${this.version}${debugstr}`)\n        }\n\n        /** @internal */\n        this._paused = false\n\n        /** @internal */\n        this._originRebaseDistance = opts.originRebaseDistance\n\n        // world origin offset, used throughout engine for origin rebasing\n        /** @internal */\n        this.worldOriginOffset = [0, 0, 0]\n\n        // how far engine is into the current tick. Updated each render.\n        /** @internal */\n        this.positionInCurrentTick = 0\n\n        /** \n         * String identifier for the current world. \n         * It's safe to ignore this if your game has only one level/world. \n        */\n        this.worldName = 'default'\n\n        /**\n         * Multiplier for how fast time moves. Setting this to a value other than \n         * `1` will make the game speed up or slow down. This can significantly \n         * affect how core systems behave (particularly physics!).\n        */\n        this.timeScale = 1\n\n        /** Child module for managing the game's container, canvas, etc. */\n        this.container = new Container(this, opts)\n\n        /** The game's tick rate (number of ticks per second) \n         * @type {number}\n         * @readonly \n        */\n        this.tickRate = this.container._shell.tickRate\n        Object.defineProperty(this, 'tickRate', {\n            get: () => this.container._shell.tickRate\n        })\n\n        /** The game's max framerate (use `0` for uncapped)\n         * @type {number}\n         */\n        this.maxRenderRate = this.container._shell.maxRenderRate\n        Object.defineProperty(this, 'maxRenderRate', {\n            get: () => this.container._shell.maxRenderRate,\n            set: (v) => { this.container._shell.maxRenderRate = v || 0 },\n        })\n\n\n        /** Manages key and mouse input bindings */\n        this.inputs = new Inputs(this, opts, this.container.element)\n\n        /** A registry where voxel/material properties are managed */\n        this.registry = new Registry(this, opts)\n\n        /** Manages the world, chunks, and all voxel data */\n        this.world = new World(this, opts)\n\n        var _consoleLog = console.log\n        if (opts.silentBabylon) console.log = () => { }\n\n        /** Rendering manager */\n        this.rendering = new Rendering(this, opts, this.container.canvas)\n\n        if (opts.silentBabylon) console.log = _consoleLog\n\n        /** Physics engine - solves collisions, properties, etc. */\n        this.physics = new Physics(this, opts)\n\n        /** Entity manager / Entity Component System (ECS) */\n        this.entities = new Entities(this, opts)\n\n        /** Alias to `noa.entities` */\n        this.ents = this.entities\n        var ents = this.entities\n\n        /** Entity id for the player entity */\n        this.playerEntity = ents.add(\n            opts.playerStart, // starting location\n            opts.playerWidth, opts.playerHeight,\n            null, null, // no mesh for now, no meshOffset, \n            true, opts.playerShadowComponent,\n        )\n\n        // make player entity it collide with terrain and other entities\n        ents.addComponent(this.playerEntity, ents.names.collideTerrain)\n        ents.addComponent(this.playerEntity, ents.names.collideEntities)\n\n        // adjust default physics parameters\n        var body = ents.getPhysics(this.playerEntity).body\n        body.gravityMultiplier = 2 // less floaty\n        body.autoStep = opts.playerAutoStep // auto step onto blocks\n\n        // input component - sets entity's movement state from key inputs\n        ents.addComponent(this.playerEntity, ents.names.receivesInputs)\n\n        // add a component to make player mesh fade out when zooming in\n        ents.addComponent(this.playerEntity, ents.names.fadeOnZoom)\n\n        // movement component - applies movement forces\n        ents.addComponent(this.playerEntity, ents.names.movement, {\n            airJumps: 1\n        })\n\n        /** Manages the game's camera, view angle, sensitivity, etc. */\n        this.camera = new Camera(this, opts)\n\n        /** How far to check for a solid voxel the player is currently looking at \n         * @type {number}\n        */\n        this.blockTestDistance = opts.blockTestDistance\n\n        /** \n         * Callback to determine which voxels can be targeted. \n         * Defaults to a solidity check, but can be overridden with arbitrary logic.\n         * @type {(blockID: number) => boolean} \n        */\n        this.blockTargetIdCheck = this.registry.getBlockSolidity\n\n        /** \n         * Dynamically updated object describing the currently targeted block.\n         * @type {null | { \n         *      blockID:number,\n         *      position: number[],\n         *      normal: number[],\n         *      adjacent: number[],\n         * }} \n        */\n        this.targetedBlock = null\n\n        // add a default block highlighting function\n        if (!opts.skipDefaultHighlighting) {\n            // the default listener, defined onto noa in case people want to remove it later\n            this.defaultBlockHighlightFunction = (tgt) => {\n                if (tgt) {\n                    this.rendering.highlightBlockFace(true, tgt.position, tgt.normal)\n                } else {\n                    this.rendering.highlightBlockFace(false)\n                }\n            }\n            this.on('targetBlockChanged', this.defaultBlockHighlightFunction)\n        }\n\n\n        /*\n         *\n         *      Various internals...\n         *\n        */\n\n        /** @internal */\n        this._terrainMesher = new TerrainMesher(this)\n\n        /** @internal */\n        this._objectMesher = new ObjectMesher(this)\n\n        /** @internal */\n        this._targetedBlockDat = {\n            blockID: 0,\n            position: vec3.create(),\n            normal: vec3.create(),\n            adjacent: vec3.create(),\n        }\n\n        /** @internal */\n        this._prevTargetHash = 0\n\n\n        /** @internal */\n        this._pickPos = vec3.create()\n\n        /** @internal */\n        this._pickResult = {\n            _localPosition: vec3.create(),\n            position: [0, 0, 0],\n            normal: [0, 0, 0],\n        }\n\n\n\n\n\n        // temp hacks for development\n        if (opts.debug) {\n            // expose often-used classes\n            /** @internal */\n            this.vec3 = vec3\n            /** @internal */\n            this.ndarray = ndarray\n            // gameplay tweaks\n            ents.getMovement(1).airJumps = 999\n            // decorate window while making TS happy\n            var win = /** @type {any} */ (window)\n            win.noa = this\n            win.vec3 = vec3\n            win.ndarray = ndarray\n            win.scene = this.rendering.scene\n        }\n\n        // add hooks to throw helpful errors when using deprecated methods\n        deprecateStuff(this)\n    }\n\n\n\n    /*\n     *\n     *\n     *              Core Engine APIs\n     *\n     *\n    */\n\n    /**\n     * Tick function, called by container module at a fixed timestep. \n     * Clients should not normally need to call this manually.\n     * @internal\n    */\n\n    tick(dt) {\n        dt *= this.timeScale || 1\n\n        // note dt is a fixed value, not an observed delay\n        if (this._paused) {\n            if (this.world.worldGenWhilePaused) this.world.tick()\n            return\n        }\n        profile_hook('start')\n        checkWorldOffset(this)\n        this.world.tick() // chunk creation/removal\n        profile_hook('world')\n        if (!this.world.playerChunkLoaded) {\n            // when waiting on worldgen, just tick the meshing queue and exit\n            this.rendering.tick(dt)\n            return\n        }\n        this.physics.tick(dt) // iterates physics\n        profile_hook('physics')\n        this._objectMesher.tick() // rebuild objects if needed\n        this.rendering.tick(dt) // does deferred chunk meshing\n        profile_hook('rendering')\n        updateBlockTargets(this) // finds targeted blocks, and highlights one if needed\n        profile_hook('targets')\n        this.entities.tick(dt) // runs all entity systems\n        profile_hook('entities')\n        this.emit('tick', dt)\n        profile_hook('tick event')\n        profile_hook('end')\n        // clear accumulated scroll inputs (mouseMove is cleared on render)\n        var pst = this.inputs.pointerState\n        pst.scrollx = pst.scrolly = pst.scrollz = 0\n    }\n\n\n\n\n    /**\n     * Render function, called every animation frame. Emits #beforeRender(dt), #afterRender(dt) \n     * where dt is the time in ms *since the last tick*.\n     * Clients should not normally need to call this manually.\n     * @internal\n    */\n    render(dt, framePart) {\n        dt *= this.timeScale || 1\n\n        // note: framePart is how far we are into the current tick\n        // dt is the *actual* time (ms) since last render, for\n        // animating things that aren't tied to game tick rate\n\n        // frame position - for rendering movement between ticks\n        this.positionInCurrentTick = framePart\n\n        // when paused, just optionally ping worldgen, then exit\n        if (this._paused) {\n            if (this.world.worldGenWhilePaused) this.world.render()\n            return\n        }\n\n        profile_hook_render('start')\n\n        // rotate camera per user inputs - specific rules for this in `camera`\n        this.camera.applyInputsToCamera()\n        profile_hook_render('init')\n\n        // brief run through meshing queue\n        this.world.render()\n        profile_hook_render('meshing')\n\n        // entity render systems\n        this.camera.updateBeforeEntityRenderSystems()\n        this.entities.render(dt)\n        this.camera.updateAfterEntityRenderSystems()\n        profile_hook_render('entities')\n\n        // events and render\n        this.emit('beforeRender', dt)\n        profile_hook_render('before render')\n\n        this.rendering.render()\n        this.rendering.postRender()\n        profile_hook_render('render')\n\n        this.emit('afterRender', dt)\n        profile_hook_render('after render')\n        profile_hook_render('end')\n\n        // clear accumulated mouseMove inputs (scroll inputs cleared on render)\n        this.inputs.pointerState.dx = this.inputs.pointerState.dy = 0\n    }\n\n\n\n\n    /** Pausing the engine will also stop render/tick events, etc. */\n    setPaused(paused = false) {\n        this._paused = !!paused\n        // when unpausing, clear any built-up mouse inputs\n        if (!paused) {\n            this.inputs.pointerState.dx = this.inputs.pointerState.dy = 0\n        }\n    }\n\n    /** \n     * Get the voxel ID at the specified position\n    */\n    getBlock(x, y = 0, z = 0) {\n        if (x.length) return this.world.getBlockID(x[0], x[1], x[2])\n        return this.world.getBlockID(x, y, z)\n    }\n\n    /** \n     * Sets the voxel ID at the specified position. \n     * Does not check whether any entities are in the way! \n     */\n    setBlock(id, x, y = 0, z = 0) {\n        if (x.length) return this.world.setBlockID(id, x[0], x[1], x[2])\n        return this.world.setBlockID(id, x, y, z)\n    }\n\n    /**\n     * Adds a block, unless there's an entity in the way.\n    */\n    addBlock(id, x, y = 0, z = 0) {\n        // add a new terrain block, if nothing blocks the terrain there\n        if (x.length) {\n            if (this.entities.isTerrainBlocked(x[0], x[1], x[2])) return\n            this.world.setBlockID(id, x[0], x[1], x[2])\n            return id\n        } else {\n            if (this.entities.isTerrainBlocked(x, y, z)) return\n            this.world.setBlockID(id, x, y, z)\n            return id\n        }\n    }\n\n\n\n\n\n\n\n    /*\n     *              Rebasing local <-> global coords\n    */\n\n\n    /** \n     * Precisely converts a world position to the current internal \n     * local frame of reference.\n     * \n     * See `/docs/positions.md` for more info.\n     * \n     * Params: \n     *  * `global`: input position in global coords\n     *  * `globalPrecise`: (optional) sub-voxel offset to the global position\n     *  * `local`: output array which will receive the result\n     */\n    globalToLocal(global, globalPrecise, local) {\n        var off = this.worldOriginOffset\n        if (globalPrecise) {\n            for (var i = 0; i < 3; i++) {\n                var coord = global[i] - off[i]\n                coord += globalPrecise[i]\n                local[i] = coord\n            }\n            return local\n        } else {\n            return vec3.subtract(local, global, off)\n        }\n    }\n\n    /** \n     * Precisely converts a world position to the current internal \n     * local frame of reference.\n     * \n     * See `/docs/positions.md` for more info.\n     * \n     * Params: \n     *  * `local`: input array of local coords\n     *  * `global`: output array which receives the result\n     *  * `globalPrecise`: (optional) sub-voxel offset to the output global position\n     * \n     * If both output arrays are passed in, `global` will get int values and \n     * `globalPrecise` will get fractional parts. If only one array is passed in,\n     * `global` will get the whole output position.\n    */\n    localToGlobal(local, global, globalPrecise = null) {\n        var off = this.worldOriginOffset\n        if (globalPrecise) {\n            for (var i = 0; i < 3; i++) {\n                var floored = Math.floor(local[i])\n                global[i] = floored + off[i]\n                globalPrecise[i] = local[i] - floored\n            }\n            return global\n        } else {\n            return vec3.add(global, local, off)\n        }\n    }\n\n\n\n\n    /*\n     *              Picking / raycasting\n    */\n\n    /**\n     * Raycast through the world, returning a result object for any non-air block\n     * \n     * See `/docs/positions.md` for info on working with precise positions.\n     * \n     * @param {number[]} pos where to pick from (default: player's eye pos)\n     * @param {number[]} dir direction to pick along (default: camera vector)\n     * @param {number} dist pick distance (default: `noa.blockTestDistance`)\n     * @param {(id:number) => boolean} blockTestFunction which voxel IDs can be picked (default: any solid voxel)\n    */\n    pick(pos = null, dir = null, dist = -1, blockTestFunction = null) {\n        if (dist === 0) return null\n        // input position to local coords, if any\n        var pickPos = this._pickPos\n        if (pos) {\n            this.globalToLocal(pos, null, pickPos)\n            pos = pickPos\n        }\n        return this._localPick(pos, dir, dist, blockTestFunction)\n    }\n\n\n    /**\n     * @internal\n     * Do a raycast in local coords. \n     * See `/docs/positions.md` for more info.\n     * @param {number[]} pos where to pick from (default: player's eye pos)\n     * @param {number[]} dir direction to pick along (default: camera vector)\n     * @param {number} dist pick distance (default: `noa.blockTestDistance`)\n     * @param {(id:number) => boolean} blockTestFunction which voxel IDs can be picked (default: any solid voxel)\n     * @returns { null | {\n     *      position: number[],\n     *      normal: number[],\n     *      _localPosition: number[],\n     * }}\n     */\n    _localPick(pos = null, dir = null, dist = -1, blockTestFunction = null) {\n        // do a raycast in local coords - result obj will be in global coords\n        if (dist === 0) return null\n        var testFn = blockTestFunction || this.registry.getBlockSolidity\n        var world = this.world\n        var off = this.worldOriginOffset\n        var testVoxel = function (x, y, z) {\n            var id = world.getBlockID(x + off[0], y + off[1], z + off[2])\n            return testFn(id)\n        }\n        if (!pos) pos = this.camera._localGetTargetPosition()\n        dir = dir || this.camera.getDirection()\n        dist = dist || -1\n        if (dist < 0) dist = this.blockTestDistance\n        var result = this._pickResult\n        var rpos = result._localPosition\n        var rnorm = result.normal\n        var hit = raycast(testVoxel, pos, dir, dist, rpos, rnorm)\n        if (!hit) return null\n        // position is right on a voxel border - adjust it so that flooring works reliably\n        // adjust along normal direction, i.e. away from the block struck\n        vec3.scaleAndAdd(rpos, rpos, rnorm, 0.01)\n        // add global result\n        this.localToGlobal(rpos, result.position)\n        return result\n    }\n\n}\n\n\n\n/*\n * \n * \n * \n *                  INTERNAL HELPERS\n * \n * \n * \n * \n*/\n\n\n\n\n/*\n *\n *      rebase world origin offset around the player if necessary\n *\n*/\nfunction checkWorldOffset(noa) {\n    var lpos = noa.ents.getPositionData(noa.playerEntity)._localPosition\n    var cutoff = noa._originRebaseDistance\n    if (vec3.sqrLen(lpos) < cutoff * cutoff) return\n    var delta = []\n    for (var i = 0; i < 3; i++) {\n        delta[i] = Math.floor(lpos[i])\n        noa.worldOriginOffset[i] += delta[i]\n    }\n    noa.rendering._rebaseOrigin(delta)\n    noa.entities._rebaseOrigin(delta)\n    noa._objectMesher._rebaseOrigin(delta)\n}\n\n\n\n\n\n// Each frame, by default pick along the player's view vector \n// and tell rendering to highlight the struck block face\nfunction updateBlockTargets(noa) {\n    var newhash = 0\n    var blockIdFn = noa.blockTargetIdCheck || noa.registry.getBlockSolidity\n    var result = noa._localPick(null, null, null, blockIdFn)\n    if (result) {\n        var dat = noa._targetedBlockDat\n        // pick stops just shy of voxel boundary, so floored pos is the adjacent voxel\n        vec3.floor(dat.adjacent, result.position)\n        vec3.copy(dat.normal, result.normal)\n        vec3.subtract(dat.position, dat.adjacent, dat.normal)\n        dat.blockID = noa.world.getBlockID(dat.position[0], dat.position[1], dat.position[2])\n        noa.targetedBlock = dat\n        // arbitrary hash so we know when the targeted blockID/pos/face changes\n        var pos = dat.position, norm = dat.normal\n        var x = locationHasher(pos[0] + dat.blockID, pos[1], pos[2])\n        x ^= locationHasher(norm[0], norm[1] + dat.blockID, norm[2])\n        newhash = x\n    } else {\n        noa.targetedBlock = null\n    }\n    if (newhash != noa._prevTargetHash) {\n        noa.emit('targetBlockChanged', noa.targetedBlock)\n        noa._prevTargetHash = newhash\n    }\n}\n\n\n\n/*\n * \n *  add some hooks for guidance on removed APIs\n * \n */\n\nfunction deprecateStuff(noa) {\n    var ver = `0.27`\n    var dep = (loc, name, msg) => {\n        var throwFn = () => { throw `This property changed in ${ver} - ${msg}` }\n        Object.defineProperty(loc, name, { get: throwFn, set: throwFn })\n    }\n    dep(noa, 'getPlayerEyePosition', 'to get the camera/player offset see API docs for `noa.camera.cameraTarget`')\n    dep(noa, 'setPlayerEyePosition', 'to set the camera/player offset see API docs for `noa.camera.cameraTarget`')\n    dep(noa, 'getPlayerPosition', 'use `noa.ents.getPosition(noa.playerEntity)` or similar')\n    dep(noa, 'getCameraVector', 'use `noa.camera.getDirection`')\n    dep(noa, 'getPlayerMesh', 'use `noa.ents.getMeshData(noa.playerEntity).mesh` or similar')\n    dep(noa, 'playerBody', 'use `noa.ents.getPhysicsBody(noa.playerEntity)`')\n    dep(noa.rendering, 'zoomDistance', 'use `noa.camera.zoomDistance`')\n    dep(noa.rendering, '_currentZoom', 'use `noa.camera.currentZoom`')\n    dep(noa.rendering, '_cameraZoomSpeed', 'use `noa.camera.zoomSpeed`')\n    dep(noa.rendering, 'getCameraVector', 'use `noa.camera.getDirection`')\n    dep(noa.rendering, 'getCameraPosition', 'use `noa.camera.getLocalPosition`')\n    dep(noa.rendering, 'getCameraRotation', 'use `noa.camera.heading` and `noa.camera.pitch`')\n    dep(noa.rendering, 'setCameraRotation', 'to customize camera behavior see API docs for `noa.camera`')\n    ver = '0.28'\n    dep(noa.rendering, 'makeMeshInstance', 'removed, use Babylon\\'s `mesh.createInstance`')\n    dep(noa.world, '_maxChunksPendingCreation', 'use `maxChunksPendingCreation` (no \"_\")')\n    dep(noa.world, '_maxChunksPendingMeshing', 'use `maxChunksPendingMeshing` (no \"_\")')\n    dep(noa.world, '_maxProcessingPerTick', 'use `maxProcessingPerTick` (no \"_\")')\n    dep(noa.world, '_maxProcessingPerRender', 'use `maxProcessingPerRender` (no \"_\")')\n    ver = '0.29'\n    dep(noa, '_constants', 'removed, voxel IDs are no longer packed with bit flags')\n    ver = '0.30'\n    dep(noa, '_tickRate', 'tickRate is now at `noa.tickRate`')\n    dep(noa.container, '_tickRate', 'tickRate is now at `noa.tickRate`')\n    ver = '0.31'\n    dep(noa.world, 'chunkSize', 'effectively an internal, so changed to `_chunkSize`')\n    dep(noa.world, 'chunkAddDistance', 'set this with `noa.world.setAddRemoveDistance`')\n    dep(noa.world, 'chunkRemoveDistance', 'set this with `noa.world.setAddRemoveDistance`')\n    ver = '0.33'\n    dep(noa.rendering, 'postMaterialCreationHook', 'Removed - use mesh post-creation hook instead`')\n}\n\n\n\nvar profile_hook = (PROFILE > 0) ?\n    makeProfileHook(PROFILE, 'tick   ') : () => { }\nvar profile_hook_render = (PROFILE_RENDER > 0) ?\n    makeProfileHook(PROFILE_RENDER, 'render ') : () => { }\n", "\nimport { EventEmitter } from 'events'\n\nimport packageJSON from '../package.json'\nvar version = packageJSON.version\n\n\nfunction DefaultOptions() {\n    this.preventDefaults = false\n    this.stopPropagation = false\n    this.allowContextMenu = false\n    this.disabled = false\n}\n\n\nexport class GameInputs {\n\n    /**\n     *   Simple inputs manager to abstract key/mouse inputs.\n     * \n     * @param {HTMLElement} domElement\n     * @param {DefaultOptions} options\n    */\n\n    constructor(domElement, options) {\n        this.version = version\n        var opts = Object.assign({}, new DefaultOptions(), options || {})\n\n        // settings\n        /** The HTMLElement that `inputs` is bound to. */\n        this.element = domElement || document\n        /** When true, all key events with bindings will call `preventDefaults`. */\n        this.preventDefaults = !!opts.preventDefaults\n        /** When true, all key events with bindings will call `stopPropagation`. */\n        this.stopPropagation = !!opts.stopPropagation\n        /** When this is false, the context menu will be prevented from opening if there is a binding to the right mouse button. */\n        this.allowContextMenu = !!opts.allowContextMenu\n        /** When disabled, no binding events will fire. */\n        this.disabled = !!opts.disabled\n\n        /** \n         * Optional filter function. Useful if you want to, e.g., \n         * ignore a key binding if ctrl/alt are pressed, but allow that\n         * same binding if it originated from a mouse event.\n         * @param {KeyboardEvent & MouseEvent} ev\n         * @param {string} bindingName\n        */\n        this.filterEvents = (ev, bindingName) => true\n\n        // emitters\n        /** \n         * Event emitter for binding **press** events.  \n         * The original mouse or key event will be passed as an argument.\n        */\n        this.down = new EventEmitter()\n        /** \n         * Event emitter for binding **release** events.  \n         * The original mouse or key event will be passed as an argument.\n         */\n        this.up = new EventEmitter()\n\n        /** \n         * The boolean state of whether each binding is currently pressed.\n         * \n         * `inputs.state['move-left'] // true if a bound key is pressed`\n         * @type {{ [key:string]: boolean }} \n        */\n        this.state = {}\n\n        /** \n         * Numeric counters representing accumulated pointer/scroll inputs \n         * since the last time `tick` was called.\n        */\n        this.pointerState = {\n            dx: 0,\n            dy: 0,\n            scrollx: 0,\n            scrolly: 0,\n            scrollz: 0,\n        }\n\n        /** \n         * How many times each binding has been **pressed** \n         * since the last time `tick` was called.\n         * @type {{ [key:string]: number }} \n        */\n        this.pressCount = {}\n\n        /** \n         * How many times each binding has been **released** \n         * since the last time `tick` was called.\n         * @type {{ [key:string]: number }} \n        */\n        this.releaseCount = {}\n\n\n\n        // internal state\n        /** @private @type {{ [key:string]: string[] }}   code -> [...binding names] */\n        this._keyBindmap = {}\n        /** @private @type {{ [key:string]: boolean }} code -> isDown */\n        this._keyStates = {}\n        /** @private @type {{ [key:string]: number }}  bindingName -> currCt */\n        this._bindPressCount = {}\n        /** @private */\n        this._touches = { lastX: 0, lastY: 0, currID: null }\n\n        /** @private For a macOs bug workaround */\n        this._pressedDuringMeta = {}\n\n        // register for ALL THE dom events\n        if (document.readyState !== 'loading') {\n            initEvents(this)\n        } else {\n            document.addEventListener('DOMContentLoaded', ev => {\n                initEvents(this)\n            }, { once: true })\n        }\n    }\n\n\n    /**\n     * Binds one or more physical keys to an arbitrary binding name.\n     * Key strings should align to `KeyboardEvent.code` strings - \n     * e.g. `KeyA`, `ArrowDown`, etc.\n     * \n     * `inputs.bind('move-player-left', 'KeyW', 'ArrowLeft')\n     * \n     * @param {string} bindingName \n     * @param {...string} keys \n     */\n    bind(bindingName, ...keys) {\n        keys.forEach(code => {\n            var bindings = this._keyBindmap[code] || []\n            if (bindings.includes(bindingName)) return\n            bindings.push(bindingName)\n            this._keyBindmap[code] = bindings\n        })\n        this.state[bindingName] = !!this.state[bindingName]\n        this.pressCount[bindingName] = this.pressCount[bindingName] || 0\n        this.releaseCount[bindingName] = this.releaseCount[bindingName] || 0\n    }\n\n\n    /**\n     * Removes all key bindings for a given binding name.\n     * \n     * `inputs.unbind('move-player-left')\n     */\n    unbind(bindingName) {\n        for (var code in this._keyBindmap) {\n            var bindings = this._keyBindmap[code]\n            var i = bindings.indexOf(bindingName)\n            if (i > -1) { bindings.splice(i, 1) }\n        }\n    }\n\n    /**\n     * Returns a copy of all existing bindings, in the format:\n     * ```js\n     *   {\n     *      bindingName: [ keyCode1, keyCode2, ... ]\n     *      ...\n     *   }\n     * ```\n     */\n    getBindings() {\n        var res = {}\n        for (var code in this._keyBindmap) {\n            var bindings = this._keyBindmap[code]\n            bindings.forEach(bindingName => {\n                res[bindingName] = res[bindingName] || []\n                res[bindingName].push(code)\n            })\n        }\n        return res\n    }\n\n\n    /**\n     * Tick function - clears out all cumulative counters\n    */\n    tick() {\n        zeroAllProperties(this.pointerState)\n        zeroAllProperties(this.pressCount)\n        zeroAllProperties(this.releaseCount)\n    }\n}\n\nfunction zeroAllProperties(obj) {\n    for (var key in obj) obj[key] = 0\n}\n\n\n\n\n\n\n/*\n *\n *   PRIVATE FUNCTIONS\n *\n*/\n\n/** @param {GameInputs} inputs */\nfunction initEvents(inputs) {\n    // keys\n    window.addEventListener('keydown', onKeyEvent.bind(null, inputs, true), false)\n    window.addEventListener('keyup', onKeyEvent.bind(null, inputs, false), false)\n\n    // pointer/mouse events\n    var pointerOpts = { passive: true }\n    if (window.PointerEvent) {\n        inputs.element.addEventListener(\"pointerdown\", onPointerEvent.bind(null, inputs, true), pointerOpts)\n        window.document.addEventListener(\"pointerup\", onPointerEvent.bind(null, inputs, false), pointerOpts)\n        inputs.element.addEventListener(\"pointermove\", onPointerMove.bind(null, inputs), pointerOpts)\n    } else {\n        inputs.element.addEventListener(\"mousedown\", onPointerEvent.bind(null, inputs, true), pointerOpts)\n        window.document.addEventListener(\"mouseup\", onPointerEvent.bind(null, inputs, false), pointerOpts)\n        inputs.element.addEventListener(\"mousemove\", onPointerMove.bind(null, inputs), pointerOpts)\n    }\n    inputs.element.addEventListener(\"wheel\", onWheelEvent.bind(null, inputs), pointerOpts)\n    inputs.element.addEventListener(\"contextmenu\", onContextMenu.bind(null, inputs), false)\n\n    // doc-level blur event for edge cases\n    window.addEventListener(\"blur\", onWindowBlur.bind(null, inputs), false)\n}\n\n\n\n\n\n/*\n *\n *\n *      INTERNALS - DOM EVENT HANDLERS\n *\n *\n*/\n\nfunction onKeyEvent(inputs, nowDown, ev) {\n    handleKeyEvent(ev.code, nowDown, inputs, ev)\n    workaroundMacBug(nowDown, inputs, ev)\n}\n\nfunction onPointerEvent(inputs, nowDown, ev) {\n    // if pointer events supported, only track the first\n    if ('pointerId' in ev) {\n        if (nowDown) {\n            if (inputs._touches.currID !== null) return\n            inputs._touches.currID = ev.pointerId\n        } else {\n            if (inputs._touches.currID !== ev.pointerId) return\n            inputs._touches.currID = null\n        }\n    }\n    var button = ('button' in ev) ? (ev.button + 1) : 1\n    handleKeyEvent('Mouse' + button, nowDown, inputs, ev)\n    return false\n}\n\nfunction onPointerMove(inputs, ev) {\n    // if a touch exists, ignore movement of other touches\n    if ('pointerId' in ev && inputs._touches.currID !== null) {\n        if (inputs._touches.currID !== ev.pointerId) return\n    }\n    // fire no events, just expose the state data\n    var dx = ev.movementX || ev.mozMovementX || 0,\n        dy = ev.movementY || ev.mozMovementY || 0\n    inputs.pointerState.dx += dx\n    inputs.pointerState.dy += dy\n}\n\n\n\n\n/*\n * \n *      mousewheel / scroll handling...\n * \n */\n\nfunction onWheelEvent(inputs, ev) {\n    var scale = 1\n    switch (ev.deltaMode) {\n        case 0: scale = 1; break  // Pixel\n        case 1: scale = 12; break  // Line\n        case 2:  // page\n            // TODO: investigate when this happens, what correct handling is\n            scale = inputs.element.clientHeight || window.innerHeight\n            break\n    }\n    // accumulate state\n    inputs.pointerState.scrollx += (ev.deltaX || 0) * scale\n    inputs.pointerState.scrolly += (ev.deltaY || 0) * scale\n    inputs.pointerState.scrollz += (ev.deltaZ || 0) * scale\n}\n\n\n/*\n *\n *          Edge cases...\n *\n*/\n\nfunction onContextMenu(inputs, ev) {\n    if (!inputs.allowContextMenu) {\n        ev.preventDefault()\n        return false\n    }\n}\n\nfunction onWindowBlur(inputs) {\n    // at least some browsers handle mouse events correctly here\n    // but not keys, so on window blur simulate a keyUp for all pressed keys\n    // there may be a better way to handle this someday..\n    for (var code in inputs._keyStates) {\n        if (!inputs._keyStates[code]) continue\n        if (/^Mouse\\d/.test(code)) continue\n        handleKeyEvent(code, false, inputs, {\n            code: code,\n            note: `This is a mocked KeyboardEvent made by the 'game-inputs' module`,\n            preventDefault: () => { },\n            stopPropagation: () => { },\n        })\n    }\n}\n\n\n\n\n/*\n *\n *\n *          FINAL KEY BIND HANDLING\n *\n *\n*/\n\n// tracks the state/counts of individual physical keys\nfunction handleKeyEvent(code, nowDown, inputs, ev) {\n    var bindings = inputs._keyBindmap[code]\n    if (!bindings) return\n\n    // if the key state has changed, handle the event for all bindings\n    var prevState = inputs._keyStates[code]\n    if (XOR(prevState, nowDown)) {\n        inputs._keyStates[code] = nowDown\n        bindings.forEach(bindingName => {\n            // allow client to filter events if applicable\n            var allow = (inputs.filterEvents) ?\n                inputs.filterEvents(ev, bindingName) : true\n            if (!allow) return\n            // finally emit the event\n            handleBindingEvent(bindingName, nowDown, inputs, ev)\n        })\n    }\n\n    // prevent/stop only for non-mouse events\n    if (!('button' in ev)) {\n        if (inputs.preventDefaults && !ev.defaultPrevented) {\n            ev.preventDefault()\n        }\n        if (inputs.stopPropagation) ev.stopPropagation()\n    }\n\n}\n\n\n// tracks the state/counts of virtual bindings\nfunction handleBindingEvent(bindingName, pressed, inputs, ev) {\n    // externally, track *cumulative* press/release counts\n    var counter = (pressed) ? inputs.pressCount : inputs.releaseCount\n    counter[bindingName] = (counter[bindingName] || 0) + 1\n    // internally, track *current* press count (to handle overlapping keybinds)\n    var ct = inputs._bindPressCount[bindingName] || 0\n    ct += pressed ? 1 : -1\n    if (ct < 0) { ct = 0 } // shouldn't happen\n    inputs._bindPressCount[bindingName] = ct\n\n    // emit event if binding's state has changed\n    var currstate = inputs.state[bindingName]\n    if (XOR(currstate, ct)) {\n        inputs.state[bindingName] = (ct > 0)\n        var emitter = pressed ? inputs.down : inputs.up\n        if (!inputs.disabled) emitter.emit(bindingName, ev)\n    }\n}\n\n\n\n\n/*\n *\n *\n *    HELPERS\n *\n *\n*/\n\n\n// how is this not part of Javascript?\nfunction XOR(a, b) {\n    return a ? !b : b\n}\n\n\n/*\n *\n *\n *    MEHHHH\n *\n *\n*/\n\n\nfunction workaroundMacBug(down, inputs, ev) {\n    var isMeta = /^Meta/.test(ev.code)\n    if (ev.metaKey && !isMeta && down) {\n        // remember any key codes that were pressed while meta is down \n        inputs._pressedDuringMeta[ev.code] = true\n    } else if (isMeta && !down) {\n        // when meta released, maybe issue keyUps for them\n        for (var code in inputs._pressedDuringMeta) {\n            if (!inputs._keyStates[code]) continue\n            if (/^Mouse\\d/.test(code)) continue\n            handleKeyEvent(code, false, inputs, {\n                code: code,\n                note: `This is a mocked KeyboardEvent made by the 'game-inputs' module`,\n                preventDefault: () => { },\n                stopPropagation: () => { },\n            })\n        }\n        inputs._pressedDuringMeta = {}\n    }\n}\n\n\n", "{\n    \"name\": \"game-inputs\",\n    \"version\": \"0.8.0\",\n    \"description\": \"Simple library to abstract key/mouse events for games.\",\n    \"main\": \"src/inputs.js\",\n    \"typings\": \"dist/src/inputs.d.ts\",\n    \"files\": [\n        \"/src\",\n        \"/dist\"\n    ],\n    \"scripts\": {\n        \"start\": \"cd docs/ && webpack serve\",\n        \"build\": \"tsc; cd docs/ && webpack\"\n    },\n    \"author\": \"Andy Hall\",\n    \"license\": \"ISC\",\n    \"keywords\": [\n        \"game\",\n        \"inputs\",\n        \"key\",\n        \"mouse\",\n        \"events\"\n    ],\n    \"dependencies\": {\n        \"events\": \"^3.3.0\"\n    },\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/fenomas/game-inputs\"\n    },\n    \"bugs\": {\n        \"url\": \"https://github.com/fenomas/game-inputs/issues\"\n    }\n}\n", "\nimport { GameInputs } from 'game-inputs'\n\nvar defaultOptions = {\n    preventDefaults: false,\n    stopPropagation: false,\n    allowContextMenu: false,\n}\n\nvar defaultBindings = {\n    \"forward\": [\"KeyW\", \"ArrowUp\"],\n    \"backward\": [\"KeyS\", \"ArrowDown\"],\n    \"left\": [\"KeyA\", \"ArrowLeft\"],\n    \"right\": [\"KeyD\", \"ArrowRight\"],\n    \"fire\": \"Mouse1\",\n    \"mid-fire\": [\"Mouse2\", \"KeyQ\"],\n    \"alt-fire\": [\"Mouse3\", \"KeyE\"],\n    \"jump\": \"Space\",\n}\n\n/**\n * `noa.inputs` - Handles key and mouse input bindings.\n * \n * This module extends \n * [game-inputs](https://github.com/fenomas/game-inputs),\n * so turn on \"Inherited\" to see its APIs here, or view the base module \n * for full docs.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * \n * ```js\n *   defaultBindings: {\n *     \"forward\":  [\"KeyW\", \"ArrowUp\"],\n *     \"backward\": [\"KeyS\", \"ArrowDown\"],\n *     \"left\":     [\"KeyA\", \"ArrowLeft\"],\n *     \"right\":    [\"KeyD\", \"ArrowRight\"],\n *     \"fire\":     \"Mouse1\",\n *     \"mid-fire\": [\"Mouse2\", \"KeyQ\"],\n *     \"alt-fire\": [\"Mouse3\", \"KeyE\"],\n *     \"jump\":     \"Space\",\n *   }\n * ```\n */\n\nexport class Inputs extends GameInputs {\n\n    /** @internal */\n    constructor(noa, opts, element) {\n        opts = Object.assign({}, defaultOptions, opts)\n        super(element, opts)\n\n        var b = opts.bindings || defaultBindings\n        for (var name in b) {\n            var keys = Array.isArray(b[name]) ? b[name] : [b[name]]\n            this.bind(name, ...keys)\n        }\n    }\n}\n\n", "\nimport { EventEmitter } from 'events'\nimport { MicroGameShell } from 'micro-game-shell'\n\n\n\n\n\n/**\n * `noa.container` - manages the game's HTML container element, canvas, \n * fullscreen, pointerLock, and so on.\n * \n * This module wraps `micro-game-shell`, which does most of the implementation.\n * \n * **Events**\n *  + `DOMready => ()`  \n *    Relays the browser DOMready event, after noa does some initialization\n *  + `gainedPointerLock => ()`  \n *    Fires when the game container gains pointerlock.\n *  + `lostPointerLock => ()`  \n *    Fires when the game container loses pointerlock.\n */\n\nexport class Container extends EventEmitter {\n\n    /** @internal */\n    constructor(noa, opts) {\n        super()\n        opts = opts || {}\n\n        /** \n         * @internal\n         * @type {import('../index').Engine}\n        */\n        this.noa = noa\n\n        /** The game's DOM element container */\n        var domEl = opts.domElement || null\n        if (typeof domEl === 'string') {\n            domEl = document.querySelector(domEl)\n        }\n        this.element = domEl || createContainerDiv()\n\n        /** The `canvas` element that the game will draw into */\n        this.canvas = getOrCreateCanvas(this.element)\n        doCanvasBugfix(noa, this.canvas) // grumble...\n\n\n        /** Whether the browser supports pointerLock. @readonly */\n        this.supportsPointerLock = false\n\n        /** Whether the user's pointer is within the game area. @readonly */\n        this.pointerInGame = false\n\n        /** Whether the game is focused. @readonly */\n        this.isFocused = !!document.hasFocus()\n\n        /** Gets the current state of pointerLock. @readonly */\n        this.hasPointerLock = false\n\n\n\n        // shell manages tick/render rates, and pointerlock/fullscreen\n        var pollTime = 10\n        /** @internal */\n        this._shell = new MicroGameShell(this.element, pollTime)\n        this._shell.tickRate = opts.tickRate\n        this._shell.maxRenderRate = opts.maxRenderRate\n        this._shell.stickyPointerLock = opts.stickyPointerLock\n        this._shell.stickyFullscreen = opts.stickyFullscreen\n        this._shell.maxTickTime = 50\n\n\n\n        // core timing events\n        this._shell.onTick = noa.tick.bind(noa)\n        this._shell.onRender = noa.render.bind(noa)\n\n        // shell listeners\n        this._shell.onPointerLockChanged = (hasPL) => {\n            this.hasPointerLock = hasPL\n            this.emit((hasPL) ? 'gainedPointerLock' : 'lostPointerLock')\n            // this works around a Firefox bug where no mouse-in event \n            // gets issued after starting pointerlock\n            if (hasPL) this.pointerInGame = true\n        }\n\n        // catch and relay domReady event\n        this._shell.onInit = () => {\n            this._shell.onResize = noa.rendering.resize.bind(noa.rendering)\n            // listeners to track when game has focus / pointer\n            detectPointerLock(this)\n            this.element.addEventListener('mouseenter', () => { this.pointerInGame = true })\n            this.element.addEventListener('mouseleave', () => { this.pointerInGame = false })\n            window.addEventListener('focus', () => { this.isFocused = true })\n            window.addEventListener('blur', () => { this.isFocused = false })\n            // catch edge cases for initial states\n            var onFirstMousedown = () => {\n                this.pointerInGame = true\n                this.isFocused = true\n                this.element.removeEventListener('mousedown', onFirstMousedown)\n            }\n            this.element.addEventListener('mousedown', onFirstMousedown)\n            // emit for engine core\n            this.emit('DOMready')\n            // done and remove listener\n            this._shell.onInit = null\n        }\n    }\n\n\n    /*\n     *\n     *\n     *              PUBLIC API \n     *\n     *\n    */\n\n    /** @internal */\n    appendTo(htmlElement) {\n        this.element.appendChild(htmlElement)\n    }\n\n    /** \n     * Sets whether `noa` should try to acquire or release pointerLock\n    */\n    setPointerLock(lock = false) {\n        // not sure if this will work robustly\n        this._shell.pointerLock = !!lock\n    }\n}\n\n\n\n/*\n *\n *\n *              INTERNALS\n *\n *\n*/\n\n\nfunction createContainerDiv() {\n    // based on github.com/mikolalysenko/game-shell - makeDefaultContainer()\n    var container = document.createElement(\"div\")\n    container.tabIndex = 1\n    container.style.position = \"fixed\"\n    container.style.left = \"0px\"\n    container.style.right = \"0px\"\n    container.style.top = \"0px\"\n    container.style.bottom = \"0px\"\n    container.style.height = \"100%\"\n    container.style.overflow = \"hidden\"\n    document.body.appendChild(container)\n    document.body.style.overflow = \"hidden\" //Prevent bounce\n    document.body.style.height = \"100%\"\n    container.id = 'noa-container'\n    return container\n}\n\n\nfunction getOrCreateCanvas(el) {\n    // based on github.com/stackgl/gl-now - default canvas\n    var canvas = el.querySelector('canvas')\n    if (!canvas) {\n        canvas = document.createElement('canvas')\n        canvas.style.position = \"absolute\"\n        canvas.style.left = \"0px\"\n        canvas.style.top = \"0px\"\n        canvas.style.height = \"100%\"\n        canvas.style.width = \"100%\"\n        canvas.id = 'noa-canvas'\n        el.insertBefore(canvas, el.firstChild)\n    }\n    return canvas\n}\n\n\n// set up stuff to detect pointer lock support.\n// Needlessly complex because Chrome/Android claims to support but doesn't.\n// For now, just feature detect, but assume no support if a touch event occurs\n// TODO: see if this makes sense on hybrid touch/mouse devices\nfunction detectPointerLock(self) {\n    var lockElementExists =\n        ('pointerLockElement' in document) ||\n        ('mozPointerLockElement' in document) ||\n        ('webkitPointerLockElement' in document)\n    if (lockElementExists) {\n        self.supportsPointerLock = true\n        var listener = function (e) {\n            self.supportsPointerLock = false\n            document.removeEventListener(e.type, listener)\n        }\n        document.addEventListener('touchmove', listener)\n    }\n}\n\n\n/**\n * This works around a weird bug that seems to be chrome/mac only?\n * Without this, the page sometimes initializes with the canva\n * zoomed into its lower left quadrant. \n * Resizing the canvas fixes the issue (also: resizing page, changing zoom...)\n */\nfunction doCanvasBugfix(noa, canvas) {\n    var ct = 0\n    var fixCanvas = () => {\n        var w = canvas.width\n        canvas.width = w + 1\n        canvas.width = w\n        if (ct++ > 10) noa.off('beforeRender', fixCanvas)\n    }\n    noa.on('beforeRender', fixCanvas)\n}\n", "\n\n\n/*\n * \n * \n *      base class and API\n * \n * \n*/\n\nexport class MicroGameShell {\n\n    constructor(domElement = null, pollTime = 10) {\n\n        /** When true, the shell will try to acquire pointerlock on click events */\n        this.stickyPointerLock = false\n        /** When true, the shell will try to acquire fullscreen on click events */\n        this.stickyFullscreen = false\n\n        /** Desired tick events per second */\n        this.tickRate = 30\n        /** Upper limit for render events per second - `0` means uncapped */\n        this.maxRenderRate = 0\n        /** Max time spent issuing tick events when behind schedule. If the shell spends this long on tick events, it will discard all pending ticks to catch up. */\n        this.maxTickTime = 100\n\n\n        /** Check or set whether the DOM element has pointerlock */\n        this.pointerLock = false\n        /** Check or set whether the DOM element has fullscreen */\n        this.fullscreen = false\n\n        /**\n         * Tick event handler.\n         * @param {number} dt: tick duration (ms) - this is a fixed value based on the tick rate, not the observed time elapsed\n         */\n        this.onTick = function (dt) { }\n\n        /**\n         * Render event handler.\n         * @param {number} dt: elapsed time (ms) since previous render event\n         * @param {number} framePart: fraction (0..1) corresponding to how much of the current tick has elapsed\n         * @param {number} tickDur: tick duration (ms)\n         */\n        this.onRender = function (dt, framePart, tickDur) { }\n\n\n        /** This event fires once after shell initializes. */\n        this.onInit = function () { }\n        /** This event fires when the domElement's window resizes */\n        this.onResize = function () { }\n        /** This event fires when pointerlock is gained or lost */\n        this.onPointerLockChanged = function (hasPL = false) { }\n        /** This event fires when fullscreen is gained or lost */\n        this.onFullscreenChanged = function (hasFS = false) { }\n        /** This event fires when a pointerLock error occurs */\n        this.onPointerLockError = function (err) { }\n\n\n\n        // hide internals in a data object\n        this._data = new Data(pollTime)\n\n        // init\n        domReady(() => {\n            setupTimers(this)\n            setupDomElement(this, domElement)\n            this.onInit()\n        })\n    }\n}\n\n\n// internal data structure\nfunction Data(pollTime = 10) {\n    this.nowObject = performance || Date\n    this.pollTime = pollTime\n    this.renderAccum = 0\n    this.lastTickStarted = 0\n    this.lastFrameStarted = 0\n    this.lastRenderStarted = 0\n    this.avgTickTime = 2\n    this.frameCB = null\n    this.intervalCB = null\n    this.intervalID = -1\n}\n\n\n\n\n\n\n\n/*\n * \n *      tick- and render events\n * \n*/\n\n/** @param {MicroGameShell} shell */\nfunction setupTimers(shell) {\n    var dat = shell._data\n    var now = dat.nowObject.now()\n    dat.lastTickStarted = now\n    dat.lastFrameStarted = now\n    dat.lastRenderStarted = now\n\n    dat.frameCB = () => frameHandler(shell)\n    dat.intervalCB = () => intervalHandler(shell)\n    requestAnimationFrame(dat.frameCB)\n\n    if (dat.pollTime > 0) {\n        dat.intervalID = setInterval(dat.intervalCB, dat.pollTime)\n    }\n}\n\n\n\n\n/** \n * RAF handler - triggers render events\n * @param {MicroGameShell} shell\n*/\nfunction frameHandler(shell) {\n    var dat = shell._data\n    requestAnimationFrame(dat.frameCB)\n    // first catch up on ticks if we're behind schedule\n    intervalHandler(shell)\n    // now decide whether to do a render, if rate is capped\n    var now = dat.nowObject.now()\n    var dt = now - dat.lastFrameStarted\n    dat.lastFrameStarted = now\n    if (shell.maxRenderRate > 0) {\n        dat.renderAccum += dt\n        var frameDur = 1000 / shell.maxRenderRate\n        if (dat.renderAccum < frameDur) return\n        dat.renderAccum -= frameDur\n        // don't save up more than one pending frame\n        if (dat.renderAccum > frameDur) dat.renderAccum = frameDur\n    }\n    // issue the render event\n    var renderDt = now - dat.lastRenderStarted\n    dat.lastRenderStarted = now\n    var tickDur = 1000 / shell.tickRate\n    var framePart = (now - dat.lastTickStarted) / tickDur\n    if (framePart < 0) framePart = 0\n\n    // issue render, and optimistically schedule lookahead interval handler\n    shell.onRender(renderDt, framePart, tickDur)\n    setTimeout(intervalHandler, 0, shell, true)\n}\n\n\n\n\n/** \n * setInterval handler - triggers tick events\n * @param {MicroGameShell} shell\n*/\nfunction intervalHandler(shell, lookAhead = false) {\n    var dat = shell._data\n    var now = dat.nowObject.now()\n    // decide base and cutoff times until which we issue ticks\n    var tickUntil = now\n    if (lookAhead) tickUntil += dat.avgTickTime\n    var cutoffTime = now + shell.maxTickTime\n    if (!(cutoffTime > now)) cutoffTime = now + 1\n    var tickDur = 1000 / shell.tickRate\n\n    // issue ticks until we're up to date or out of time\n    while (dat.lastTickStarted + tickDur < tickUntil) {\n        shell.onTick(tickDur)\n        dat.lastTickStarted += tickDur\n        var after = dat.nowObject.now()\n        dat.avgTickTime = runningAverage(dat.avgTickTime, after - now)\n\n        // and track the approx processing time, and close loop\n        now = after\n        if (now > cutoffTime) {\n            dat.lastTickStarted = now\n            return\n        }\n    }\n}\n\n\n\n\n\n\n\n/*\n * \n *      DOM element and sticky fullscreen/pointerlock\n * \n*/\n\nfunction setupDomElement(shell, el) {\n    if (!el) return\n    var hasPL = false\n    var hasFS = false\n\n    var setPL = (want) => {\n        hasPL = (el === document.pointerLockElement)\n        if (!!want === hasPL) return\n        if (want) {\n            // chrome returns a promise here, others don't\n            var res = el.requestPointerLock()\n            if (res && res.catch) res.catch(err => {\n                // error already handled in `pointerlockerror`\n            })\n        } else {\n            document.exitPointerLock()\n        }\n    }\n    var setFS = (want) => {\n        hasFS = (el === document.fullscreenElement)\n        if (!!want === hasFS) return\n        if (want) {\n            if (el.requestFullscreen) {\n                el.requestFullscreen()\n            } else if (el.webkitRequestFullscreen) {\n                el.webkitRequestFullscreen()\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen()\n            } else if (document['webkitExitFullscreen']) {\n                document['webkitExitFullscreen']()\n            }\n        }\n    }\n\n    // track whether we actually have PL/FS, and send events\n    document.addEventListener('pointerlockchange', ev => {\n        hasPL = (el === document.pointerLockElement)\n        shell.onPointerLockChanged(hasPL)\n    })\n    document.addEventListener('fullscreenchange', ev => {\n        hasFS = (el === document.fullscreenElement)\n        shell.onFullscreenChanged(hasFS)\n    })\n    document.addEventListener('pointerlockerror', err => {\n        hasPL = (el === document.pointerLockElement)\n        shell.onPointerLockError(err)\n    })\n\n\n    // decorate shell with getter/setters that request FS/PL\n    Object.defineProperty(shell, 'pointerLock', {\n        get: () => hasPL,\n        set: setPL,\n    })\n    Object.defineProperty(shell, 'fullscreen', {\n        get: () => hasFS,\n        set: setFS,\n    })\n\n\n    // stickiness via click handler\n    el.addEventListener('click', ev => {\n        if (shell.stickyPointerLock) setPL(true)\n        if (shell.stickyFullscreen) setFS(true)\n    })\n\n\n    // resize events via ResizeObserver\n    var resizeHandler = () => shell.onResize()\n    if (window.ResizeObserver) {\n        var observer = new ResizeObserver(resizeHandler)\n        observer.observe(el)\n    } else {\n        window.addEventListener('resize', resizeHandler)\n    }\n}\n\n\n\n\n\n/*\n * \n *      util \n * \n*/\n\nfunction runningAverage(avg, newVal) {\n    // squash effects of large one-off spikes\n    if (newVal > avg * 4) newVal = avg * 4\n    if (newVal < avg * 0.25) newVal = avg * 0.25\n    return 0.9 * avg + 0.1 * newVal\n}\n\nfunction domReady(fn) {\n    if (document.readyState === 'loading') {\n        var handler = () => {\n            document.removeEventListener('readystatechange', handler)\n            fn()\n        }\n        document.addEventListener('readystatechange', handler)\n    } else {\n        setTimeout(fn, 0)\n    }\n}\n", "\nimport vec3 from 'gl-vec3'\nimport aabb from 'aabb-3d'\nimport sweep from 'voxel-aabb-sweep'\n\n\n\n// default options\nfunction CameraDefaults() {\n    this.inverseX = false\n    this.inverseY = false\n    this.sensitivityMult = 1\n    this.sensitivityMultOutsidePointerlock = 0\n    this.sensitivityX = 10\n    this.sensitivityY = 10\n    this.initialZoom = 0\n    this.zoomSpeed = 0.2\n}\n\n\n// locals\nvar tempVectors = [\n    vec3.create(),\n    vec3.create(),\n    vec3.create(),\n]\nvar originVector = vec3.create()\n\n\n/**\n * `noa.camera` - manages the camera, its position and direction, \n * mouse sensitivity, and so on.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * ```js\n * var defaults = {\n *     inverseX: false,\n *     inverseY: false,\n *     sensitivityX: 10,\n *     sensitivityY: 10,\n *     initialZoom: 0,\n *     zoomSpeed: 0.2,\n * }\n * ```\n*/\n\nexport class Camera {\n\n    /** \n     * @internal \n     * @param {import('../index').Engine} noa\n     * @param {Partial.<CameraDefaults>} opts\n    */\n    constructor(noa, opts) {\n        opts = Object.assign({}, new CameraDefaults, opts)\n        this.noa = noa\n\n        /** Horizontal mouse sensitivity. Same scale as Overwatch (typical values around `5..10`) */\n        this.sensitivityX = +opts.sensitivityX\n\n        /** Vertical mouse sensitivity. Same scale as Overwatch (typical values around `5..10`) */\n        this.sensitivityY = +opts.sensitivityY\n\n        /** Mouse look inverse (horizontal) */\n        this.inverseX = !!opts.inverseX\n\n        /** Mouse look inverse (vertical) */\n        this.inverseY = !!opts.inverseY\n\n        /** \n         * Multiplier for temporarily altering mouse sensitivity.\n         * Set this to `0` to temporarily disable camera controls.\n        */\n        this.sensitivityMult = opts.sensitivityMult\n\n        /** \n         * Multiplier for altering mouse sensitivity when pointerlock\n         * is not active - default of `0` means no camera movement.\n         * Note this setting is ignored if pointerLock isn't supported.\n         */\n        this.sensitivityMultOutsidePointerlock = opts.sensitivityMultOutsidePointerlock\n\n        /** \n         * Camera yaw angle. \n         * Returns the camera's rotation angle around the vertical axis. \n         * Range: `0..2π`  \n         * This value is writeable, but it's managed by the engine and \n         * will be overwritten each frame.\n        */\n        this.heading = 0\n\n        /** Camera pitch angle. \n         * Returns the camera's up/down rotation angle. The pitch angle is \n         * clamped by a small epsilon, such that the camera never quite \n         * points perfectly up or down.  \n         * Range: `-π/2..π/2`.  \n         * This value is writeable, but it's managed by the engine and \n         * will be overwritten each frame.\n        */\n        this.pitch = 0\n\n        /** \n         * Entity ID of a special entity that exists for the camera to point at.\n         * \n         * By default this entity follows the player entity, so you can \n         * change the player's eye height by changing the `follow` component's offset:\n         * ```js\n         * var followState = noa.ents.getState(noa.camera.cameraTarget, 'followsEntity')\n         * followState.offset[1] = 0.9 * myPlayerHeight\n         * ```\n         * \n         * For customized camera controls you can change the follow \n         * target to some other entity, or override the behavior entirely:\n         * ```js\n         * // make cameraTarget stop following the player\n         * noa.ents.removeComponent(noa.camera.cameraTarget, 'followsEntity')\n         * // control cameraTarget position directly (or whatever..)\n         * noa.ents.setPosition(noa.camera.cameraTarget, [x,y,z])\n         * ```\n        */\n        this.cameraTarget = this.noa.ents.createEntity(['position'])\n\n        // make the camera follow the cameraTarget entity\n        var eyeOffset = 0.9 * noa.ents.getPositionData(noa.playerEntity).height\n        noa.ents.addComponent(this.cameraTarget, 'followsEntity', {\n            entity: noa.playerEntity,\n            offset: [0, eyeOffset, 0],\n        })\n\n        /** How far back the camera should be from the player's eye position */\n        this.zoomDistance = opts.initialZoom\n\n        /** How quickly the camera moves to its `zoomDistance` (0..1) */\n        this.zoomSpeed = opts.zoomSpeed\n\n        /** Current actual zoom distance. This differs from `zoomDistance` when\n         * the camera is in the process of moving towards the desired distance, \n         * or when it's obstructed by solid terrain behind the player.\n         * This value will get overwritten each tick, but you may want to write to it\n         * when overriding the camera zoom speed.\n        */\n        this.currentZoom = opts.initialZoom\n\n        /** @internal */\n        this._dirVector = vec3.fromValues(0, 0, 1)\n    }\n\n\n\n\n    /*\n     * \n     * \n     *          API\n     * \n     * \n    */\n\n\n    /*\n     *      Local position functions for high precision\n    */\n    /** @internal */\n    _localGetTargetPosition() {\n        var pdat = this.noa.ents.getPositionData(this.cameraTarget)\n        var pos = tempVectors[0]\n        return vec3.copy(pos, pdat._renderPosition)\n    }\n    /** @internal */\n    _localGetPosition() {\n        var loc = this._localGetTargetPosition()\n        if (this.currentZoom === 0) return loc\n        return vec3.scaleAndAdd(loc, loc, this._dirVector, -this.currentZoom)\n    }\n\n\n\n    /**\n     * Returns the camera's current target position - i.e. the player's \n     * eye position. When the camera is zoomed all the way in, \n     * this returns the same location as `camera.getPosition()`.\n    */\n    getTargetPosition() {\n        var loc = this._localGetTargetPosition()\n        var globalCamPos = tempVectors[1]\n        return this.noa.localToGlobal(loc, globalCamPos)\n    }\n\n\n    /**\n     * Returns the current camera position (read only)\n    */\n    getPosition() {\n        var loc = this._localGetPosition()\n        var globalCamPos = tempVectors[2]\n        return this.noa.localToGlobal(loc, globalCamPos)\n    }\n\n\n    /**\n     * Returns the camera direction vector (read only)\n    */\n    getDirection() {\n        return this._dirVector\n    }\n\n\n\n\n    /*\n     * \n     * \n     * \n     *          internals below\n     * \n     * \n     * \n    */\n\n\n\n    /**\n     * Called before render, if mouseLock etc. is applicable.\n     * Applies current mouse x/y inputs to the camera angle and zoom\n     * @internal\n    */\n\n    applyInputsToCamera() {\n\n        // conditional changes to mouse sensitivity\n        var senseMult = this.sensitivityMult\n        if (this.noa.container.supportsPointerLock) {\n            if (!this.noa.container.hasPointerLock) {\n                senseMult *= this.sensitivityMultOutsidePointerlock\n            }\n        }\n        if (senseMult === 0) return\n\n        // dx/dy from input state\n        var pointerState = this.noa.inputs.pointerState\n        bugFix(pointerState) // TODO: REMOVE EVENTUALLY    \n\n        // convert to rads, using (sens * 0.0066 deg/pixel), like Overwatch\n        var conv = 0.0066 * Math.PI / 180\n        var dx = pointerState.dx * this.sensitivityX * senseMult * conv\n        var dy = pointerState.dy * this.sensitivityY * senseMult * conv\n        if (this.inverseX) dx = -dx\n        if (this.inverseY) dy = -dy\n\n        // normalize/clamp angles, update direction vector\n        var twopi = 2 * Math.PI\n        this.heading += (dx < 0) ? dx + twopi : dx\n        if (this.heading > twopi) this.heading -= twopi\n        var maxPitch = Math.PI / 2 - 0.001\n        this.pitch = Math.max(-maxPitch, Math.min(maxPitch, this.pitch + dy))\n\n        vec3.set(this._dirVector, 0, 0, 1)\n        var dir = this._dirVector\n        var origin = originVector\n        vec3.rotateX(dir, dir, origin, this.pitch)\n        vec3.rotateY(dir, dir, origin, this.heading)\n    }\n\n\n\n    /**\n     *  Called before all renders, pre- and post- entity render systems\n     * @internal\n    */\n    updateBeforeEntityRenderSystems() {\n        // zoom update\n        this.currentZoom += (this.zoomDistance - this.currentZoom) * this.zoomSpeed\n    }\n\n    /** @internal */\n    updateAfterEntityRenderSystems() {\n        // clamp camera zoom not to clip into solid terrain\n        var maxZoom = cameraObstructionDistance(this)\n        if (this.currentZoom > maxZoom) this.currentZoom = maxZoom\n    }\n\n}\n\n\n\n\n/*\n *  check for obstructions behind camera by sweeping back an AABB\n*/\n\nfunction cameraObstructionDistance(self) {\n    if (!self._sweepBox) {\n        self._sweepBox = new aabb([0, 0, 0], [0.2, 0.2, 0.2])\n        self._sweepGetVoxel = self.noa.world.getBlockSolidity.bind(self.noa.world)\n        self._sweepVec = vec3.create()\n        self._sweepHit = () => true\n    }\n    var pos = vec3.copy(self._sweepVec, self._localGetTargetPosition())\n    vec3.add(pos, pos, self.noa.worldOriginOffset)\n    for (var i = 0; i < 3; i++) pos[i] -= 0.1\n    self._sweepBox.setPosition(pos)\n    var dist = Math.max(self.zoomDistance, self.currentZoom) + 0.1\n    vec3.scale(self._sweepVec, self.getDirection(), -dist)\n    return sweep(self._sweepGetVoxel, self._sweepBox, self._sweepVec, self._sweepHit, true)\n}\n\n\n\n\n\n\n// workaround for this Chrome 63 + Win10 bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=781182\n// later updated to also address: https://github.com/fenomas/noa/issues/153\nfunction bugFix(pointerState) {\n    var dx = pointerState.dx\n    var dy = pointerState.dy\n    var badx = (Math.abs(dx) > 400 && Math.abs(dx / lastx) > 4)\n    var bady = (Math.abs(dy) > 400 && Math.abs(dy / lasty) > 4)\n    if (badx || bady) {\n        pointerState.dx = lastx\n        pointerState.dy = lasty\n        lastx = (lastx + dx) / 2\n        lasty = (lasty + dy) / 2\n    } else {\n        lastx = dx || 1\n        lasty = dy || 1\n    }\n}\n\nvar lastx = 0\nvar lasty = 0\n", "/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    x = v[0],\n    y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7],\n    a8 = a[8];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n\n/**\n * Quaternion in the format XYZW\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var by = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bz = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function exp(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function ln(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  var omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x Angle to rotate around X axis in degrees.\n * @param {Number} y Angle to rotate around Y axis in degrees.\n * @param {Number} z Angle to rotate around Z axis in degrees.\n * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n  var order = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : glMatrix.ANGLE_ORDER;\n  var halfToRad = Math.PI / 360;\n  x *= halfToRad;\n  z *= halfToRad;\n  y *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  switch (order) {\n    case \"xyz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"xzy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yxz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yzx\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zxy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zyx\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    default:\n      throw new Error('Unknown angle order ' + order);\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a quaternion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport var clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport var fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport var copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport var set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport var add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport var scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport var dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport var lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport var length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport var squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport var normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport var exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions point approximately to the same direction.\n *\n * Both quaternions are assumed to be unit length.\n *\n * @param {ReadonlyQuat} a The first unit quaternion.\n * @param {ReadonlyQuat} b The second unit quaternion.\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\n}\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0],\n    y = a[1];\n  return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n    p1 = a[1] - b[1],\n    sinC = Math.sin(rad),\n    cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n\n/**\n * Get the smallest angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.abs(Math.atan2(ay * bx - ax * by, ax * bx + ay * by));\n}\n\n/**\n * Get the signed angle in the interval [-pi,pi] between two 2D vectors (positive if `a` is to the right of `b`)\n * \n * @param {ReadonlyVec2} a The first vector\n * @param {ReadonlyVec2} b The second vector\n * @returns {number} The signed angle in radians\n */\nexport function signedAngle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.atan2(ax * by - ay * bx, ax * bx + ay * by);\n}\n\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1];\n  var b0 = b[0],\n    b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 2;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n    return a;\n  };\n}();", null, "\nimport ECS from 'ent-comp'\nimport vec3 from 'gl-vec3'\nimport { updatePositionExtents } from '../components/position'\nimport { setPhysicsFromPosition } from '../components/physics'\n\n\n// Component definitions\nimport collideEntitiesComp from \"../components/collideEntities.js\"\nimport collideTerrainComp from \"../components/collideTerrain.js\"\nimport fadeOnZoomComp from \"../components/fadeOnZoom.js\"\nimport followsEntityComp from \"../components/followsEntity.js\"\nimport meshComp from \"../components/mesh.js\"\nimport movementComp from \"../components/movement.js\"\nimport physicsComp from \"../components/physics.js\"\nimport positionComp from \"../components/position.js\"\nimport receivesInputsComp from \"../components/receivesInputs.js\"\nimport shadowComp from \"../components/shadow.js\"\nimport smoothCameraComp from \"../components/smoothCamera.js\"\n\n\n\nvar defaultOptions = {\n    shadowDistance: 10,\n}\n\n\n/**\n * `noa.entities` - manages entities and components.\n * \n * This class extends [ent-comp](https://github.com/fenomas/ent-comp), \n * a general-purpose ECS. It's also decorated with noa-specific helpers and \n * accessor functions for querying entity positions, etc.\n * \n * Expects entity definitions in a specific format - see source `components` \n * folder for examples.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * \n * ```js\n * var defaults = {\n *     shadowDistance: 10,\n * }\n * ```\n*/\n\nexport class Entities extends ECS {\n\n\n    /** @internal */\n    constructor(noa, opts) {\n        super()\n        opts = Object.assign({}, defaultOptions, opts)\n        // optional arguments to supply to component creation functions\n        var componentArgs = {\n            'shadow': opts.shadowDistance,\n        }\n\n        /** \n         * @internal\n         * @type {import('../index').Engine}\n        */\n        this.noa = noa\n\n        /** Hash containing the component names of built-in components.\n         * @type {{ [key:string]: string }} \n        */\n        this.names = {}\n\n\n        // call `createComponent` on all component definitions, and\n        // store their names in ents.names\n        var compDefs = {\n            collideEntities: collideEntitiesComp,\n            collideTerrain: collideTerrainComp,\n            fadeOnZoom: fadeOnZoomComp,\n            followsEntity: followsEntityComp,\n            mesh: meshComp,\n            movement: movementComp,\n            physics: physicsComp,\n            position: positionComp,\n            receivesInputs: receivesInputsComp,\n            shadow: shadowComp,\n            smoothCamera: smoothCameraComp,\n        }\n\n        Object.keys(compDefs).forEach(bareName => {\n            var arg = componentArgs[bareName] || undefined\n            var compFn = compDefs[bareName]\n            var compDef = compFn(noa, arg)\n            this.names[bareName] = this.createComponent(compDef)\n        })\n\n\n\n        /*\n         *\n         *\n         * \n         *          ENTITY ACCESSORS\n         *\n         * A whole bunch of getters and such for accessing component state.\n         * These are moderately faster than `ents.getState(whatever)`.\n         * \n         * \n         * \n        */\n\n        /** @internal */\n        this.cameraSmoothed = this.getComponentAccessor(this.names.smoothCamera)\n\n\n        /**\n         * Returns whether the entity has a physics body\n         * @type {(id:number) => boolean}\n        */\n        this.hasPhysics = this.getComponentAccessor(this.names.physics)\n\n        /**\n         * Returns whether the entity has a position\n         * @type {(id:number) => boolean}\n        */\n        this.hasPosition = this.getComponentAccessor(this.names.position)\n\n        /**\n         * Returns the entity's position component state\n         * @type {(id:number) => null | import(\"../components/position\").PositionState} \n        */\n        this.getPositionData = this.getStateAccessor(this.names.position)\n\n        /**\n         * Returns the entity's position vector.\n         * @type {(id:number) => number[]}\n        */\n        this.getPosition = (id) => {\n            var state = this.getPositionData(id)\n            return (state) ? state.position : null\n        }\n\n        /**\n         * Get the entity's `physics` component state.\n         * @type {(id:number) => null | import(\"../components/physics\").PhysicsState} \n        */\n        this.getPhysics = this.getStateAccessor(this.names.physics)\n\n        /**\n         * Returns the entity's physics body\n         * Note, will throw if the entity doesn't have the position component!\n         * @type {(id:number) => null | import(\"voxel-physics-engine\").RigidBody} \n        */\n        this.getPhysicsBody = (id) => {\n            var state = this.getPhysics(id)\n            return (state) ? state.body : null\n        }\n\n        /**\n         * Returns whether the entity has a mesh\n         * @type {(id:number) => boolean}\n        */\n        this.hasMesh = this.getComponentAccessor(this.names.mesh)\n\n        /**\n         * Returns the entity's `mesh` component state\n         * @type {(id:number) => {mesh:any, offset:number[]}}\n        */\n        this.getMeshData = this.getStateAccessor(this.names.mesh)\n\n        /**\n         * Returns the entity's `movement` component state\n         * @type {(id:number) => import('../components/movement').MovementState}\n        */\n        this.getMovement = this.getStateAccessor(this.names.movement)\n\n        /**\n         * Returns the entity's `collideTerrain` component state\n         * @type {(id:number) => {callback: function}}\n        */\n        this.getCollideTerrain = this.getStateAccessor(this.names.collideTerrain)\n\n        /**\n         * Returns the entity's `collideEntities` component state\n         * @type {(id:number) => {\n         *      cylinder:boolean, collideBits:number, \n         *      collideMask:number, callback: function}}\n        */\n        this.getCollideEntities = this.getStateAccessor(this.names.collideEntities)\n\n\n        /**\n         * Pairwise collideEntities event - assign your own function to this \n         * property if you want to handle entity-entity overlap events.\n         * @type {(id1:number, id2:number) => void}\n         */\n        this.onPairwiseEntityCollision = function (id1, id2) { }\n    }\n\n\n\n\n    /*\n     * \n     * \n     *      PUBLIC ENTITY STATE ACCESSORS\n     * \n     * \n    */\n\n\n    /** Set an entity's position, and update all derived state.\n     * \n     * In general, always use this to set an entity's position unless\n     * you're familiar with engine internals.\n     * \n     * ```js\n     * noa.ents.setPosition(playerEntity, [5, 6, 7])\n     * noa.ents.setPosition(playerEntity, 5, 6, 7)  // also works\n     * ```\n     * \n     * @param {number} id\n     */\n    setPosition(id, pos, y = 0, z = 0) {\n        if (typeof pos === 'number') pos = [pos, y, z]\n        // convert to local and defer impl\n        var loc = this.noa.globalToLocal(pos, null, [])\n        this._localSetPosition(id, loc)\n    }\n\n    /** Set an entity's size \n     * @param {number} xs\n     * @param {number} ys\n     * @param {number} zs\n    */\n    setEntitySize(id, xs, ys, zs) {\n        var posDat = this.getPositionData(id)\n        posDat.width = (xs + zs) / 2\n        posDat.height = ys\n        this._updateDerivedPositionData(id, posDat)\n    }\n\n\n\n\n    /**\n     * called when engine rebases its local coords\n     * @internal\n     */\n    _rebaseOrigin(delta) {\n        for (var state of this.getStatesList(this.names.position)) {\n            var locPos = state._localPosition\n            var hw = state.width / 2\n            nudgePosition(locPos, 0, -hw, hw, state.__id)\n            nudgePosition(locPos, 1, 0, state.height, state.__id)\n            nudgePosition(locPos, 2, -hw, hw, state.__id)\n            vec3.subtract(locPos, locPos, delta)\n            this._updateDerivedPositionData(state.__id, state)\n        }\n    }\n\n    /** @internal */\n    _localGetPosition(id) {\n        return this.getPositionData(id)._localPosition\n    }\n\n    /** @internal */\n    _localSetPosition(id, pos) {\n        var posDat = this.getPositionData(id)\n        vec3.copy(posDat._localPosition, pos)\n        this._updateDerivedPositionData(id, posDat)\n    }\n\n\n    /** \n     * helper to update everything derived from `_localPosition`\n     * @internal \n    */\n    _updateDerivedPositionData(id, posDat) {\n        vec3.copy(posDat._renderPosition, posDat._localPosition)\n        var offset = this.noa.worldOriginOffset\n        vec3.add(posDat.position, posDat._localPosition, offset)\n        updatePositionExtents(posDat)\n        var physDat = this.getPhysics(id)\n        if (physDat) setPhysicsFromPosition(physDat, posDat)\n    }\n\n\n\n\n\n    /*\n     *\n     *\n     *      OTHER ENTITY MANAGEMENT APIs\n     * \n     *      note most APIs are on the original ECS module (ent-comp)\n     *      these are some overlaid extras for noa\n     *\n     *\n    */\n\n\n    /** \n     * Safely add a component - if the entity already had the \n     * component, this will remove and re-add it.\n    */\n    addComponentAgain(id, name, state) {\n        // removes component first if necessary\n        if (this.hasComponent(id, name)) this.removeComponent(id, name)\n        this.addComponent(id, name, state)\n    }\n\n\n    /** \n     * Checks whether a voxel is obstructed by any entity (with the \n     * `collidesTerrain` component)\n    */\n    isTerrainBlocked(x, y, z) {\n        // checks if terrain location is blocked by entities\n        var off = this.noa.worldOriginOffset\n        var xlocal = Math.floor(x - off[0])\n        var ylocal = Math.floor(y - off[1])\n        var zlocal = Math.floor(z - off[2])\n        var blockExt = [\n            xlocal + 0.001, ylocal + 0.001, zlocal + 0.001,\n            xlocal + 0.999, ylocal + 0.999, zlocal + 0.999,\n        ]\n        var list = this.getStatesList(this.names.collideTerrain)\n        for (var i = 0; i < list.length; i++) {\n            var id = list[i].__id\n            var ext = this.getPositionData(id)._extents\n            if (extentsOverlap(blockExt, ext)) return true\n        }\n        return false\n    }\n\n\n\n    /** \n     * Gets an array of all entities overlapping the given AABB\n    */\n    getEntitiesInAABB(box, withComponent) {\n        // extents to test against\n        var off = this.noa.worldOriginOffset\n        var testExtents = [\n            box.base[0] - off[0], box.base[1] - off[1], box.base[2] - off[2],\n            box.max[0] - off[0], box.max[1] - off[1], box.max[2] - off[2],\n        ]\n        // entity position state list\n        var entStates\n        if (withComponent) {\n            entStates = []\n            for (var compState of this.getStatesList(withComponent)) {\n                var pdat = this.getPositionData(compState.__id)\n                if (pdat) entStates.push(pdat)\n            }\n        } else {\n            entStates = this.getStatesList(this.names.position)\n        }\n\n        // run each test\n        var hits = []\n        for (var i = 0; i < entStates.length; i++) {\n            var state = entStates[i]\n            if (extentsOverlap(testExtents, state._extents)) {\n                hits.push(state.__id)\n            }\n        }\n        return hits\n    }\n\n\n\n    /** \n     * Helper to set up a general entity, and populate with some common components depending on arguments.\n    */\n    add(position = null, width = 1, height = 1,\n        mesh = null, meshOffset = null, doPhysics = false, shadow = false) {\n\n        var self = this\n\n        // new entity\n        var eid = this.createEntity()\n\n        // position component\n        this.addComponent(eid, this.names.position, {\n            position: position || vec3.create(),\n            width: width,\n            height: height,\n        })\n\n        // rigid body in physics simulator\n        if (doPhysics) {\n            // body = this.noa.physics.addBody(box)\n            this.addComponent(eid, this.names.physics)\n            var body = this.getPhysics(eid).body\n\n            // handler for physics engine to call on auto-step\n            var smoothName = this.names.smoothCamera\n            body.onStep = function () {\n                self.addComponentAgain(eid, smoothName)\n            }\n        }\n\n        // mesh for the entity\n        if (mesh) {\n            if (!meshOffset) meshOffset = vec3.create()\n            this.addComponent(eid, this.names.mesh, {\n                mesh: mesh,\n                offset: meshOffset\n            })\n        }\n\n        // add shadow-drawing component\n        if (shadow) {\n            this.addComponent(eid, this.names.shadow, { size: width })\n        }\n\n        return eid\n    }\n}\n\n\n/*\n * \n * \n * \n *          HELPERS\n * \n * \n * \n*/\n\n// safety helper - when rebasing, nudge extent away from \n// voxel boudaries, so floating point error doesn't carry us accross\nfunction nudgePosition(pos, index, dmin, dmax, id) {\n    var min = pos[index] + dmin\n    var max = pos[index] + dmax\n    if (Math.abs(min - Math.round(min)) < 0.002) pos[index] += 0.002\n    if (Math.abs(max - Math.round(max)) < 0.001) pos[index] -= 0.001\n}\n\n// compare extent arrays\nfunction extentsOverlap(extA, extB) {\n    if (extA[0] > extB[3]) return false\n    if (extA[1] > extB[4]) return false\n    if (extA[2] > extB[5]) return false\n    if (extA[3] < extB[0]) return false\n    if (extA[4] < extB[1]) return false\n    if (extA[5] < extB[2]) return false\n    return true\n}\n\n", "/** \n * @module \n * @internal \n */\n\nimport vec3 from 'gl-vec3'\n\n\n\n// definition for this component's state object\nexport class PositionState {\n    constructor() {\n        /** Position in global coords (may be low precision) \n         * @type {null | number[]} */\n        this.position = null\n        this.width = 0.8\n        this.height = 0.8\n\n        /** Precise position in local coords\n         * @type {null | number[]} */\n        this._localPosition = null\n\n        /** [x,y,z] in LOCAL COORDS\n         * @type {null | number[]} */\n        this._renderPosition = null\n\n        /** [lo,lo,lo, hi,hi,hi] in LOCAL COORDS\n         * @type {null | number[]} */\n        this._extents = null\n    }\n}\n\n\n\n\n/**\n * \tComponent holding entity's position, width, and height.\n *  By convention, entity's \"position\" is the bottom center of its AABB\n * \n *  Of the various properties, _localPosition is the \"real\", \n *  single-source-of-truth position. Others are derived.\n *  Local coords are relative to `noa.worldOriginOffset`.\n * @param {import('..').Engine} noa\n*/\n\nexport default function (noa) {\n\n    return {\n\n        name: 'position',\n\n        order: 60,\n\n        state: new PositionState,\n\n        onAdd: function (eid, state) {\n            // copy position into a plain array\n            var pos = [0, 0, 0]\n            if (state.position) vec3.copy(pos, state.position)\n            state.position = pos\n\n            state._localPosition = vec3.create()\n            state._renderPosition = vec3.create()\n            state._extents = new Float32Array(6)\n\n            // on init only, set local from global\n            noa.globalToLocal(state.position, null, state._localPosition)\n            vec3.copy(state._renderPosition, state._localPosition)\n            updatePositionExtents(state)\n        },\n\n        onRemove: null,\n\n\n\n        system: function (dt, states) {\n            var off = noa.worldOriginOffset\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                vec3.add(state.position, state._localPosition, off)\n                updatePositionExtents(state)\n            }\n        },\n\n\n    }\n}\n\n\n\n// update an entity's position state `_extents` \nexport function updatePositionExtents(state) {\n    var hw = state.width / 2\n    var lpos = state._localPosition\n    var ext = state._extents\n    ext[0] = lpos[0] - hw\n    ext[1] = lpos[1]\n    ext[2] = lpos[2] - hw\n    ext[3] = lpos[0] + hw\n    ext[4] = lpos[1] + state.height\n    ext[5] = lpos[2] + hw\n}\n", "/** \n * @module\n * @internal\n */\n\nimport vec3 from 'gl-vec3'\n\n\nexport class PhysicsState {\n    constructor() {\n        /** @type {import('voxel-physics-engine').RigidBody} */\n        this.body = null\n    }\n}\n\n\n/**\n * Physics component, stores an entity's physics engbody.\n * @param {import('..').Engine} noa\n*/\n\nexport default function (noa) {\n\n    return {\n\n        name: 'physics',\n\n        order: 40,\n\n        state: new PhysicsState,\n\n        onAdd: function (entID, state) {\n            state.body = noa.physics.addBody()\n            // implicitly assume body has a position component, to get size\n            var posDat = noa.ents.getPositionData(state.__id)\n            setPhysicsFromPosition(state, posDat)\n        },\n\n\n        onRemove: function (entID, state) {\n            // update position before removing\n            // this lets entity wind up at e.g. the result of a collision\n            // even if physics component is removed in collision handler\n            if (noa.ents.hasPosition(state.__id)) {\n                var pdat = noa.ents.getPositionData(state.__id)\n                setPositionFromPhysics(state, pdat)\n                backtrackRenderPos(state, pdat, 0, false)\n            }\n            noa.physics.removeBody(state.body)\n        },\n\n\n        system: function (dt, states) {\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var pdat = noa.ents.getPositionData(state.__id)\n                setPositionFromPhysics(state, pdat)\n            }\n        },\n\n\n        renderSystem: function (dt, states) {\n\n            var tickPos = noa.positionInCurrentTick\n            var tickTime = 1000 / noa.container._shell.tickRate\n            tickTime *= noa.timeScale\n            var tickMS = tickPos * tickTime\n\n            // tickMS is time since last physics engine tick\n            // to avoid temporal aliasing, render the state as if lerping between\n            // the last position and the next one \n            // since the entity data is the \"next\" position this amounts to \n            // offsetting each entity into the past by tickRate - dt\n            // http://gafferongames.com/game-physics/fix-your-timestep/\n\n            var backtrackAmt = (tickMS - tickTime) / 1000\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var id = state.__id\n                var pdat = noa.ents.getPositionData(id)\n                var smoothed = noa.ents.cameraSmoothed(id)\n                backtrackRenderPos(state, pdat, backtrackAmt, smoothed)\n            }\n        }\n\n    }\n\n}\n\n\n\n// var offset = vec3.create()\nvar local = vec3.create()\n\nexport function setPhysicsFromPosition(physState, posState) {\n    var box = physState.body.aabb\n    var ext = posState._extents\n    vec3.copy(box.base, ext)\n    vec3.set(box.vec, posState.width, posState.height, posState.width)\n    vec3.add(box.max, box.base, box.vec)\n}\n\n\nfunction setPositionFromPhysics(physState, posState) {\n    var base = physState.body.aabb.base\n    var hw = posState.width / 2\n    vec3.set(posState._localPosition, base[0] + hw, base[1], base[2] + hw)\n}\n\n\nfunction backtrackRenderPos(physState, posState, backtrackAmt, smoothed) {\n    // pos = pos + backtrack * body.velocity\n    var vel = physState.body.velocity\n    vec3.scaleAndAdd(local, posState._localPosition, vel, backtrackAmt)\n\n    // smooth out update if component is present\n    // (this is set after sudden movements like auto-stepping)\n    if (smoothed) vec3.lerp(local, posState._renderPosition, local, 0.3)\n\n    // copy values over to renderPosition, \n    vec3.copy(posState._renderPosition, local)\n}\n", "\nimport boxIntersect from 'box-intersect'\n\n\n\n/*\n * \tEvery frame, entities with this component will get mutually checked for colliions\n * \n *   * cylinder: flag for checking collisions as a vertical cylindar (rather than AABB)\n *   * collideBits: category for this entity\n *   * collideMask: categories this entity collides with\n *   * callback: function(other_id) - called when `own.collideBits & other.collideMask` is true\n * \n * \n * \t\tNotes:\n * \tSet collideBits=0 for entities like bullets, which can collide with things \n * \t\tbut are never the target of a collision.\n * \tSet collideMask=0 for things with no callback - things that get collided with,\n * \t\tbut don't themselves instigate collisions.\n * \n */\n\n\n\nexport default function (noa) {\n\n    var intervals = []\n\n    return {\n\n        name: 'collideEntities',\n\n        order: 70,\n\n        state: {\n            cylinder: false,\n            collideBits: 1 | 0,\n            collideMask: 1 | 0,\n            callback: null,\n        },\n\n        onAdd: null,\n\n        onRemove: null,\n\n\n        system: function entityCollider(dt, states) {\n            var ents = noa.ents\n\n            // data struct that boxIntersect looks for\n            // - array of [lo, lo, lo, hi, hi, hi] extents\n            for (var i = 0; i < states.length; i++) {\n                var id = states[i].__id\n                var dat = ents.getPositionData(id)\n                intervals[i] = dat._extents\n            }\n            intervals.length = states.length\n\n            // run the intersect library\n            boxIntersect(intervals, function (a, b) {\n                var stateA = states[a]\n                var stateB = states[b]\n                if (!stateA || !stateB) return\n                var intervalA = intervals[a]\n                var intervalB = intervals[b]\n                if (cylindricalHitTest(stateA, stateB, intervalA, intervalB)) {\n                    handleCollision(noa, stateA, stateB)\n                }\n            })\n\n        }\n    }\n\n\n\n    /*\n     * \n     * \t\tIMPLEMENTATION\n     * \n     */\n\n\n    function handleCollision(noa, stateA, stateB) {\n        var idA = stateA.__id\n        var idB = stateB.__id\n\n        // entities really do overlap, so check masks and call event handlers\n        if (stateA.collideMask & stateB.collideBits) {\n            if (stateA.callback) stateA.callback(idB)\n        }\n        if (stateB.collideMask & stateA.collideBits) {\n            if (stateB.callback) stateB.callback(idA)\n        }\n\n        // general pairwise handler\n        noa.ents.onPairwiseEntityCollision(idA, idB)\n    }\n\n\n\n    // For entities whose extents overlap, \n    // test if collision still happens when taking cylinder flags into account\n\n    function cylindricalHitTest(stateA, stateB, intervalA, intervalB) {\n        if (stateA.cylinder) {\n            if (stateB.cylinder) {\n                return cylinderCylinderTest(intervalA, intervalB)\n            } else {\n                return cylinderBoxTest(intervalA, intervalB)\n            }\n        } else if (stateB.cylinder) {\n            return cylinderBoxTest(intervalB, intervalA)\n        }\n        return true\n    }\n\n\n\n\n    // Cylinder-cylinder hit test (AABBs are known to overlap)\n    // given their extent arrays [lo, lo, lo, hi, hi, hi]\n\n    function cylinderCylinderTest(a, b) {\n        // distance between cylinder centers\n        var rada = (a[3] - a[0]) / 2\n        var radb = (b[3] - b[0]) / 2\n        var dx = a[0] + rada - (b[0] + radb)\n        var dz = a[2] + rada - (b[2] + radb)\n        // collide if dist <= sum of radii\n        var distsq = dx * dx + dz * dz\n        var radsum = rada + radb\n        return (distsq <= radsum * radsum)\n    }\n\n\n\n\n    // Cylinder-Box hit test (AABBs are known to overlap)\n    // given their extent arrays [lo, lo, lo, hi, hi, hi]\n\n    function cylinderBoxTest(cyl, cube) {\n        // X-z center of cylinder\n        var rad = (cyl[3] - cyl[0]) / 2\n        var cx = cyl[0] + rad\n        var cz = cyl[2] + rad\n        // point in X-Z square closest to cylinder\n        var px = clamp(cx, cube[0], cube[3])\n        var pz = clamp(cz, cube[2], cube[5])\n        // collision if distance from that point to circle <= cylinder radius\n        var dx = px - cx\n        var dz = pz - cz\n        var distsq = dx * dx + dz * dz\n        return (distsq <= rad * rad)\n    }\n\n    function clamp(val, lo, hi) {\n        return (val < lo) ? lo : (val > hi) ? hi : val\n    }\n\n\n\n\n}\n", "\n\nexport default function (noa) {\n    return {\n\n        name: 'collideTerrain',\n\n        order: 0,\n\n        state: {\n            callback: null\n        },\n\n        onAdd: function (eid, state) {\n            // add collide handler for physics engine to call\n            var ents = noa.entities\n            if (ents.hasPhysics(eid)) {\n                var body = ents.getPhysics(eid).body\n                body.onCollide = function bodyOnCollide(impulse) {\n                    var cb = noa.ents.getCollideTerrain(eid).callback\n                    if (cb) cb(impulse, eid)\n                }\n            }\n        },\n\n        onRemove: function (eid, state) {\n            var ents = noa.entities\n            if (ents.hasPhysics(eid)) {\n                ents.getPhysics(eid).body.onCollide = null\n            }\n        },\n\n\n\n    }\n}\n", "\n/**\n * Component for the player entity, when active hides the player's mesh \n * when camera zoom is less than a certain amount\n */\n\nexport default function (noa) {\n    return {\n\n        name: 'fadeOnZoom',\n\n        order: 99,\n\n        state: {\n            cutoff: 1.5,\n        },\n\n        onAdd: null,\n\n        onRemove: null,\n\n        system: function fadeOnZoomProc(dt, states) {\n            var zoom = noa.camera.currentZoom\n            for (var i = 0; i < states.length; i++) {\n                checkZoom(states[i], zoom, noa)\n            }\n        }\n    }\n}\n\n\nfunction checkZoom(state, zoom, noa) {\n    if (!noa.ents.hasMesh(state.__id)) return\n    var mesh = noa.ents.getMeshData(state.__id).mesh\n    if (!mesh.metadata) return\n    var shouldHide = (zoom < state.cutoff)\n    noa.rendering.setMeshVisibility(mesh, !shouldHide)\n}\n", "\nimport vec3 from 'gl-vec3'\n\n\n/*\n * Indicates that an entity should be moved to another entity's position each tick,\n * possibly by a fixed offset, and the same for renderPositions each render\n */\n\nexport default function (noa) {\n\n    return {\n\n        name: 'followsEntity',\n\n        order: 50,\n\n        state: {\n            entity: 0 | 0,\n            offset: null,\n            onTargetMissing: null,\n        },\n\n        onAdd: function (eid, state) {\n            var off = vec3.create()\n            state.offset = (state.offset) ? vec3.copy(off, state.offset) : off\n            updatePosition(state)\n            updateRenderPosition(state)\n        },\n\n        onRemove: null,\n\n\n        // on tick, copy over regular positions\n        system: function followEntity(dt, states) {\n            for (var i = 0; i < states.length; i++) {\n                updatePosition(states[i])\n            }\n        },\n\n\n        // on render, copy over render positions\n        renderSystem: function followEntityMesh(dt, states) {\n            for (var i = 0; i < states.length; i++) {\n                updateRenderPosition(states[i])\n            }\n        }\n    }\n\n\n\n    function updatePosition(state) {\n        var id = state.__id\n        var self = noa.ents.getPositionData(id)\n        var other = noa.ents.getPositionData(state.entity)\n        if (!other) {\n            if (state.onTargetMissing) state.onTargetMissing(id)\n            noa.ents.removeComponent(id, noa.ents.names.followsEntity)\n        } else {\n            vec3.add(self._localPosition, other._localPosition, state.offset)\n        }\n    }\n\n    function updateRenderPosition(state) {\n        var id = state.__id\n        var self = noa.ents.getPositionData(id)\n        var other = noa.ents.getPositionData(state.entity)\n        if (other) {\n            vec3.add(self._renderPosition, other._renderPosition, state.offset)\n        }\n    }\n\n}\n", "\nimport vec3 from 'gl-vec3'\n\n\nexport default function (noa) {\n    return {\n\n        name: 'mesh',\n\n        order: 100,\n\n        state: {\n            mesh: null,\n            offset: null\n        },\n\n\n        onAdd: function (eid, state) {\n            // implicitly assume there's already a position component\n            var posDat = noa.ents.getPositionData(eid)\n            if (state.mesh) {\n                noa.rendering.addMeshToScene(state.mesh, false, posDat.position)\n            } else {\n                throw new Error('Mesh component added without a mesh - probably a bug!')\n            }\n            if (!state.offset) state.offset = vec3.create()\n\n            // set mesh to correct position\n            var rpos = posDat._renderPosition\n            state.mesh.position.copyFromFloats(\n                rpos[0] + state.offset[0],\n                rpos[1] + state.offset[1],\n                rpos[2] + state.offset[2])\n        },\n\n\n        onRemove: function (eid, state) {\n            state.mesh.dispose()\n        },\n\n\n\n        renderSystem: function (dt, states) {\n            // before render move each mesh to its render position, \n            // set by the physics engine or driving logic\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var id = state.__id\n\n                var rpos = noa.ents.getPositionData(id)._renderPosition\n                state.mesh.position.copyFromFloats(\n                    rpos[0] + state.offset[0],\n                    rpos[1] + state.offset[1],\n                    rpos[2] + state.offset[2])\n            }\n        }\n\n\n    }\n}\n", "\nimport vec3 from 'gl-vec3'\n\n\n\n\n\n/** \n * \n * State object of the `movement` component\n * \n*/\nexport function MovementState() {\n    this.heading = 0 // radians\n    this.running = false\n    this.jumping = false\n\n    // options\n    this.maxSpeed = 10\n    this.moveForce = 30\n    this.responsiveness = 15\n    this.runningFriction = 0\n    this.standingFriction = 2\n\n    // jumps\n    this.airMoveMult = 0.5\n    this.jumpImpulse = 10\n    this.jumpForce = 12\n    this.jumpTime = 500 // ms\n    this.airJumps = 1\n\n    // internal state\n    this._jumpCount = 0\n    this._currjumptime = 0\n    this._isJumping = false\n}\n\n\n\n\n\n/**\n * Movement component. State stores settings like jump height, etc.,\n * as well as current state (running, jumping, heading angle).\n * Processor checks state and applies movement/friction/jump forces\n * to the entity's physics body. \n * @param {import('..').Engine} noa\n*/\n\nexport default function (noa) {\n    return {\n\n        name: 'movement',\n\n        order: 30,\n\n        state: new MovementState(),\n\n        onAdd: null,\n\n        onRemove: null,\n\n\n        system: function movementProcessor(dt, states) {\n            var ents = noa.entities\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var phys = ents.getPhysics(state.__id)\n                if (phys) applyMovementPhysics(dt, state, phys.body)\n            }\n        }\n\n\n    }\n}\n\n\nvar tempvec = vec3.create()\nvar tempvec2 = vec3.create()\nvar zeroVec = vec3.create()\n\n\n/**\n * @param {number} dt \n * @param {MovementState} state \n * @param {*} body \n*/\n\nfunction applyMovementPhysics(dt, state, body) {\n    // move implementation originally written as external module\n    //   see https://github.com/fenomas/voxel-fps-controller\n    //   for original code\n\n    // jumping\n    var onGround = (body.atRestY() < 0)\n    var canjump = (onGround || state._jumpCount < state.airJumps)\n    if (onGround) {\n        state._isJumping = false\n        state._jumpCount = 0\n    }\n\n    // process jump input\n    if (state.jumping) {\n        if (state._isJumping) { // continue previous jump\n            if (state._currjumptime > 0) {\n                var jf = state.jumpForce\n                if (state._currjumptime < dt) jf *= state._currjumptime / dt\n                body.applyForce([0, jf, 0])\n                state._currjumptime -= dt\n            }\n        } else if (canjump) { // start new jump\n            state._isJumping = true\n            if (!onGround) state._jumpCount++\n            state._currjumptime = state.jumpTime\n            body.applyImpulse([0, state.jumpImpulse, 0])\n            // clear downward velocity on airjump\n            if (!onGround && body.velocity[1] < 0) body.velocity[1] = 0\n        }\n    } else {\n        state._isJumping = false\n    }\n\n    // apply movement forces if entity is moving, otherwise just friction\n    var m = tempvec\n    var push = tempvec2\n    if (state.running) {\n\n        var speed = state.maxSpeed\n        // todo: add crouch/sprint modifiers if needed\n        // if (state.sprint) speed *= state.sprintMoveMult\n        // if (state.crouch) speed *= state.crouchMoveMult\n        vec3.set(m, 0, 0, speed)\n\n        // rotate move vector to entity's heading\n        vec3.rotateY(m, m, zeroVec, state.heading)\n\n        // push vector to achieve desired speed & dir\n        // following code to adjust 2D velocity to desired amount is patterned on Quake: \n        // https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/bg_pmove.c#L275\n        vec3.subtract(push, m, body.velocity)\n        push[1] = 0\n        var pushLen = vec3.length(push)\n        vec3.normalize(push, push)\n\n        if (pushLen > 0) {\n            // pushing force vector\n            var canPush = state.moveForce\n            if (!onGround) canPush *= state.airMoveMult\n\n            // apply final force\n            var pushAmt = state.responsiveness * pushLen\n            if (canPush > pushAmt) canPush = pushAmt\n\n            vec3.scale(push, push, canPush)\n            body.applyForce(push)\n        }\n\n        // different friction when not moving\n        // idea from Sonic: http://info.sonicretro.org/SPG:Running\n        body.friction = state.runningFriction\n    } else {\n        body.friction = state.standingFriction\n    }\n}\n", "\n/**\n * \n * Input processing component - gets (key) input state and  \n * applies it to receiving entities by updating their movement \n * component state (heading, movespeed, jumping, etc.)\n * \n */\n\nexport default function (noa) {\n    return {\n\n        name: 'receivesInputs',\n\n        order: 20,\n\n        state: {},\n\n        onAdd: null,\n\n        onRemove: null,\n\n        system: function inputProcessor(dt, states) {\n            var ents = noa.entities\n            var inputState = noa.inputs.state\n            var camHeading = noa.camera.heading\n\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var moveState = ents.getMovement(state.__id)\n                setMovementState(moveState, inputState, camHeading)\n            }\n        }\n\n    }\n}\n\n\n\n/**\n * @param {import('../components/movement').MovementState} state \n * @param {Object<string, boolean>} inputs \n * @param {number} camHeading \n*/\n\nfunction setMovementState(state, inputs, camHeading) {\n    state.jumping = !!inputs.jump\n\n    var fb = inputs.forward ? (inputs.backward ? 0 : 1) : (inputs.backward ? -1 : 0)\n    var rl = inputs.right ? (inputs.left ? 0 : 1) : (inputs.left ? -1 : 0)\n\n    if ((fb | rl) === 0) {\n        state.running = false\n    } else {\n        state.running = true\n        if (fb) {\n            if (fb == -1) camHeading += Math.PI\n            if (rl) {\n                camHeading += Math.PI / 4 * fb * rl // didn't plan this but it works!\n            }\n        } else {\n            camHeading += rl * Math.PI / 2\n        }\n        state.heading = camHeading\n    }\n\n}\n", "\nimport vec3 from 'gl-vec3'\n\nimport { Color3 } from '@babylonjs/core/Maths/math.color'\nimport { CreateDisc } from '@babylonjs/core/Meshes/Builders/discBuilder'\nimport '@babylonjs/core/Meshes/instancedMesh'\n\n\n/** @param {import('../index').Engine} noa  */\nexport default function (noa, distance = 10) {\n\n    var shadowDist = distance\n\n    // create a mesh to re-use for shadows\n    var scene = noa.rendering.getScene()\n    var disc = CreateDisc('shadow', { radius: 0.75, tessellation: 30 }, scene)\n    disc.rotation.x = Math.PI / 2\n    var mat = noa.rendering.makeStandardMaterial('shadow_component_mat')\n    mat.diffuseColor.set(0, 0, 0)\n    mat.ambientColor.set(0, 0, 0)\n    mat.alpha = 0.5\n    disc.material = mat\n    mat.freeze()\n\n    // source mesh needn't be in the scene graph\n    noa.rendering.setMeshVisibility(disc, false)\n\n\n    return {\n\n        name: 'shadow',\n\n        order: 80,\n\n        state: {\n            size: 0.5,\n            _mesh: null,\n        },\n\n\n        onAdd: function (eid, state) {\n            var mesh = disc.createInstance('shadow_instance')\n            noa.rendering.addMeshToScene(mesh)\n            mesh.setEnabled(false)\n            state._mesh = mesh\n        },\n\n\n        onRemove: function (eid, state) {\n            state._mesh.dispose()\n            state._mesh = null\n        },\n\n\n        system: function shadowSystem(dt, states) {\n            var cpos = noa.camera._localGetPosition()\n            var dist = shadowDist\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var posState = noa.ents.getPositionData(state.__id)\n                var physState = noa.ents.getPhysics(state.__id)\n                updateShadowHeight(noa, posState, physState, state._mesh, state.size, dist, cpos)\n            }\n        },\n\n\n        renderSystem: function (dt, states) {\n            // before render adjust shadow x/z to render positions\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                var rpos = noa.ents.getPositionData(state.__id)._renderPosition\n                var spos = state._mesh.position\n                spos.x = rpos[0]\n                spos.z = rpos[2]\n            }\n        }\n\n\n\n\n    }\n}\n\nvar shadowPos = vec3.fromValues(0, 0, 0)\nvar down = vec3.fromValues(0, -1, 0)\n\nfunction updateShadowHeight(noa, posDat, physDat, mesh, size, shadowDist, camPos) {\n\n    // local Y ground position - from physics or raycast\n    var localY\n    if (physDat && physDat.body.resting[1] < 0) {\n        localY = posDat._localPosition[1]\n    } else {\n        var res = noa._localPick(posDat._localPosition, down, shadowDist)\n        if (!res) {\n            mesh.setEnabled(false)\n            return\n        }\n        localY = res.position[1] - noa.worldOriginOffset[1]\n    }\n\n    // round Y pos and offset upwards slightly to avoid z-fighting\n    localY = Math.round(localY)\n    vec3.copy(shadowPos, posDat._localPosition)\n    shadowPos[1] = localY\n    var sqdist = vec3.squaredDistance(camPos, shadowPos)\n    // offset ~ 0.01 for nearby shadows, up to 0.1 at distance of ~40\n    var offset = 0.01 + 0.1 * (sqdist / 1600)\n    if (offset > 0.1) offset = 0.1\n    mesh.position.y = localY + offset\n    // set shadow scale\n    var dist = posDat._localPosition[1] - localY\n    var scale = size * 0.7 * (1 - dist / shadowDist)\n    mesh.scaling.copyFromFloats(scale, scale, scale)\n    mesh.setEnabled(true)\n}\n", "\n\nexport default function (noa) {\n\n    var compName = 'smoothCamera'\n\n    return {\n\n        name: compName,\n\n        order: 99,\n\n        state: {\n            time: 100.1\n        },\n\n        onAdd: null,\n\n        onRemove: null,\n\n        system: function (dt, states) {\n            // remove self after time elapses\n            for (var i = 0; i < states.length; i++) {\n                var state = states[i]\n                state.time -= dt\n                if (state.time < 0) noa.ents.removeComponent(state.__id, compName)\n            }\n        },\n\n    }\n}\n", "\n\n\n\n// helper to swap item to end and pop(), instead of splice()ing\nexport function removeUnorderedListItem(list, item) {\n    var i = list.indexOf(item)\n    if (i < 0) return\n    if (i === list.length - 1) {\n        list.pop()\n    } else {\n        list[i] = list.pop()\n    }\n}\n\n\n\n\n\n\n\n// ....\nexport function numberOfVoxelsInSphere(rad) {\n    if (rad === prevRad) return prevAnswer\n    var ext = Math.ceil(rad), ct = 0, rsq = rad * rad\n    for (var i = -ext; i <= ext; ++i) {\n        for (var j = -ext; j <= ext; ++j) {\n            for (var k = -ext; k <= ext; ++k) {\n                var dsq = i * i + j * j + k * k\n                if (dsq < rsq) ct++\n            }\n        }\n    }\n    prevRad = rad\n    prevAnswer = ct\n    return ct\n}\nvar prevRad = 0, prevAnswer = 0\n\n\n\n\n\n// partly \"unrolled\" loops to copy contents of ndarrays\n// when there's no source, zeroes out the array instead\nexport function copyNdarrayContents(src, tgt, pos, size, tgtPos) {\n    if (typeof src === 'number') {\n        doNdarrayFill(src, tgt, tgtPos[0], tgtPos[1], tgtPos[2],\n            size[0], size[1], size[2])\n    } else {\n        doNdarrayCopy(src, tgt, pos[0], pos[1], pos[2],\n            size[0], size[1], size[2], tgtPos[0], tgtPos[1], tgtPos[2])\n    }\n}\nfunction doNdarrayCopy(src, tgt, i0, j0, k0, si, sj, sk, ti, tj, tk) {\n    var sdx = src.stride[2]\n    var tdx = tgt.stride[2]\n    for (var i = 0; i < si; i++) {\n        for (var j = 0; j < sj; j++) {\n            var six = src.index(i0 + i, j0 + j, k0)\n            var tix = tgt.index(ti + i, tj + j, tk)\n            for (var k = 0; k < sk; k++) {\n                tgt.data[tix] = src.data[six]\n                six += sdx\n                tix += tdx\n            }\n        }\n    }\n}\n\nfunction doNdarrayFill(value, tgt, i0, j0, k0, si, sj, sk) {\n    var dx = tgt.stride[2]\n    for (var i = 0; i < si; i++) {\n        for (var j = 0; j < sj; j++) {\n            var ix = tgt.index(i0 + i, j0 + j, k0)\n            for (var k = 0; k < sk; k++) {\n                tgt.data[ix] = value\n                ix += dx\n            }\n        }\n    }\n}\n\n\n\n\n// iterates over 3D positions a given manhattan distance from (0,0,0)\n// and exit early if the callback returns true\n// skips locations beyond a horiz or vertical max distance\nexport function iterateOverShellAtDistance(d, xmax, ymax, cb) {\n    if (d === 0) return cb(0, 0, 0)\n    // larger top/bottom planes of current shell\n    var dx = Math.min(d, xmax)\n    var dy = Math.min(d, ymax)\n    if (d <= ymax) {\n        for (var x = -dx; x <= dx; x++) {\n            for (var z = -dx; z <= dx; z++) {\n                if (cb(x, d, z)) return true\n                if (cb(x, -d, z)) return true\n            }\n        }\n    }\n    // smaller side planes of shell\n    if (d <= xmax) {\n        for (var i = -d; i < d; i++) {\n            for (var y = -dy + 1; y < dy; y++) {\n                if (cb(i, y, d)) return true\n                if (cb(-i, y, -d)) return true\n                if (cb(d, y, -i)) return true\n                if (cb(-d, y, i)) return true\n            }\n        }\n    }\n    return false\n}\n\n\n\n\n\n\n// function to hash three indexes (i,j,k) into one integer\n// note that hash wraps around every 1024 indexes.\n//      i.e.:   hash(1, 1, 1) === hash(1025, 1, -1023)\nexport function locationHasher(i, j, k) {\n    return (i & 1023)\n        | ((j & 1023) << 10)\n        | ((k & 1023) << 20)\n}\n\n\n\n/*\n * \n *      chunkStorage - a Map-backed abstraction for storing/\n *      retrieving chunk objects by their location indexes\n * \n*/\n\n/** @internal */\nexport class ChunkStorage {\n    constructor() {\n        this.hash = {}\n    }\n\n    /** @returns {import('./chunk').Chunk} */\n    getChunkByIndexes(i = 0, j = 0, k = 0) {\n        return this.hash[locationHasher(i, j, k)] || null\n    }\n    /** @param {import('./chunk').Chunk} chunk */\n    storeChunkByIndexes(i = 0, j = 0, k = 0, chunk) {\n        this.hash[locationHasher(i, j, k)] = chunk\n    }\n    removeChunkByIndexes(i = 0, j = 0, k = 0) {\n        delete this.hash[locationHasher(i, j, k)]\n    }\n}\n\n\n\n\n\n\n/*\n * \n *      LocationQueue - simple array of [i,j,k] locations, \n *      backed by a hash for O(1) existence checks.\n *      removals by value are O(n).\n * \n*/\n\n/** @internal */\nexport class LocationQueue {\n    constructor() {\n        this.arr = []\n        this.hash = {}\n    }\n    forEach(cb, thisArg) {\n        this.arr.forEach(cb, thisArg)\n    }\n    includes(i, j, k) {\n        var id = locationHasher(i, j, k)\n        return !!this.hash[id]\n    }\n    add(i, j, k, toFront = false) {\n        var id = locationHasher(i, j, k)\n        if (this.hash[id]) return\n        if (toFront) {\n            this.arr.unshift([i, j, k, id])\n        } else {\n            this.arr.push([i, j, k, id])\n        }\n        this.hash[id] = true\n    }\n    removeByIndex(ix) {\n        var el = this.arr[ix]\n        delete this.hash[el[3]]\n        this.arr.splice(ix, 1)\n    }\n    remove(i, j, k) {\n        var id = locationHasher(i, j, k)\n        if (!this.hash[id]) return\n        delete this.hash[id]\n        for (var ix = 0; ix < this.arr.length; ix++) {\n            if (id === this.arr[ix][3]) {\n                this.arr.splice(ix, 1)\n                return\n            }\n        }\n        throw 'internal bug with location queue - hash value overlapped'\n    }\n    count() { return this.arr.length }\n    isEmpty() { return (this.arr.length === 0) }\n    empty() {\n        this.arr = []\n        this.hash = {}\n    }\n    pop() {\n        var el = this.arr.pop()\n        delete this.hash[el[3]]\n        return el\n    }\n    copyFrom(queue) {\n        this.arr = queue.arr.slice()\n        this.hash = {}\n        for (var key in queue.hash) this.hash[key] = true\n    }\n    sortByDistance(locToDist, reverse = false) {\n        sortLocationArrByDistance(this.arr, locToDist, reverse)\n    }\n}\n\n// internal helper for preceding class\nfunction sortLocationArrByDistance(arr, distFn, reverse) {\n    var hash = {}\n    for (var loc of arr) {\n        hash[loc[3]] = distFn(loc[0], loc[1], loc[2])\n    }\n    if (reverse) {\n        arr.sort((a, b) => hash[a[3]] - hash[b[3]]) // ascending\n    } else {\n        arr.sort((a, b) => hash[b[3]] - hash[a[3]]) // descending\n    }\n    hash = null\n}\n\n\n\n\n\n\n\n\n\n\n\n// simple thing for reporting time split up between several activities\nexport function makeProfileHook(every, title = '', filter) {\n    if (!(every > 0)) return () => { }\n    var times = {}\n    var started = 0, last = 0, iter = 0, total = 0\n\n    var start = () => {\n        started = last = performance.now()\n        iter++\n    }\n    var add = (name) => {\n        var t = performance.now()\n        times[name] = (times[name] || 0) + (t - last)\n        last = t\n    }\n    var report = () => {\n        total += performance.now() - started\n        if (iter < every) return\n        var out = `${title}: ${(total / every).toFixed(2)}ms  --  `\n        out += Object.keys(times).map(name => {\n            if (filter && (times[name] / total) < 0.05) return ''\n            return `${name}: ${(times[name] / iter).toFixed(2)}ms`\n        }).join('  ')\n        console.log(out + `    (avg over ${every} runs)`)\n        times = {}\n        iter = total = 0\n    }\n    return (state) => {\n        if (state === 'start') start()\n        else if (state === 'end') report()\n        else add(state)\n    }\n}\n\n\n\n\n// simple thing for reporting time actions/sec\nexport function makeThroughputHook(_every, _title, filter) {\n    var title = _title || ''\n    var every = _every || 1\n    var counts = {}\n    var started = performance.now()\n    var iter = 0\n    return function profile_hook(state) {\n        if (state === 'start') return\n        if (state === 'end') {\n            if (++iter < every) return\n            var t = performance.now()\n            console.log(title + '   ' + Object.keys(counts).map(k => {\n                var through = counts[k] / (t - started) * 1000\n                counts[k] = 0\n                return k + ':' + through.toFixed(2) + '   '\n            }).join(''))\n            started = t\n            iter = 0\n        } else {\n            if (!counts[state]) counts[state] = 0\n            counts[state]++\n        }\n    }\n}\n", "\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode'\nimport { makeProfileHook } from './util'\nimport '@babylonjs/core/Meshes/thinInstanceMesh'\n\n\nvar PROFILE = 0\n\n\n\n\n\n/*\n *\n *          Object meshing\n * \n *      Per-chunk handling of the creation/disposal of static meshes\n *      associated with particular voxel IDs\n * \n * \n*/\n\n\n/** \n * @internal\n * @param {import('../index').Engine} noa\n*/\nexport function ObjectMesher(noa) {\n\n    // transform node for all instance meshes to be parented to\n    this.rootNode = new TransformNode('objectMeshRoot', noa.rendering.scene)\n\n    // tracking rebase amount inside matrix data\n    var rebaseOffset = [0, 0, 0]\n\n    // flag to trigger a rebuild after a chunk is disposed\n    var rebuildNextTick = false\n\n    // mock object to pass to customMesh handler, to get transforms\n    var transformObj = new TransformNode('')\n\n    // list of known base meshes\n    this.allBaseMeshes = []\n\n    // internal storage of instance managers, keyed by ID\n    // has check to dedupe by mesh, since babylon chokes on\n    // separate sets of instances for the same mesh/clone/geometry\n    var managers = {}\n    var getManager = (id) => {\n        if (managers[id]) return managers[id]\n        var mesh = noa.registry._blockMeshLookup[id]\n        for (var id2 in managers) {\n            var prev = managers[id2].mesh\n            if (prev === mesh || (prev.geometry === mesh.geometry)) {\n                return managers[id] = managers[id2]\n            }\n        }\n        this.allBaseMeshes.push(mesh)\n        if (!mesh.metadata) mesh.metadata = {}\n        mesh.metadata[objectMeshFlag] = true\n        return managers[id] = new InstanceManager(noa, mesh)\n    }\n    var objectMeshFlag = 'noa_object_base_mesh'\n\n\n\n    /*\n     * \n     *      public API\n     * \n    */\n\n\n    // add any properties that will get used for meshing\n    this.initChunk = function (chunk) {\n        chunk._objectBlocks = {}\n    }\n\n\n    // called by world when an object block is set or cleared\n    this.setObjectBlock = function (chunk, blockID, i, j, k) {\n        var x = chunk.x + i\n        var y = chunk.y + j\n        var z = chunk.z + k\n        var key = `${x}:${y}:${z}`\n\n        var oldID = chunk._objectBlocks[key] || 0\n        if (oldID === blockID) return // should be impossible\n        if (oldID > 0) {\n            var oldMgr = getManager(oldID)\n            oldMgr.removeInstance(chunk, key)\n        }\n\n        if (blockID > 0) {\n            // if there's a block event handler, call it with\n            // a mock object so client can add transforms\n            var handlers = noa.registry._blockHandlerLookup[blockID]\n            var onCreate = handlers && handlers.onCustomMeshCreate\n            if (onCreate) {\n                transformObj.position.copyFromFloats(0.5, 0, 0.5)\n                transformObj.scaling.setAll(1)\n                transformObj.rotation.setAll(0)\n                onCreate(transformObj, x, y, z)\n            }\n            var mgr = getManager(blockID)\n            var xform = (onCreate) ? transformObj : null\n            mgr.addInstance(chunk, key, i, j, k, xform, rebaseOffset)\n        }\n\n        if (oldID > 0 && !blockID) delete chunk._objectBlocks[key]\n        if (blockID > 0) chunk._objectBlocks[key] = blockID\n    }\n\n\n\n    // called by world when it knows that objects have been updated\n    this.buildObjectMeshes = function () {\n        profile_hook('start')\n\n        for (var id in managers) {\n            var mgr = managers[id]\n            mgr.updateMatrix()\n            if (mgr.count === 0) mgr.dispose()\n            if (mgr.disposed) delete managers[id]\n        }\n\n        profile_hook('rebuilt')\n        profile_hook('end')\n    }\n\n\n\n    // called by world at end of chunk lifecycle\n    this.disposeChunk = function (chunk) {\n        for (var key in chunk._objectBlocks) {\n            var id = chunk._objectBlocks[key]\n            if (id > 0) {\n                var mgr = getManager(id)\n                mgr.removeInstance(chunk, key)\n            }\n        }\n        chunk._objectBlocks = null\n\n        // since some instance managers will have been updated\n        rebuildNextTick = true\n    }\n\n\n\n    // tick handler catches case where objects are dirty due to disposal\n    this.tick = function () {\n        if (rebuildNextTick) {\n            this.buildObjectMeshes()\n            rebuildNextTick = false\n        }\n    }\n\n\n\n    // world rebase handler\n    this._rebaseOrigin = function (delta) {\n        rebaseOffset[0] += delta[0]\n        rebaseOffset[1] += delta[1]\n        rebaseOffset[2] += delta[2]\n\n        for (var id1 in managers) managers[id1].rebased = false\n        for (var id2 in managers) {\n            var mgr = managers[id2]\n            if (mgr.rebased) continue\n            for (var i = 0; i < mgr.count; i++) {\n                var ix = i << 4\n                mgr.buffer[ix + 12] -= delta[0]\n                mgr.buffer[ix + 13] -= delta[1]\n                mgr.buffer[ix + 14] -= delta[2]\n            }\n            mgr.rebased = true\n            mgr.dirty = true\n        }\n        rebuildNextTick = true\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * \n * \n *      manager class for thin instances of a given object block ID \n * \n * \n*/\n\n/** @param {import('../index').Engine} noa*/\nfunction InstanceManager(noa, mesh) {\n    this.noa = noa\n    this.mesh = mesh\n    this.buffer = null\n    this.capacity = 0\n    this.count = 0\n    this.dirty = false\n    this.rebased = true\n    this.disposed = false\n    // dual struct to map keys (locations) to buffer locations, and back\n    this.keyToIndex = {}\n    this.locToKey = []\n    // prepare mesh for rendering\n    this.mesh.position.setAll(0)\n    this.mesh.parent = noa._objectMesher.rootNode\n    this.noa.rendering.addMeshToScene(this.mesh, false)\n    this.noa.emit('addingTerrainMesh', this.mesh)\n    this.mesh.isPickable = false\n    this.mesh.doNotSyncBoundingInfo = true\n    this.mesh.alwaysSelectAsActiveMesh = true\n}\n\n\n\nInstanceManager.prototype.dispose = function () {\n    if (this.disposed) return\n    this.mesh.thinInstanceCount = 0\n    this.setCapacity(0)\n    this.noa.emit('removingTerrainMesh', this.mesh)\n    this.noa.rendering.setMeshVisibility(this.mesh, false)\n    this.mesh = null\n    this.keyToIndex = null\n    this.locToKey = null\n    this.disposed = true\n}\n\n\nInstanceManager.prototype.addInstance = function (chunk, key, i, j, k, transform, rebaseVec) {\n    maybeExpandBuffer(this)\n    var ix = this.count << 4\n    this.locToKey[this.count] = key\n    this.keyToIndex[key] = ix\n    if (transform) {\n        transform.position.x += (chunk.x - rebaseVec[0]) + i\n        transform.position.y += (chunk.y - rebaseVec[1]) + j\n        transform.position.z += (chunk.z - rebaseVec[2]) + k\n        transform.computeWorldMatrix(true)\n        var xformArr = transform._localMatrix._m\n        copyMatrixData(xformArr, 0, this.buffer, ix)\n    } else {\n        var matArray = tempMatrixArray\n        matArray[12] = (chunk.x - rebaseVec[0]) + i + 0.5\n        matArray[13] = (chunk.y - rebaseVec[1]) + j\n        matArray[14] = (chunk.z - rebaseVec[2]) + k + 0.5\n        copyMatrixData(matArray, 0, this.buffer, ix)\n    }\n    this.count++\n    this.dirty = true\n}\n\n\nInstanceManager.prototype.removeInstance = function (chunk, key) {\n    var remIndex = this.keyToIndex[key]\n    if (!(remIndex >= 0)) throw 'tried to remove object instance not in storage'\n    delete this.keyToIndex[key]\n    var remLoc = remIndex >> 4\n    // copy tail instance's data to location of one we're removing\n    var tailLoc = this.count - 1\n    if (remLoc !== tailLoc) {\n        var tailIndex = tailLoc << 4\n        copyMatrixData(this.buffer, tailIndex, this.buffer, remIndex)\n        // update key/location structs\n        var tailKey = this.locToKey[tailLoc]\n        this.keyToIndex[tailKey] = remIndex\n        this.locToKey[remLoc] = tailKey\n    }\n    this.count--\n    this.dirty = true\n    maybeContractBuffer(this)\n}\n\n\nInstanceManager.prototype.updateMatrix = function () {\n    if (!this.dirty) return\n    this.mesh.thinInstanceCount = this.count\n    this.mesh.thinInstanceBufferUpdated('matrix')\n    this.mesh.isVisible = (this.count > 0)\n    this.dirty = false\n}\n\n\n\nInstanceManager.prototype.setCapacity = function (size = 4) {\n    this.capacity = size\n    if (size === 0) {\n        this.buffer = null\n    } else {\n        var newBuff = new Float32Array(this.capacity * 16)\n        if (this.buffer) {\n            var len = Math.min(this.buffer.length, newBuff.length)\n            for (var i = 0; i < len; i++) newBuff[i] = this.buffer[i]\n        }\n        this.buffer = newBuff\n    }\n    this.mesh.thinInstanceSetBuffer('matrix', this.buffer)\n    this.updateMatrix()\n}\n\n\nfunction maybeExpandBuffer(mgr) {\n    if (mgr.count < mgr.capacity) return\n    var size = Math.max(8, mgr.capacity * 2)\n    mgr.setCapacity(size)\n}\n\nfunction maybeContractBuffer(mgr) {\n    if (mgr.count > mgr.capacity * 0.4) return\n    if (mgr.capacity < 100) return\n    mgr.setCapacity(Math.round(mgr.capacity / 2))\n    mgr.locToKey.length = Math.min(mgr.locToKey.length, mgr.capacity)\n}\n\n\n\n// helpers\n\nvar tempMatrixArray = [\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0,\n]\n\nfunction copyMatrixData(src, srcOff, dest, destOff) {\n    for (var i = 0; i < 16; i++) dest[destOff + i] = src[srcOff + i]\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar profile_hook = (PROFILE) ?\n    makeProfileHook(PROFILE, 'Object meshing') : () => { }\n", "\nimport ndarray from 'ndarray'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh'\nimport { VertexData } from '@babylonjs/core/Meshes/mesh.vertexData'\nimport { TerrainMatManager } from './terrainMaterials'\nimport { makeProfileHook } from './util'\n\n\n\n// enable for profiling..\nvar PROFILE_EVERY = 0\n\n\n\n\n/*\n * \n *          TERRAIN MESHER!!\n * \n * \n *  top-level entry point:\n *      takes a chunk, passes it to the greedy mesher,\n *      gets back an intermediate struct of face data,\n *      passes that to the mesh builder,\n *      gets back an array of Mesh objects,\n *      and finally puts those into the 3D engine\n *      \n*/\n\n\n/** \n * @internal\n * @param {import('../index').Engine} noa \n*/\nexport function TerrainMesher(noa) {\n\n    // wrangles which block materials can be merged into the same mesh\n    var terrainMatManager = new TerrainMatManager(noa)\n    this.allTerrainMaterials = terrainMatManager.allMaterials\n\n    // internally expose the default flat material used for untextured terrain\n    this._defaultMaterial = terrainMatManager._defaultMat\n\n    // two-pass implementations for this module\n    var greedyMesher = new GreedyMesher(noa, terrainMatManager)\n    var meshBuilder = new MeshBuilder(noa, terrainMatManager)\n\n\n    /*\n     * \n     *      API\n     * \n    */\n\n    // set or clean up any per-chunk properties needed for terrain meshing\n    this.initChunk = function (chunk) {\n        chunk._terrainMeshes.length = 0\n    }\n\n    this.disposeChunk = function (chunk) {\n        chunk._terrainMeshes.forEach(mesh => {\n            noa.emit('removingTerrainMesh', mesh)\n            mesh.dispose()\n        })\n        chunk._terrainMeshes.length = 0\n    }\n\n\n    /**\n     * meshing entry point and high-level flow\n     * @param {import('./chunk').Chunk} chunk \n     */\n    this.meshChunk = function (chunk, ignoreMaterials = false) {\n        profile_hook('start')\n\n        // remove any previous terrain meshes\n        this.disposeChunk(chunk)\n        profile_hook('cleanup')\n\n        // greedy mesher generates struct of face data\n        var faceDataSet = greedyMesher.mesh(chunk, ignoreMaterials)\n        profile_hook('geom')\n\n        // builder generates mesh data (positions, normals, etc)\n        var meshes = meshBuilder.buildMesh(chunk, faceDataSet, ignoreMaterials)\n        profile_hook('build')\n\n        profile_hook('end')\n\n        // add meshes to scene and finish\n        meshes.forEach((mesh) => {\n            mesh.cullingStrategy = Mesh.CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY\n            noa.rendering.addMeshToScene(mesh, true, chunk.pos, this)\n            noa.emit('addingTerrainMesh', mesh)\n            mesh.freezeNormals()\n            mesh.freezeWorldMatrix()\n            chunk._terrainMeshes.push(mesh)\n            if (!mesh.metadata) mesh.metadata = {}\n            mesh.metadata[terrainMeshFlag] = true\n        })\n    }\n    var terrainMeshFlag = 'noa_chunk_terrain_mesh'\n\n}\n\n\n\n\n\n\n\n/*\n * \n * \n * \n * \n *      Intermediate struct to hold data for a bunch of merged block faces\n * \n *      The greedy mesher produces these (one per terrainID), \n *      and the mesh builder turns each one into a Mesh instance.\n *\n * \n * \n * \n * \n*/\n\nfunction MeshedFaceData() {\n    this.terrainID = 0\n    this.numFaces = 0\n    // following arrays are all one element per quad\n    this.matIDs = []\n    this.dirs = []\n    this.is = []\n    this.js = []\n    this.ks = []\n    this.wids = []\n    this.hts = []\n    this.packedAO = []\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n * \n * \n *      Greedy meshing algorithm\n *      \n *      Originally based on algo by Mikola Lysenko:\n *          http://0fps.net/2012/07/07/meshing-minecraft-part-2/\n *      but probably no code remaining from there anymore.\n *      Ad-hoc AO handling by me, made of cobwebs and dreams\n * \n *    \n *      Takes in a Chunk instance, and returns an object containing \n *      GeometryData structs, keyed by terrain material ID, \n *      which the terrain builder can then make into meshes.\n * \n * \n * @param {import('../index').Engine} noa\n * @param {import('./terrainMaterials').TerrainMatManager} terrainMatManager\n*/\n\nfunction GreedyMesher(noa, terrainMatManager) {\n\n    // class-wide cached structs and getters\n    var maskCache = new Int16Array(16)\n    var aoMaskCache = new Int16Array(16)\n\n    // terrain ID accessor can be overridded for hacky reasons\n    var realGetTerrainID = terrainMatManager.getTerrainMatId.bind(terrainMatManager)\n    var fakeGetTerrainID = (matID) => 1\n    var terrainIDgetter = realGetTerrainID\n\n\n\n\n\n    /** \n     * Entry point\n     * \n     * @param {import('./chunk').Chunk} chunk\n     * @returns {Object.<string, MeshedFaceData>} keyed by terrain material ID \n     */\n    this.mesh = function (chunk, ignoreMaterials) {\n        var cs = chunk.size\n        terrainIDgetter = (ignoreMaterials) ? fakeGetTerrainID : realGetTerrainID\n\n        // no internal faces for empty or entirely solid chunks\n        var edgesOnly = (chunk._isEmpty || chunk._isFull)\n\n        /** @type {Object.<string, MeshedFaceData>} */\n        var faceDataSet = {}\n        faceDataPool.reset()\n\n        // Sweep over each axis, mapping axes to [d,u,v]\n        for (var d = 0; d < 3; ++d) {\n            var u = (d === 2) ? 0 : 2\n            var v = (d === 1) ? 0 : 1\n\n            // transposed ndarrays of nearby chunk voxels (self and neighbors)\n            var nabVoxelsArr = chunk._neighbors.data.map(c => {\n                if (c && c.voxels) return c.voxels.transpose(d, u, v)\n                return null\n            })\n\n            // ndarray of the previous, similarly transposed\n            var nabVoxelsT = ndarray(nabVoxelsArr, [3, 3, 3])\n                .lo(1, 1, 1)\n                .transpose(d, u, v)\n\n            // embiggen the cached mask arrays if needed\n            if (maskCache.length < cs * cs) {\n                maskCache = new Int16Array(cs * cs)\n                aoMaskCache = new Int16Array(cs * cs)\n            }\n\n            // sets up transposed accessor for querying solidity of (i,j,k):\n            prepareSolidityLookup(nabVoxelsT, cs)\n\n\n            // ACTUAL MASK AND GEOMETRY CREATION\n\n\n            // mesh plane between this chunk and previous neighbor on i axis?\n            var prev = nabVoxelsT.get(-1, 0, 0)\n            var here = nabVoxelsT.get(0, 0, 0)\n            if (prev) {\n                // offset version of neighbor to make queries work at i=-1\n                var prevOff = prev.lo(cs, 0, 0)\n                var nFaces = constructMeshMask(d, prevOff, -1, here, 0)\n\n                if (nFaces > 0) {\n                    constructGeometryFromMasks(0, d, u, v, cs, cs, nFaces, faceDataSet)\n                }\n            }\n\n            // if only doing edges, we're done with this axis\n            if (edgesOnly) continue\n\n\n            // mesh the rest of the planes internal to this chunk\n            // note only looping up to (size-1), skipping final coord so as \n            // not to duplicate faces at chunk borders\n            for (var i = 0; i < cs - 1; i++) {\n\n                // maybe skip y axis, if both layers are all the same voxel\n                if (d === 1) {\n                    var v1 = chunk._wholeLayerVoxel[i]\n                    if (v1 >= 0 && v1 === chunk._wholeLayerVoxel[i + 1]) {\n                        continue\n                    }\n                }\n\n                // pass in layer array for skip checks, only if not already checked\n                var layerVoxRef = (d === 1) ? null : chunk._wholeLayerVoxel\n\n                var nf = constructMeshMask(d, here, i, here, i + 1, layerVoxRef)\n                if (nf > 0) {\n                    constructGeometryFromMasks(i + 1, d, u, v, cs, cs, nf, faceDataSet)\n                }\n            }\n\n            // we skip the i-positive neighbor so as not to duplicate edge faces\n        }\n\n        // done!\n        return faceDataSet\n    }\n\n\n\n\n\n\n    /**\n     * Rigging for a transposed (i,j,k) => boolean solidity lookup, \n     * that knows how to query into neigboring chunks at edges.\n     * This sets up the indirection used by `voxelIsSolid` below.\n    */\n    function prepareSolidityLookup(nabVoxelsT, size) {\n        if (solidityLookupInittedSize !== size) {\n            solidityLookupInittedSize = size\n            voxelIDtoSolidity = noa.registry._solidityLookup\n\n            for (var x = -1; x < size + 1; x++) {\n                var loc = (x < 0) ? 0 : (x < size) ? 1 : 2\n                coordToLoc[x + 1] = [0, 1, 2][loc]\n                edgeCoordLookup[x + 1] = [size - 1, x, 0][loc]\n                missingCoordLookup[x + 1] = [0, x, size - 1][loc]\n            }\n        }\n\n        var centerChunk = nabVoxelsT.get(0, 0, 0)\n        for (var i = 0; i < 3; i++) {\n            for (var j = 0; j < 3; j++) {\n                for (var k = 0; k < 3; k++) {\n                    var ix = i * 9 + j * 3 + k\n                    var nab = nabVoxelsT.get(i - 1, j - 1, k - 1)\n                    var type = 0\n                    if (!nab) type = 1\n                    if (nab === centerChunk) type = 2\n                    voxTypeLookup[ix] = type\n                    voxLookup[ix] = nab || centerChunk\n                }\n            }\n        }\n    }\n\n    var solidityLookupInittedSize = -1\n    var voxelIDtoSolidity = [false, true]\n    var voxLookup = Array(27).fill(null)\n    var voxTypeLookup = Array(27).fill(0)\n    var coordToLoc = [0, 1, 1, 1, 1, 1, 2]\n    var edgeCoordLookup = [3, 0, 1, 2, 3, 0]\n    var missingCoordLookup = [0, 0, 1, 2, 3, 3]\n\n\n    function voxelIsSolid(i, j, k) {\n        var li = coordToLoc[i + 1]\n        var lj = coordToLoc[j + 1]\n        var lk = coordToLoc[k + 1]\n        var ix = li * 9 + lj * 3 + lk\n        var voxArray = voxLookup[ix]\n        var type = voxTypeLookup[ix]\n        if (type === 2) {\n            return voxelIDtoSolidity[voxArray.get(i, j, k)]\n        }\n        var lookup = [edgeCoordLookup, missingCoordLookup][type]\n        var ci = lookup[i + 1]\n        var cj = lookup[j + 1]\n        var ck = lookup[k + 1]\n        return voxelIDtoSolidity[voxArray.get(ci, cj, ck)]\n    }\n\n\n\n\n\n\n\n\n    /**\n     * \n     *      Build a 2D array of mask values representing whether a \n     *      mesh face is needed at each position\n     * \n     *      Each mask value is a terrain material ID, negative if\n     *      the face needs to point in the -i direction (towards voxel arr A)\n     * \n     * @returns {number} number of mesh faces found\n     */\n\n    function constructMeshMask(d, arrA, iA, arrB, iB, wholeLayerVoxel = null) {\n        var len = arrA.shape[1]\n        var mask = maskCache\n        var aoMask = aoMaskCache\n        var doAO = noa.rendering.useAO\n        var skipRevAo = (noa.rendering.revAoVal === noa.rendering.aoVals[0])\n\n        var opacityLookup = noa.registry._opacityLookup\n        var getMaterial = noa.registry.getBlockFaceMaterial\n        var materialDir = d * 2\n\n        // mask is iterated by a simple integer, both here and later when\n        // merging meshes, so the j/k order must be the same in both places\n        var n = 0\n\n        // set up for quick ndarray traversals\n        var indexA = arrA.index(iA, 0, 0)\n        var jstrideA = arrA.stride[1]\n        var kstrideA = arrA.stride[2]\n        var indexB = arrB.index(iB, 0, 0)\n        var jstrideB = arrB.stride[1]\n        var kstrideB = arrB.stride[2]\n\n        var facesFound = 0\n\n        for (var k = 0; k < len; ++k) {\n            var dA = indexA\n            var dB = indexB\n            indexA += kstrideA\n            indexB += kstrideB\n\n            // skip this second axis, if whole layer is same voxel?\n            if (wholeLayerVoxel && wholeLayerVoxel[k] >= 0) {\n                n += len\n                continue\n            }\n\n            for (var j = 0; j < len; j++, n++, dA += jstrideA, dB += jstrideB) {\n\n                // mask[n] represents the face needed between the two voxel layers\n                // for now, assume we never have two faces in both directions\n\n                // note that mesher zeroes out the mask as it goes, so there's \n                // no need to zero it here when no face is needed\n\n                // IDs at i-1,j,k  and  i,j,k\n                var id0 = arrA.data[dA]\n                var id1 = arrB.data[dB]\n\n                // most common case: never a face between same voxel IDs, \n                // so skip out early\n                if (id0 === id1) continue\n\n                // no face if both blocks are opaque\n                var op0 = opacityLookup[id0]\n                var op1 = opacityLookup[id1]\n                if (op0 && op1) continue\n\n                // also no face if both block faces have the same block material\n                var m0 = getMaterial(id0, materialDir)\n                var m1 = getMaterial(id1, materialDir + 1)\n                if (m0 === m1) continue\n\n                // choose which block face to draw:\n                //   * if either block is opaque draw that one\n                //   * if either material is missing draw the other one\n                if (op0 || m1 === 0) {\n                    mask[n] = m0\n                    if (doAO) aoMask[n] = packAOMask(voxelIsSolid, iB, iA, j, k, skipRevAo)\n                    facesFound++\n                } else if (op1 || m0 === 0) {\n                    mask[n] = -m1\n                    if (doAO) aoMask[n] = packAOMask(voxelIsSolid, iA, iB, j, k, skipRevAo)\n                    facesFound++\n                } else {\n                    // leftover case is two different non-opaque blocks facing each other.\n                    // Someday we could try to draw both, but for now we draw neither.\n                }\n            }\n        }\n        return facesFound\n    }\n\n\n\n\n\n\n    // \n    //      Greedy meshing inner loop two\n    //\n    // construct geometry data from the masks\n\n    function constructGeometryFromMasks(i, d, u, v, len1, len2, numFaces, faceDataSet) {\n        var doAO = noa.rendering.useAO\n        var mask = maskCache\n        var aomask = aoMaskCache\n\n        var n = 0\n        var materialDir = d * 2\n        var x = [0, 0, 0]\n        x[d] = i\n\n        var maskCompareFcn = (doAO) ? maskCompare : maskCompare_noAO\n\n        for (var k = 0; k < len2; ++k) {\n            var w = 1\n            var h = 1\n            for (var j = 0; j < len1; j += w, n += w) {\n\n                var maskVal = mask[n] | 0\n                if (!maskVal) {\n                    w = 1\n                    continue\n                }\n\n                var ao = aomask[n] | 0\n\n                // Compute width and height of area with same mask/aomask values\n                for (w = 1; w < len1 - j; ++w) {\n                    if (!maskCompareFcn(n + w, mask, maskVal, aomask, ao)) break\n                }\n\n                OUTER:\n                for (h = 1; h < len2 - k; ++h) {\n                    for (var m = 0; m < w; ++m) {\n                        var ix = n + m + h * len1\n                        if (!maskCompareFcn(ix, mask, maskVal, aomask, ao)) break OUTER\n                    }\n                }\n\n                // for testing: doing the following will disable greediness\n                //w=h=1\n\n                //  materialID and terrain ID type for the face\n                var matID = Math.abs(maskVal)\n                var terrainID = terrainIDgetter(matID)\n\n                // if terrainID not seen before, start a new MeshedFaceData\n                // from the extremely naive object pool\n                if (!(terrainID in faceDataSet)) {\n                    var fdFromPool = faceDataPool.get()\n                    fdFromPool.numFaces = 0\n                    fdFromPool.terrainID = terrainID\n                    faceDataSet[terrainID] = fdFromPool\n                }\n\n                // pack one face worth of data into the return struct\n\n                var faceData = faceDataSet[terrainID]\n                var nf = faceData.numFaces\n                faceData.numFaces++\n\n                faceData.matIDs[nf] = matID\n                x[u] = j\n                x[v] = k\n                faceData.is[nf] = x[0]\n                faceData.js[nf] = x[1]\n                faceData.ks[nf] = x[2]\n                faceData.wids[nf] = w\n                faceData.hts[nf] = h\n                faceData.packedAO[nf] = ao\n                faceData.dirs[nf] = (maskVal > 0) ? materialDir : materialDir + 1\n\n\n                // Face now finished, zero out the used part of the mask\n                for (var hx = 0; hx < h; ++hx) {\n                    for (var wx = 0; wx < w; ++wx) {\n                        mask[n + wx + hx * len1] = 0\n                    }\n                }\n\n                // exit condition where no more faces are left to mesh\n                numFaces -= w * h\n                if (numFaces === 0) return\n            }\n        }\n    }\n\n    function maskCompare(index, mask, maskVal, aomask, aoVal) {\n        if (maskVal !== mask[index]) return false\n        if (aoVal !== aomask[index]) return false\n        return true\n    }\n\n    function maskCompare_noAO(index, mask, maskVal, aomask, aoVal) {\n        if (maskVal !== mask[index]) return false\n        return true\n    }\n\n}\n\n\n/**\n * Extremely naive object pool for MeshedFaceData objects\n*/\nvar faceDataPool = (() => {\n    var arr = [], ix = 0\n    var get = () => {\n        if (ix >= arr.length) arr.push(new MeshedFaceData)\n        ix++\n        return arr[ix - 1]\n    }\n    var reset = () => { ix = 0 }\n    return { get, reset }\n})()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n * \n * \n * \n *       Mesh Builder - consumes all the raw data in geomData to build\n *          Babylon.js mesh/submeshes, ready to be added to the scene\n * \n * \n * \n * \n * \n */\n\n/** @param {import('../index').Engine} noa  */\nfunction MeshBuilder(noa, terrainMatManager) {\n\n    /** \n     * Consume the intermediate FaceData struct and produce\n     * actual mesehes the 3D engine can render\n     * @param {Object.<string, MeshedFaceData>} faceDataSet  \n    */\n    this.buildMesh = function (chunk, faceDataSet, ignoreMaterials) {\n        var scene = noa.rendering.getScene()\n\n        var doAO = noa.rendering.useAO\n        var aoVals = noa.rendering.aoVals\n        var revAoVal = noa.rendering.revAoVal\n\n        var atlasIndexLookup = noa.registry._matAtlasIndexLookup\n        var matColorLookup = noa.registry._materialColorLookup\n        var white = [1, 1, 1]\n\n\n\n\n        // geometry data is already keyed by terrain type, so build\n        // one mesh per geomData object in the hash\n        var meshes = []\n        for (var key in faceDataSet) {\n            var faceData = faceDataSet[key]\n            var terrainID = faceData.terrainID\n\n            // will this mesh need texture atlas indexes?\n            var usesAtlas = false\n            if (!ignoreMaterials) {\n                var firstIx = atlasIndexLookup[faceData.matIDs[0]]\n                usesAtlas = (firstIx >= 0)\n            }\n\n            // build the necessary arrays\n            var nf = faceData.numFaces\n            var indices = new Uint16Array(nf * 6)\n            var positions = new Float32Array(nf * 12)\n            var normals = new Float32Array(nf * 12)\n            var colors = new Float32Array(nf * 16)\n            var uvs = new Float32Array(nf * 8)\n            var atlasIndexes\n            if (usesAtlas) atlasIndexes = new Float32Array(nf * 4)\n\n            // scan all faces in the struct, creating data for each\n            for (var f = 0; f < faceData.numFaces; f++) {\n\n                // basic data from struct\n                var matID = faceData.matIDs[f]\n                var materialDir = faceData.dirs[f]  // 0..5: x,-x, y,-y, z,-z\n\n                var i = faceData.is[f]\n                var j = faceData.js[f]\n                var k = faceData.ks[f]\n                var w = faceData.wids[f]\n                var h = faceData.hts[f]\n                var axis = (materialDir / 2) | 0\n                var dir = (materialDir % 2) ? -1 : 1\n\n\n                addPositionValues(positions, f, i, j, k, axis, w, h)\n                addUVs(uvs, f, axis, w, h, dir)\n\n                var norms = [0, 0, 0]\n                norms[axis] = dir\n                addNormalValues(normals, f, norms)\n\n                var ao = faceData.packedAO[f]\n                var [A, B, C, D] = unpackAOMask(ao)\n                var triDir = decideTriDir(A, B, C, D)\n\n                addIndexValues(indices, f, axis, dir, triDir)\n\n                if (usesAtlas) {\n                    var atlasIndex = atlasIndexLookup[matID]\n                    addAtlasIndices(atlasIndexes, f, atlasIndex)\n                }\n\n                var matColor = matColorLookup[matID] || white\n                if (doAO) {\n                    pushMeshColors(colors, f, matColor, aoVals, revAoVal, A, B, C, D)\n                } else {\n                    pushMeshColors_noAO(colors, f, matColor)\n                }\n            }\n\n\n\n            // the mesh and vertexData object\n            var name = `chunk_${chunk.requestID}_${terrainID}`\n            var mesh = new Mesh(name, scene)\n            var vdat = new VertexData()\n\n            // finish the mesh\n            vdat.positions = positions\n            vdat.indices = indices\n            vdat.normals = normals\n            vdat.colors = colors\n            vdat.uvs = uvs\n            vdat.applyToMesh(mesh)\n\n            // meshes using a texture atlas need atlasIndices\n            if (usesAtlas) {\n                mesh.setVerticesData('texAtlasIndices', atlasIndexes, false, 1)\n            }\n\n            // disable some unnecessary bounding checks\n            mesh.isPickable = false\n            mesh.doNotSyncBoundingInfo = true\n            mesh._refreshBoundingInfo = () => mesh\n\n            // materials wrangled by external module\n            if (!ignoreMaterials) {\n                mesh.material = terrainMatManager.getMaterial(terrainID)\n            }\n\n            // done\n            meshes.push(mesh)\n        }\n\n        return meshes\n    }\n\n\n\n\n    // HELPERS ---- these could probably be simplified and less magical\n\n    function addPositionValues(posArr, faceNum, i, j, k, axis, w, h) {\n        var offset = faceNum * 12\n\n        var loc = [i, j, k]\n        var du = [0, 0, 0]\n        var dv = [0, 0, 0]\n        du[(axis === 2) ? 0 : 2] = w\n        dv[(axis === 1) ? 0 : 1] = h\n\n        for (var ix = 0; ix < 3; ix++) {\n            posArr[offset + ix] = loc[ix]\n            posArr[offset + 3 + ix] = loc[ix] + du[ix]\n            posArr[offset + 6 + ix] = loc[ix] + du[ix] + dv[ix]\n            posArr[offset + 9 + ix] = loc[ix] + dv[ix]\n        }\n    }\n\n\n\n    function addUVs(uvArr, faceNum, d, w, h, dir) {\n        var offset = faceNum * 8\n        var epsilon = 0\n        for (var i = 0; i < 8; i++) uvArr[offset + i] = epsilon\n        if (d === 0) {\n            uvArr[offset + 1] = uvArr[offset + 3] = h - epsilon\n            uvArr[offset + 2] = uvArr[offset + 4] = dir * w\n        } else if (d === 1) {\n            uvArr[offset + 1] = uvArr[offset + 7] = w - epsilon\n            uvArr[offset + 4] = uvArr[offset + 6] = dir * h\n        } else {\n            uvArr[offset + 1] = uvArr[offset + 3] = h - epsilon\n            uvArr[offset + 2] = uvArr[offset + 4] = -dir * w\n        }\n    }\n\n    function addNormalValues(normArr, faceNum, norms) {\n        var offset = faceNum * 12\n        for (var i = 0; i < 12; i++) {\n            normArr[offset + i] = norms[i % 3]\n        }\n    }\n\n    function addIndexValues(indArr, faceNum, axis, dir, triDir) {\n        var offset = faceNum * 6\n        var baseIndex = faceNum * 4\n        if (axis === 0) dir = -dir\n        var ix = (dir < 0) ? 0 : 1\n        if (!triDir) ix += 2\n        var indexVals = indexLists[ix]\n        for (var i = 0; i < 6; i++) {\n            indArr[offset + i] = baseIndex + indexVals[i]\n        }\n    }\n    var indexLists = [\n        [0, 1, 2, 0, 2, 3], // base\n        [0, 2, 1, 0, 3, 2], // flipped\n        [1, 2, 3, 1, 3, 0], // opposite triDir\n        [1, 3, 2, 1, 0, 3], // opposite triDir\n    ]\n\n\n\n\n    function addAtlasIndices(indArr, faceNum, atlasIndex) {\n        var offset = faceNum * 4\n        for (var i = 0; i < 4; i++) {\n            indArr[offset + i] = atlasIndex\n        }\n    }\n\n    function decideTriDir(A, B, C, D) {\n        // this bit is pretty magical..\n        // (true means split along the a00-a11 axis)\n        if (A === C) {\n            return (D === B) ? (D === 2) : true\n        } else {\n            return (D === B) ? false : (A + C > D + B)\n        }\n    }\n\n    function pushMeshColors_noAO(colors, faceNum, col) {\n        var offset = faceNum * 16\n        for (var i = 0; i < 16; i += 4) {\n            colors[offset + i] = col[0]\n            colors[offset + i + 1] = col[1]\n            colors[offset + i + 2] = col[2]\n            colors[offset + i + 3] = 1\n        }\n    }\n\n    function pushMeshColors(colors, faceNum, col, aoVals, revAo, A, B, C, D) {\n        var offset = faceNum * 16\n        pushAOColor(colors, offset, col, A, aoVals, revAo)\n        pushAOColor(colors, offset + 4, col, D, aoVals, revAo)\n        pushAOColor(colors, offset + 8, col, C, aoVals, revAo)\n        pushAOColor(colors, offset + 12, col, B, aoVals, revAo)\n    }\n\n    // premultiply vertex colors by value depending on AO level\n    // then push them into color array\n    function pushAOColor(colors, ix, baseCol, ao, aoVals, revAoVal) {\n        var mult = (ao === 0) ? revAoVal : aoVals[ao - 1]\n        colors[ix] = baseCol[0] * mult\n        colors[ix + 1] = baseCol[1] * mult\n        colors[ix + 2] = baseCol[2] * mult\n        colors[ix + 3] = 1\n    }\n\n}\n\n\n\n\n\n\n\n\n/*\n *\n *\n *\n *\n *          SHARED HELPERS - used by both main classes\n *\n *\n *\n *\n *\n*/\n\n\n\n\n/**\n *\n *\n *\n *  packAOMask:\n *\n *    For a given face, find occlusion levels for each vertex, then\n *    pack 4 such (2-bit) values into one Uint8 value\n * \n *  Occlusion levels:\n *    1 is flat ground, 2 is partial occlusion, 3 is max (corners)\n *    0 is \"reverse occlusion\" - an unoccluded exposed edge \n *  Packing order var(bit offset):\n * \n *      B(2)  -  C(6)   ^  K\n *       -        -     +> J\n *      A(0)  -  D(4)\n * \n*/\n\nfunction packAOMask(isSolid, ipos, ineg, j, k, skipReverse = false) {\n    var A = 1\n    var B = 1\n    var D = 1\n    var C = 1\n\n    // inc occlusion of vertex next to obstructed side\n    if (isSolid(ipos, j + 1, k)) { ++D; ++C }\n    if (isSolid(ipos, j - 1, k)) { ++A; ++B }\n    if (isSolid(ipos, j, k + 1)) { ++B; ++C }\n    if (isSolid(ipos, j, k - 1)) { ++A; ++D }\n\n    // facing into a solid (non-opaque) block?\n    var facingSolid = isSolid(ipos, j, k)\n    if (facingSolid) {\n        // always 2, or 3 in corners\n        C = (C === 3 || isSolid(ipos, j + 1, k + 1)) ? 3 : 2\n        B = (B === 3 || isSolid(ipos, j - 1, k + 1)) ? 3 : 2\n        D = (D === 3 || isSolid(ipos, j + 1, k - 1)) ? 3 : 2\n        A = (A === 3 || isSolid(ipos, j - 1, k - 1)) ? 3 : 2\n        return C << 6 | D << 4 | B << 2 | A\n    }\n\n    // simpler logic if skipping reverse AO?\n    if (skipReverse) {\n        // treat corner as occlusion 3 only if not occluded already\n        if (C === 1 && (isSolid(ipos, j + 1, k + 1))) { C = 2 }\n        if (B === 1 && (isSolid(ipos, j - 1, k + 1))) { B = 2 }\n        if (D === 1 && (isSolid(ipos, j + 1, k - 1))) { D = 2 }\n        if (A === 1 && (isSolid(ipos, j - 1, k - 1))) { A = 2 }\n        return C << 6 | D << 4 | B << 2 | A\n    }\n\n    // check each corner, and if not present do reverse AO\n    if (C === 1) {\n        if (isSolid(ipos, j + 1, k + 1)) {\n            C = 2\n        } else if (!(isSolid(ineg, j, k + 1)) ||\n            !(isSolid(ineg, j + 1, k)) ||\n            !(isSolid(ineg, j + 1, k + 1))) {\n            C = 0\n        }\n    }\n\n    if (D === 1) {\n        if (isSolid(ipos, j + 1, k - 1)) {\n            D = 2\n        } else if (!(isSolid(ineg, j, k - 1)) ||\n            !(isSolid(ineg, j + 1, k)) ||\n            !(isSolid(ineg, j + 1, k - 1))) {\n            D = 0\n        }\n    }\n\n    if (B === 1) {\n        if (isSolid(ipos, j - 1, k + 1)) {\n            B = 2\n        } else if (!(isSolid(ineg, j, k + 1)) ||\n            !(isSolid(ineg, j - 1, k)) ||\n            !(isSolid(ineg, j - 1, k + 1))) {\n            B = 0\n        }\n    }\n\n    if (A === 1) {\n        if (isSolid(ipos, j - 1, k - 1)) {\n            A = 2\n        } else if (!(isSolid(ineg, j, k - 1)) ||\n            !(isSolid(ineg, j - 1, k)) ||\n            !(isSolid(ineg, j - 1, k - 1))) {\n            A = 0\n        }\n    }\n\n    return C << 6 | D << 4 | B << 2 | A\n}\n\n/**\n * \n *      Takes in a packed AO value representing a face,\n *      and returns four 2-bit numbers for the AO levels\n *      at the four corners.\n *      \n*/\nfunction unpackAOMask(aomask) {\n    var A = aomask & 3\n    var B = (aomask >> 2) & 3\n    var D = (aomask >> 4) & 3\n    var C = (aomask >> 6) & 3\n    return [A, B, C, D]\n}\n\n\n\n\n\n\n\n\nvar profile_hook = (PROFILE_EVERY) ?\n    makeProfileHook(PROFILE_EVERY, 'Meshing') : () => { }\n\n", "\nimport { Engine } from '@babylonjs/core/Engines/engine'\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture'\nimport { MaterialPluginBase } from '@babylonjs/core/Materials/materialPluginBase'\nimport { RawTexture2DArray } from '@babylonjs/core/Materials/Textures/rawTexture2DArray'\n\n/**\n * \n * \n *      This module creates and manages Materials for terrain meshes. \n *      It tells the terrain mesher which block face materials can share\n *      the same material (and should thus be joined into a single mesh),\n *      and also creates the materials when needed.\n * \n * @internal\n*/\n\nexport class TerrainMatManager {\n\n    /** @param {import('../index').Engine} noa  */\n    constructor(noa) {\n        // make a baseline default material for untextured terrain with no alpha\n        this._defaultMat = noa.rendering.makeStandardMaterial('base-terrain')\n        this._defaultMat.freeze()\n\n        this.allMaterials = [this._defaultMat]\n\n        // internals\n        this.noa = noa\n        this._idCounter = 1000\n        this._blockMatIDtoTerrainID = {}\n        this._terrainIDtoMatObject = {}\n        this._texURLtoTerrainID = {}\n        this._renderMatToTerrainID = new Map()\n    }\n\n\n\n    /** \n     * Maps a given `matID` (from noa.registry) to a unique ID of which \n     * terrain material can be used for that block material.\n     * This lets the terrain mesher map which blocks can be merged into\n     * the same meshes.\n     * Internally, this accessor also creates the material for each \n     * terrainMatID as they are first encountered.\n     */\n\n    getTerrainMatId(blockMatID) {\n        // fast case where matID has been seen before\n        if (blockMatID in this._blockMatIDtoTerrainID) {\n            return this._blockMatIDtoTerrainID[blockMatID]\n        }\n        // decide a unique terrainID for this block material\n        var terrID = decideTerrainMatID(this, blockMatID)\n        // create a mat object for it, if needed\n        if (!(terrID in this._terrainIDtoMatObject)) {\n            var mat = createTerrainMat(this, blockMatID)\n            this.allMaterials.push(mat)\n            this._terrainIDtoMatObject[terrID] = mat\n        }\n        // cache results and done\n        this._blockMatIDtoTerrainID[blockMatID] = terrID\n        return terrID\n    }\n\n\n    /**\n     * Get a Babylon Material object, given a terrainMatID (gotten from this module)\n     */\n    getMaterial(terrainMatID = 1) {\n        return this._terrainIDtoMatObject[terrainMatID]\n    }\n\n\n\n\n\n}\n\n\n\n\n/**\n * \n * \n *      Implementations of creating/disambiguating terrain Materials\n * \n * \n*/\n\n/** \n * Decide a unique terrainID, based on block material ID properties\n * @param {TerrainMatManager} self \n*/\nfunction decideTerrainMatID(self, blockMatID = 0) {\n    var matInfo = self.noa.registry.getMaterialData(blockMatID)\n\n    // custom render materials get one unique terrainID per material\n    if (matInfo.renderMat) {\n        var mat = matInfo.renderMat\n        if (!self._renderMatToTerrainID.has(mat)) {\n            self._renderMatToTerrainID.set(mat, self._idCounter++)\n        }\n        return self._renderMatToTerrainID.get(mat)\n    }\n\n    // ditto for textures, unique URL\n    if (matInfo.texture) {\n        var url = matInfo.texture\n        if (!(url in self._texURLtoTerrainID)) {\n            self._texURLtoTerrainID[url] = self._idCounter++\n        }\n        return self._texURLtoTerrainID[url]\n    }\n\n    // plain color materials with an alpha value are unique by alpha\n    var alpha = matInfo.alpha\n    if (alpha > 0 && alpha < 1) return 10 + Math.round(alpha * 100)\n\n    // the only remaining case is the baseline, which always reuses one fixed ID\n    return 1\n}\n\n\n/** \n * Create (choose) a material for a given set of block material properties\n * @param {TerrainMatManager} self \n*/\nfunction createTerrainMat(self, blockMatID = 0) {\n    var matInfo = self.noa.registry.getMaterialData(blockMatID)\n\n    // custom render mats are just reused\n    if (matInfo.renderMat) return matInfo.renderMat\n\n    // if no texture: use a basic flat material, possibly with alpha\n    if (!matInfo.texture) {\n        var needsAlpha = (matInfo.alpha > 0 && matInfo.alpha < 1)\n        if (!needsAlpha) return self._defaultMat\n        var matName = 'terrain-alpha-' + blockMatID\n        var plainMat = self.noa.rendering.makeStandardMaterial(matName)\n        plainMat.alpha = matInfo.alpha\n        plainMat.freeze()\n        return plainMat\n    }\n\n    // remaining case is a new material with a diffuse texture\n    var scene = self.noa.rendering.getScene()\n    var mat = self.noa.rendering.makeStandardMaterial('terrain-textured-' + blockMatID)\n    var texURL = matInfo.texture\n    var sampling = Texture.NEAREST_SAMPLINGMODE\n    var tex = new Texture(texURL, scene, true, false, sampling)\n    if (matInfo.texHasAlpha) tex.hasAlpha = true\n    mat.diffuseTexture = tex\n\n    // it texture is an atlas, apply material plugin\n    // and check whether any material for the atlas needs alpha\n    if (matInfo.atlasIndex >= 0) {\n        new TerrainMaterialPlugin(mat, tex)\n        if (self.noa.registry._textureNeedsAlpha(matInfo.texture)) {\n            tex.hasAlpha = true\n        }\n    }\n\n    mat.freeze()\n    return mat\n}\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n *      Babylon material plugin - twiddles the defines/shaders/etc so that\n *      a standard material can use textures from a 2D texture atlas.\n * \n*/\n\nclass TerrainMaterialPlugin extends MaterialPluginBase {\n    constructor(material, texture) {\n        var priority = 200\n        var defines = { 'NOA_TWOD_ARRAY_TEXTURE': false }\n        super(material, 'TestPlugin', priority, defines)\n        this._enable(true)\n        this._atlasTextureArray = null\n\n        texture.onLoadObservable.add((tex) => {\n            this.setTextureArrayData(tex)\n        })\n    }\n\n    setTextureArrayData(texture) {\n        var { width, height } = texture.getSize()\n        var numLayers = Math.round(height / width)\n        height = width\n        var data = texture._readPixelsSync()\n\n        var format = Engine.TEXTUREFORMAT_RGBA\n        var genMipMaps = true\n        var invertY = false\n        var mode = Texture.NEAREST_SAMPLINGMODE\n        var scene = texture.getScene()\n\n        this._atlasTextureArray = new RawTexture2DArray(\n            data, width, height, numLayers,\n            format, scene, genMipMaps, invertY, mode,\n        )\n    }\n\n    prepareDefines(defines, scene, mesh) {\n        defines['NOA_TWOD_ARRAY_TEXTURE'] = true\n    }\n\n    getClassName() {\n        return 'TerrainMaterialPluginName'\n    }\n\n    getSamplers(samplers) {\n        samplers.push('atlasTexture')\n    }\n\n    getAttributes(attributes) {\n        attributes.push('texAtlasIndices')\n    }\n\n    getUniforms() {\n        return { ubo: [] }\n    }\n\n    bindForSubMesh(uniformBuffer, scene, engine, subMesh) {\n        if (this._atlasTextureArray) {\n            uniformBuffer.setTexture('atlasTexture', this._atlasTextureArray)\n        }\n    }\n\n    getCustomCode(shaderType) {\n        if (shaderType === 'vertex') return {\n            'CUSTOM_VERTEX_MAIN_BEGIN': `\n                texAtlasIndex = texAtlasIndices;\n            `,\n            'CUSTOM_VERTEX_DEFINITIONS': `\n                uniform highp sampler2DArray atlasTexture;\n                attribute float texAtlasIndices;\n                varying float texAtlasIndex;\n            `,\n        }\n        if (shaderType === 'fragment') return {\n            '!baseColor\\\\=texture2D\\\\(diffuseSampler,vDiffuseUV\\\\+uvOffset\\\\);':\n                `baseColor = texture(atlasTexture, vec3(vDiffuseUV, texAtlasIndex));`,\n            'CUSTOM_FRAGMENT_DEFINITIONS': `\n                uniform highp sampler2DArray atlasTexture;\n                varying float texAtlasIndex;\n            `,\n        }\n        return null\n    }\n}\n", "\n\nvar defaults = {\n    texturePath: ''\n}\n\n// voxel ID now uses the whole Uint16Array element\nvar MAX_BLOCK_ID = (1 << 16) - 1\n\n\n\n\n\n/**\n * `noa.registry` - Where you register your voxel types, \n * materials, properties, and events.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * \n * ```js\n * var defaults = {\n *     texturePath: ''\n * }\n * ```\n*/\n\nexport class Registry {\n\n\n    /** \n     * @internal \n     * @param {import('../index').Engine} noa\n    */\n    constructor(noa, opts) {\n        opts = Object.assign({}, defaults, opts)\n        /** @internal */\n        this.noa = noa\n\n        /** @internal */\n        this._texturePath = opts.texturePath\n\n        /** Maps block face material names to matIDs\n         * @type {Object.<string, number>} */\n        var matIDs = {}\n\n        // lookup arrays for block props and flags - all keyed by blockID\n        // fill in first value for the air block with id=0\n        var blockSolidity = [false]\n        var blockOpacity = [false]\n        var blockIsFluid = [false]\n        var blockIsObject = [false]\n        var blockProps = [null]     // less-often accessed properties\n        var blockMeshes = [null]    // custom mesh objects\n        var blockHandlers = [null]  // block event handlers\n        var blockIsPlain = [false]  // true if voxel is \"boring\" - solid/opaque, no special props\n\n        // this one is keyed by `blockID*6 + faceNumber`\n        var blockMats = [0, 0, 0, 0, 0, 0]\n\n        // and these are keyed by material id\n        var matColorLookup = [null]\n        var matAtlasIndexLookup = [-1]\n\n        /** \n         * Lookup array of block face material properties - keyed by matID (not blockID)\n         * @typedef MatDef\n         * @prop {number[]} color\n         * @prop {number} alpha\n         * @prop {string} texture\n         * @prop {boolean} texHasAlpha\n         * @prop {number} atlasIndex\n         * @prop {*} renderMat\n         */\n        /** @type {MatDef[]} */\n        var matDefs = []\n\n\n        /* \n         * \n         *      Block registration methods\n         * \n        */\n\n\n\n        /**\n         * Register (by integer ID) a block type and its parameters.\n         *  `id` param: integer, currently 1..65535. Generally you should \n         * specify sequential values for blocks, without gaps, but this \n         * isn't technically necessary.\n         * \n         * @param {number} id - sequential integer ID (from 1)\n         * @param {Partial<BlockOptions>} [options] \n         * @returns the `id` value specified\n         */\n        this.registerBlock = function (id = 1, options = null) {\n            var defaults = new BlockOptions(options && options.fluid)\n            var opts = Object.assign({}, defaults, options || {})\n\n            // console.log('register block: ', id, opts)\n            if (id < 1 || id > MAX_BLOCK_ID) throw 'Block id out of range: ' + id\n\n            // if block ID is greater than current highest ID, \n            // register fake blocks to avoid holes in lookup arrays\n            while (id > blockSolidity.length) {\n                this.registerBlock(blockSolidity.length, {})\n            }\n\n            // flags default to solid, opaque, nonfluid\n            blockSolidity[id] = !!opts.solid\n            blockOpacity[id] = !!opts.opaque\n            blockIsFluid[id] = !!opts.fluid\n\n            // store any custom mesh\n            blockIsObject[id] = !!opts.blockMesh\n            blockMeshes[id] = opts.blockMesh || null\n\n            // parse out material parameter\n            // always store 6 material IDs per blockID, so material lookup is monomorphic\n            var mat = opts.material || null\n            var mats\n            if (!mat) {\n                mats = [null, null, null, null, null, null]\n            } else if (typeof mat == 'string') {\n                mats = [mat, mat, mat, mat, mat, mat]\n            } else if (mat.length && mat.length == 2) {\n                // interpret as [top/bottom, sides]\n                mats = [mat[1], mat[1], mat[0], mat[0], mat[1], mat[1]]\n            } else if (mat.length && mat.length == 3) {\n                // interpret as [top, bottom, sides]\n                mats = [mat[2], mat[2], mat[0], mat[1], mat[2], mat[2]]\n            } else if (mat.length && mat.length == 6) {\n                // interpret as [-x, +x, -y, +y, -z, +z]\n                mats = mat\n            } else throw 'Invalid material parameter: ' + mat\n\n            // argument is material name, but store as material id, allocating one if needed\n            for (var i = 0; i < 6; ++i) {\n                blockMats[id * 6 + i] = getMaterialId(this, matIDs, mats[i], true)\n            }\n\n            // props data object - currently only used for fluid properties\n            blockProps[id] = {}\n\n            // if block is fluid, initialize properties if needed\n            if (blockIsFluid[id]) {\n                blockProps[id].fluidDensity = opts.fluidDensity\n                blockProps[id].viscosity = opts.viscosity\n            }\n\n            // event callbacks\n            var hasHandler = opts.onLoad || opts.onUnload || opts.onSet || opts.onUnset || opts.onCustomMeshCreate\n            blockHandlers[id] = (hasHandler) ? new BlockCallbackHolder(opts) : null\n\n            // special lookup for \"plain\"-ness\n            // plain means solid, opaque, not fluid, no mesh or events\n            var isPlain = blockSolidity[id] && blockOpacity[id]\n                && !hasHandler && !blockIsFluid[id] && !blockIsObject[id]\n            blockIsPlain[id] = isPlain\n\n            return id\n        }\n\n\n\n\n        /**\n         * Register (by name) a material and its parameters.\n         * \n         * @param {string} name of this material\n         * @param {Partial<MaterialOptions>} [options]\n         */\n\n        this.registerMaterial = function (name = '?', options = null) {\n            // catch calls to earlier signature\n            if (Array.isArray(options)) {\n                throw 'This API changed signatures in v0.33, please use: `noa.registry.registerMaterial(\"name\", optionsObj)`'\n            }\n\n            var opts = Object.assign(new MaterialOptions(), options || {})\n            var matID = matIDs[name] || matDefs.length\n            matIDs[name] = matID\n\n            var texURL = opts.textureURL ? this._texturePath + opts.textureURL : ''\n            var alpha = 1.0\n            var color = opts.color || [1.0, 1.0, 1.0]\n            if (color.length === 4) alpha = color.pop()\n            if (texURL) color = null\n\n            // populate lookup arrays for terrain meshing\n            matColorLookup[matID] = color\n            matAtlasIndexLookup[matID] = opts.atlasIndex\n\n            matDefs[matID] = {\n                color,\n                alpha,\n                texture: texURL,\n                texHasAlpha: !!opts.texHasAlpha,\n                atlasIndex: opts.atlasIndex,\n                renderMat: opts.renderMaterial,\n            }\n            return matID\n        }\n\n\n\n        /*\n         *      quick accessors for querying block ID stuff\n         */\n\n        /** \n         * block solidity (as in physics) \n         * @param id\n         */\n        this.getBlockSolidity = function (id) {\n            return blockSolidity[id]\n        }\n\n        /**\n         * block opacity - whether it obscures the whole voxel (dirt) or \n         * can be partially seen through (like a fencepost, etc)\n         * @param id\n         */\n        this.getBlockOpacity = function (id) {\n            return blockOpacity[id]\n        }\n\n        /** \n         * block is fluid or not\n         * @param id\n         */\n        this.getBlockFluidity = function (id) {\n            return blockIsFluid[id]\n        }\n\n        /** \n         * Get block property object passed in at registration\n         * @param id\n         */\n        this.getBlockProps = function (id) {\n            return blockProps[id]\n        }\n\n        // look up a block ID's face material\n        // dir is a value 0..5: [ +x, -x, +y, -y, +z, -z ]\n        this.getBlockFaceMaterial = function (blockId, dir) {\n            return blockMats[blockId * 6 + dir]\n        }\n\n\n        /**\n         * General lookup for all properties of a block material\n         * @param {number} matID \n         * @returns {MatDef}\n         */\n        this.getMaterialData = function (matID) {\n            return matDefs[matID]\n        }\n\n\n        /**\n         * Given a texture URL, does any material using that \n         * texture need alpha?\n         * @internal\n         * @returns {boolean}\n         */\n        this._textureNeedsAlpha = function (tex = '') {\n            return matDefs.some(def => {\n                if (def.texture !== tex) return false\n                return def.texHasAlpha\n            })\n        }\n\n\n\n\n\n        /*\n         * \n         *   Meant for internal use within the engine\n         * \n         */\n\n\n        // internal access to lookup arrays\n        /** @internal */\n        this._solidityLookup = blockSolidity\n        /** @internal */\n        this._opacityLookup = blockOpacity\n        /** @internal */\n        this._fluidityLookup = blockIsFluid\n        /** @internal */\n        this._objectLookup = blockIsObject\n        /** @internal */\n        this._blockMeshLookup = blockMeshes\n        /** @internal */\n        this._blockHandlerLookup = blockHandlers\n        /** @internal */\n        this._blockIsPlainLookup = blockIsPlain\n        /** @internal */\n        this._materialColorLookup = matColorLookup\n        /** @internal */\n        this._matAtlasIndexLookup = matAtlasIndexLookup\n\n\n\n        /*\n         * \n         *      default initialization\n         * \n         */\n\n        // add a default material and set ID=1 to it\n        // this is safe since registering new block data overwrites the old\n        this.registerMaterial('dirt', { color: [0.4, 0.3, 0] })\n        this.registerBlock(1, { material: 'dirt' })\n\n    }\n\n}\n\n/*\n * \n *          helpers\n * \n*/\n\n\n\n// look up material ID given its name\n// if lazy is set, pre-register the name and return an ID\nfunction getMaterialId(reg, matIDs, name, lazyInit) {\n    if (!name) return 0\n    var id = matIDs[name]\n    if (id === undefined && lazyInit) id = reg.registerMaterial(name)\n    return id\n}\n\n\n\n// data class for holding block callback references\nfunction BlockCallbackHolder(opts) {\n    this.onLoad = opts.onLoad || null\n    this.onUnload = opts.onUnload || null\n    this.onSet = opts.onSet || null\n    this.onUnset = opts.onUnset || null\n    this.onCustomMeshCreate = opts.onCustomMeshCreate || null\n}\n\n\n\n\n/**\n * Default options when registering a block type\n */\nfunction BlockOptions(isFluid = false) {\n    /** Solidity for physics purposes */\n    this.solid = (isFluid) ? false : true\n    /** Whether the block fully obscures neighboring blocks */\n    this.opaque = (isFluid) ? false : true\n    /** whether a nonsolid block is a fluid (buoyant, viscous..) */\n    this.fluid = false\n    /** The block material(s) for this voxel's faces. May be:\n     *   * one (String) material name\n     *   * array of 2 names: [top/bottom, sides]\n     *   * array of 3 names: [top, bottom, sides]\n     *   * array of 6 names: [-x, +x, -y, +y, -z, +z]\n     * @type {string|string[]}\n    */\n    this.material = null\n    /** Specifies a custom mesh for this voxel, instead of terrain  */\n    this.blockMesh = null\n    /** Fluid parameter for fluid blocks */\n    this.fluidDensity = 1.0\n    /** Fluid parameter for fluid blocks */\n    this.viscosity = 0.5\n    /** @type {(x:number, y:number, z:number) => void} */\n    this.onLoad = null\n    /** @type {(x:number, y:number, z:number) => void} */\n    this.onUnload = null\n    /** @type {(x:number, y:number, z:number) => void} */\n    this.onSet = null\n    /** @type {(x:number, y:number, z:number) => void} */\n    this.onUnset = null\n    /** @type {(mesh:TransformNode, x:number, y:number, z:number) => void} */\n    this.onCustomMeshCreate = null\n}\n\n/** @typedef {import('@babylonjs/core/Meshes').TransformNode} TransformNode */\n\n\n/**\n * Default options when registering a Block Material\n */\nfunction MaterialOptions() {\n    /** An array of 0..1 floats, either [R,G,B] or [R,G,B,A]\n     * @type {number[]}\n     */\n    this.color = null\n    /** Filename of texture image, if any\n     * @type {string}\n     */\n    this.textureURL = null\n    /** Whether the texture image has alpha */\n    this.texHasAlpha = false\n    /** Index into a (vertical strip) texture atlas, if applicable */\n    this.atlasIndex = -1\n    /**\n     * An optional Babylon.js `Material`. If specified, terrain for this voxel\n     * will be rendered with the supplied material (this can impact performance).\n     */\n    this.renderMaterial = null\n}\n", "\nimport glvec3 from 'gl-vec3'\nimport { makeProfileHook } from './util'\n\nimport { SceneOctreeManager } from './sceneOctreeManager'\n\nimport { Scene, ScenePerformancePriority } from '@babylonjs/core/scene'\nimport { FreeCamera } from '@babylonjs/core/Cameras/freeCamera'\nimport { Engine } from '@babylonjs/core/Engines/engine'\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight'\nimport { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial'\nimport { Color3, Color4 } from '@babylonjs/core/Maths/math.color'\nimport { Vector3 } from '@babylonjs/core/Maths/math.vector'\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode'\nimport { CreateLines } from '@babylonjs/core/Meshes/Builders/linesBuilder'\nimport { CreatePlane } from '@babylonjs/core/Meshes/Builders/planeBuilder'\n\n\n\n\n// profiling flag\nvar PROFILE = 0\n\n\n\nvar defaults = {\n    showFPS: false,\n    antiAlias: true,\n    clearColor: [0.8, 0.9, 1],\n    ambientColor: [0.5, 0.5, 0.5],\n    lightDiffuse: [1, 1, 1],\n    lightSpecular: [1, 1, 1],\n    lightVector: [1, -1, 0.5],\n    useAO: true,\n    AOmultipliers: [0.93, 0.8, 0.5],\n    reverseAOmultiplier: 1.0,\n    preserveDrawingBuffer: true,\n    octreeBlockSize: 2,\n    renderOnResize: true,\n}\n\n\n\n/**\n * `noa.rendering` - \n * Manages all rendering, and the BABYLON scene, materials, etc.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * ```js\n * {\n *     showFPS: false,\n *     antiAlias: true,\n *     clearColor: [0.8, 0.9, 1],\n *     ambientColor: [0.5, 0.5, 0.5],\n *     lightDiffuse: [1, 1, 1],\n *     lightSpecular: [1, 1, 1],\n *     lightVector: [1, -1, 0.5],\n *     useAO: true,\n *     AOmultipliers: [0.93, 0.8, 0.5],\n *     reverseAOmultiplier: 1.0,\n *     preserveDrawingBuffer: true,\n *     octreeBlockSize: 2,\n *     renderOnResize: true,\n * }\n * ```\n*/\n\nexport class Rendering {\n\n    /** \n     * @internal \n     * @param {import('../index').Engine} noa  \n    */\n    constructor(noa, opts, canvas) {\n        opts = Object.assign({}, defaults, opts)\n        /** @internal */\n        this.noa = noa\n\n        // settings\n        /** Whether to redraw the screen when the game is resized while paused */\n        this.renderOnResize = !!opts.renderOnResize\n\n        // internals\n        /** @internal */\n        this.useAO = !!opts.useAO\n        /** @internal */\n        this.aoVals = opts.AOmultipliers\n        /** @internal */\n        this.revAoVal = opts.reverseAOmultiplier\n        /** @internal */\n        this.meshingCutoffTime = 6 // ms\n\n        /** the Babylon.js Engine object for the scene */\n        this.engine = null\n        /** the Babylon.js Scene object for the world */\n        this.scene = null\n        /** a Babylon.js DirectionalLight that is added to the scene */\n        this.light = null\n        /** the Babylon.js FreeCamera that renders the scene */\n        this.camera = null\n\n        // sets up babylon scene, lights, etc\n        this._initScene(canvas, opts)\n\n        // for debugging\n        if (opts.showFPS) setUpFPS()\n    }\n\n\n\n\n    /**\n     * Constructor helper - set up the Babylon.js scene and basic components\n     * @internal\n     */\n    _initScene(canvas, opts) {\n\n        // init internal properties\n        this.engine = new Engine(canvas, opts.antiAlias, {\n            preserveDrawingBuffer: opts.preserveDrawingBuffer,\n        })\n        var scene = new Scene(this.engine)\n        this.scene = scene\n        // remove built-in listeners\n        scene.detachControl()\n\n        // this disables a few babylon features that noa doesn't use\n        scene.performancePriority = ScenePerformancePriority.Intermediate\n        scene.autoClear = true\n\n        // octree manager class\n        var blockSize = Math.round(opts.octreeBlockSize)\n        /** @internal */\n        this._octreeManager = new SceneOctreeManager(this, blockSize)\n\n        // camera, and a node to hold it and accumulate rotations\n        /** @internal */\n        this._cameraHolder = new TransformNode('camHolder', scene)\n        this.camera = new FreeCamera('camera', new Vector3(0, 0, 0), scene)\n        this.camera.parent = this._cameraHolder\n        this.camera.minZ = .01\n\n        // plane obscuring the camera - for overlaying an effect on the whole view\n        /** @internal */\n        this._camScreen = CreatePlane('camScreen', { size: 10 }, scene)\n        this.addMeshToScene(this._camScreen)\n        this._camScreen.position.z = .1\n        this._camScreen.parent = this.camera\n        /** @internal */\n        this._camScreenMat = this.makeStandardMaterial('camera_screen_mat')\n        this._camScreen.material = this._camScreenMat\n        this._camScreen.setEnabled(false)\n        this._camScreenMat.freeze()\n        /** @internal */\n        this._camLocBlock = 0\n\n        // apply some defaults\n        scene.clearColor = Color4.FromArray(opts.clearColor)\n        scene.ambientColor = Color3.FromArray(opts.ambientColor)\n\n        var lightVec = Vector3.FromArray(opts.lightVector)\n        this.light = new DirectionalLight('light', lightVec, scene)\n        this.light.diffuse = Color3.FromArray(opts.lightDiffuse)\n        this.light.specular = Color3.FromArray(opts.lightSpecular)\n\n        // scene options\n        scene.skipPointerMovePicking = true\n    }\n}\n\n\n\n/*\n *   PUBLIC API \n */\n\n\n/** The Babylon `scene` object representing the game world. */\nRendering.prototype.getScene = function () {\n    return this.scene\n}\n\n// per-tick listener for rendering-related stuff\n/** @internal */\nRendering.prototype.tick = function (dt) {\n    // nothing here at the moment\n}\n\n\n\n\n/** @internal */\nRendering.prototype.render = function () {\n    profile_hook('start')\n    updateCameraForRender(this)\n    profile_hook('updateCamera')\n    this.engine.beginFrame()\n    profile_hook('beginFrame')\n    this.scene.render()\n    profile_hook('render')\n    fps_hook()\n    this.engine.endFrame()\n    profile_hook('endFrame')\n    profile_hook('end')\n}\n\n\n/** @internal */\nRendering.prototype.postRender = function () {\n    // nothing currently\n}\n\n\n/** @internal */\nRendering.prototype.resize = function () {\n    this.engine.resize()\n    if (this.noa._paused && this.renderOnResize) {\n        this.scene.render()\n    }\n}\n\n\n/** @internal */\nRendering.prototype.highlightBlockFace = function (show, posArr, normArr) {\n    var m = getHighlightMesh(this)\n    if (show) {\n        // floored local coords for highlight mesh\n        this.noa.globalToLocal(posArr, null, hlpos)\n        // offset to avoid z-fighting, bigger when camera is far away\n        var dist = glvec3.dist(this.noa.camera._localGetPosition(), hlpos)\n        var slop = 0.001 + 0.001 * dist\n        for (var i = 0; i < 3; i++) {\n            if (normArr[i] === 0) {\n                hlpos[i] += 0.5\n            } else {\n                hlpos[i] += (normArr[i] > 0) ? 1 + slop : -slop\n            }\n        }\n        m.position.copyFromFloats(hlpos[0], hlpos[1], hlpos[2])\n        m.rotation.x = (normArr[1]) ? Math.PI / 2 : 0\n        m.rotation.y = (normArr[0]) ? Math.PI / 2 : 0\n    }\n    m.setEnabled(show)\n}\nvar hlpos = []\n\n\n\n\n/**\n * Adds a mesh to the engine's selection/octree logic so that it renders.\n * \n * @param mesh the mesh to add to the scene\n * @param isStatic pass in true if mesh never moves (i.e. never changes chunks)\n * @param pos (optional) global position where the mesh should be\n * @param containingChunk (optional) chunk to which the mesh is statically bound\n */\nRendering.prototype.addMeshToScene = function (mesh, isStatic = false, pos = null, containingChunk = null) {\n    if (!mesh.metadata) mesh.metadata = {}\n\n    // if mesh is already added, just make sure it's visisble\n    if (mesh.metadata[addedToSceneFlag]) {\n        this._octreeManager.setMeshVisibility(mesh, true)\n        return\n    }\n    mesh.metadata[addedToSceneFlag] = true\n\n    // find local position for mesh and move it there (unless it's parented)\n    if (!mesh.parent) {\n        if (!pos) pos = mesh.position.asArray()\n        var lpos = this.noa.globalToLocal(pos, null, [])\n        mesh.position.fromArray(lpos)\n    }\n\n    // add to the octree, and remove again on disposal\n    this._octreeManager.addMesh(mesh, isStatic, pos, containingChunk)\n    mesh.onDisposeObservable.add(() => {\n        this._octreeManager.removeMesh(mesh)\n        mesh.metadata[addedToSceneFlag] = false\n    })\n}\nvar addedToSceneFlag = 'noa_added_to_scene'\n\n\n\n\n/**\n * Use this to toggle the visibility of a mesh without disposing it or\n * removing it from the scene.\n * \n * @param {import('@babylonjs/core/Meshes').Mesh} mesh\n * @param {boolean} visible\n */\nRendering.prototype.setMeshVisibility = function (mesh, visible = false) {\n    if (!mesh.metadata) mesh.metadata = {}\n    if (mesh.metadata[addedToSceneFlag]) {\n        this._octreeManager.setMeshVisibility(mesh, visible)\n    } else {\n        if (visible) this.addMeshToScene(mesh)\n    }\n}\n\n\n\n\n\n\n\n\n/**\n * Create a default standardMaterial:      \n * flat, nonspecular, fully reflects diffuse and ambient light\n * @returns {StandardMaterial}\n */\nRendering.prototype.makeStandardMaterial = function (name) {\n    var mat = new StandardMaterial(name, this.scene)\n    mat.specularColor.copyFromFloats(0, 0, 0)\n    mat.ambientColor.copyFromFloats(1, 1, 1)\n    mat.diffuseColor.copyFromFloats(1, 1, 1)\n    return mat\n}\n\n\n\n\n\n\n\n/*\n *\n *   INTERNALS\n *\n */\n\n\n\n\n\n/*\n *\n * \n *   ACCESSORS FOR CHUNK ADD/REMOVAL/MESHING\n *\n * \n */\n/** @internal */\nRendering.prototype.prepareChunkForRendering = function (chunk) {\n    // currently no logic needed here, but I may need it again...\n}\n\n/** @internal */\nRendering.prototype.disposeChunkForRendering = function (chunk) {\n    // nothing currently\n}\n\n\n\n\n\n\n// change world origin offset, and rebase everything with a position\n/** @internal */\nRendering.prototype._rebaseOrigin = function (delta) {\n    var dvec = new Vector3(delta[0], delta[1], delta[2])\n\n    this.scene.meshes.forEach(mesh => {\n        // parented meshes don't live in the world coord system\n        if (mesh.parent) return\n\n        // move each mesh by delta (even though most are managed by components)\n        mesh.position.subtractInPlace(dvec)\n\n        if (mesh.isWorldMatrixFrozen) {\n            // paradoxically this unfreezes, then re-freezes the matrix\n            mesh.freezeWorldMatrix()\n        }\n    })\n\n    // updates position of all octree blocks\n    this._octreeManager.rebase(dvec)\n}\n\n\n\n\n\n// updates camera position/rotation to match settings from noa.camera\n\nfunction updateCameraForRender(self) {\n    var cam = self.noa.camera\n    var tgtLoc = cam._localGetTargetPosition()\n    self._cameraHolder.position.copyFromFloats(tgtLoc[0], tgtLoc[1], tgtLoc[2])\n    self._cameraHolder.rotation.x = cam.pitch\n    self._cameraHolder.rotation.y = cam.heading\n    self.camera.position.z = -cam.currentZoom\n\n    // applies screen effect when camera is inside a transparent voxel\n    var cloc = cam._localGetPosition()\n    var off = self.noa.worldOriginOffset\n    var cx = Math.floor(cloc[0] + off[0])\n    var cy = Math.floor(cloc[1] + off[1])\n    var cz = Math.floor(cloc[2] + off[2])\n    var id = self.noa.getBlock(cx, cy, cz)\n    checkCameraEffect(self, id)\n}\n\n\n\n//  If camera's current location block id has alpha color (e.g. water), apply/remove an effect\n\nfunction checkCameraEffect(self, id) {\n    if (id === self._camLocBlock) return\n    if (id === 0) {\n        self._camScreen.setEnabled(false)\n    } else {\n        var matId = self.noa.registry.getBlockFaceMaterial(id, 0)\n        if (matId) {\n            var matData = self.noa.registry.getMaterialData(matId)\n            var col = matData.color\n            var alpha = matData.alpha\n            if (col && alpha && alpha < 1) {\n                self._camScreenMat.diffuseColor.set(0, 0, 0)\n                self._camScreenMat.ambientColor.set(col[0], col[1], col[2])\n                self._camScreenMat.alpha = alpha\n                self._camScreen.setEnabled(true)\n            }\n        }\n    }\n    self._camLocBlock = id\n}\n\n\n\n\n\n\n// make or get a mesh for highlighting active voxel\nfunction getHighlightMesh(rendering) {\n    var mesh = rendering._highlightMesh\n    if (!mesh) {\n        mesh = CreatePlane(\"highlight\", { size: 1.0 }, rendering.scene)\n        var hlm = rendering.makeStandardMaterial('block_highlight_mat')\n        hlm.backFaceCulling = false\n        hlm.emissiveColor = new Color3(1, 1, 1)\n        hlm.alpha = 0.2\n        hlm.freeze()\n        mesh.material = hlm\n\n        // outline\n        var s = 0.5\n        var lines = CreateLines(\"hightlightLines\", {\n            points: [\n                new Vector3(s, s, 0),\n                new Vector3(s, -s, 0),\n                new Vector3(-s, -s, 0),\n                new Vector3(-s, s, 0),\n                new Vector3(s, s, 0)\n            ]\n        }, rendering.scene)\n        lines.color = new Color3(1, 1, 1)\n        lines.parent = mesh\n\n        rendering.addMeshToScene(mesh)\n        rendering.addMeshToScene(lines)\n        rendering._highlightMesh = mesh\n    }\n    return mesh\n}\n\n\n\n\n\n\n\n\n\n\n/*\n * \n *      sanity checks:\n * \n */\n/** @internal */\nRendering.prototype.debug_SceneCheck = function () {\n    var meshes = this.scene.meshes\n    var octree = this.scene._selectionOctree\n    var dyns = octree.dynamicContent\n    var octs = []\n    var numOcts = 0\n    var numSubs = 0\n    var mats = this.scene.materials\n    var allmats = []\n    mats.forEach(mat => {\n        // @ts-ignore\n        if (mat.subMaterials) mat.subMaterials.forEach(mat => allmats.push(mat))\n        else allmats.push(mat)\n    })\n    octree.blocks.forEach(function (block) {\n        numOcts++\n        block.entries.forEach(m => octs.push(m))\n    })\n    meshes.forEach(function (m) {\n        if (m.isDisposed()) warn(m, 'disposed mesh in scene')\n        if (empty(m)) return\n        if (missing(m, dyns, octs)) warn(m, 'non-empty mesh missing from octree')\n        if (!m.material) { warn(m, 'non-empty scene mesh with no material'); return }\n        numSubs += (m.subMeshes) ? m.subMeshes.length : 1\n        // @ts-ignore\n        var mats = m.material.subMaterials || [m.material]\n        mats.forEach(function (mat) {\n            if (missing(mat, mats)) warn(mat, 'mesh material not in scene')\n        })\n    })\n    var unusedMats = []\n    allmats.forEach(mat => {\n        var used = false\n        meshes.forEach(mesh => {\n            if (mesh.material === mat) used = true\n            if (!mesh.material) return\n            // @ts-ignore\n            var mats = mesh.material.subMaterials || [mesh.material]\n            if (mats.includes(mat)) used = true\n        })\n        if (!used) unusedMats.push(mat.name)\n    })\n    if (unusedMats.length) {\n        console.warn('Materials unused by any mesh: ', unusedMats.join(', '))\n    }\n    dyns.forEach(function (m) {\n        if (missing(m, meshes)) warn(m, 'octree/dynamic mesh not in scene')\n    })\n    octs.forEach(function (m) {\n        if (missing(m, meshes)) warn(m, 'octree block mesh not in scene')\n    })\n    var avgPerOct = Math.round(10 * octs.length / numOcts) / 10\n    console.log('meshes - octree:', octs.length, '  dynamic:', dyns.length,\n        '   subMeshes:', numSubs,\n        '   avg meshes/octreeBlock:', avgPerOct)\n\n    function warn(obj, msg) { console.warn(obj.name + ' --- ' + msg) }\n\n    function empty(mesh) { return (mesh.getIndices().length === 0) }\n\n    function missing(obj, list1, list2) {\n        if (!obj) return false\n        if (list1.includes(obj)) return false\n        if (list2 && list2.includes(obj)) return false\n        return true\n    }\n    return 'done.'\n}\n\n\n/** @internal */\nRendering.prototype.debug_MeshCount = function () {\n    var ct = {}\n    this.scene.meshes.forEach(m => {\n        var n = m.name || ''\n        n = n.replace(/-\\d+.*/, '#')\n        n = n.replace(/\\d+.*/, '#')\n        n = n.replace(/(rotHolder|camHolder|camScreen)/, 'rendering use')\n        n = n.replace(/atlas sprite .*/, 'atlas sprites')\n        ct[n] = ct[n] || 0\n        ct[n]++\n    })\n    for (var s in ct) console.log('   ' + (ct[s] + '       ').substr(0, 7) + s)\n}\n\n\n\n\n\n\n\nvar profile_hook = (PROFILE) ?\n    makeProfileHook(200, 'render internals') : () => { }\n\n\n\nvar fps_hook = function () { }\n\nfunction setUpFPS() {\n    var div = document.createElement('div')\n    div.id = 'noa_fps'\n    div.style.position = 'absolute'\n    div.style.top = '0'\n    div.style.right = '0'\n    div.style.zIndex = '0'\n    div.style.color = 'white'\n    div.style.backgroundColor = 'rgba(0,0,0,0.5)'\n    div.style.font = '14px monospace'\n    div.style.textAlign = 'center'\n    div.style.minWidth = '2em'\n    div.style.margin = '4px'\n    document.body.appendChild(div)\n    var every = 1000\n    var ct = 0\n    var longest = 0\n    var start = performance.now()\n    var last = start\n    fps_hook = function () {\n        ct++\n        var nt = performance.now()\n        if (nt - last > longest) longest = nt - last\n        last = nt\n        if (nt - start < every) return\n        var fps = Math.round(ct / (nt - start) * 1000)\n        var min = Math.round(1 / longest * 1000)\n        div.innerHTML = fps + '<br>' + min\n        ct = 0\n        longest = 0\n        start = nt\n    }\n}\n", "\nimport { Vector3 } from '@babylonjs/core/Maths/math.vector'\nimport { Octree } from '@babylonjs/core/Culling/Octrees/octree'\nimport { OctreeBlock } from '@babylonjs/core/Culling/Octrees/octreeBlock'\nimport { OctreeSceneComponent } from '@babylonjs/core/Culling/Octrees/octreeSceneComponent'\n\nimport { locationHasher, removeUnorderedListItem } from './util'\n\n\n/*\n * \n * \n * \n *          simple class to manage scene octree and octreeBlocks\n * \n * \n * \n*/\n\n/** @internal */\nexport class SceneOctreeManager {\n\n    /** @internal */\n    constructor(rendering, blockSize) {\n        var scene = rendering.scene\n        scene._addComponent(new OctreeSceneComponent(scene))\n\n        // mesh metadata flags\n        var octreeBlock = 'noa_octree_block'\n        var inDynamicList = 'noa_in_dynamic_list'\n        var inOctreeBlock = 'noa_in_octree_block'\n\n        // the root octree object\n        var octree = new Octree(NOP)\n        scene._selectionOctree = octree\n        octree.blocks = []\n        var octBlocksHash = {}\n\n\n        /*\n         * \n         *          public API\n         * \n        */\n\n        this.rebase = (offset) => { recurseRebaseBlocks(octree, offset) }\n\n        this.addMesh = (mesh, isStatic, pos, chunk) => {\n            if (!mesh.metadata) mesh.metadata = {}\n\n            // dynamic content is just rendered from a list on the octree\n            if (!isStatic) {\n                if (mesh.metadata[inDynamicList]) return\n                octree.dynamicContent.push(mesh)\n                mesh.metadata[inDynamicList] = true\n                return\n            }\n\n            // octreeBlock-space integer coords of mesh position, and hashed key\n            var ci = Math.floor(pos[0] / bs)\n            var cj = Math.floor(pos[1] / bs)\n            var ck = Math.floor(pos[2] / bs)\n            var mapKey = locationHasher(ci, cj, ck)\n\n            // get or create octreeBlock\n            var block = octBlocksHash[mapKey]\n            if (!block) {\n                // lower corner of new octree block position, in global/local\n                var gloc = [ci * bs, cj * bs, ck * bs]\n                var loc = [0, 0, 0]\n                rendering.noa.globalToLocal(gloc, null, loc)\n                // make the new octree block and store it\n                block = makeOctreeBlock(loc, bs)\n                octree.blocks.push(block)\n                octBlocksHash[mapKey] = block\n                block._noaMapKey = mapKey\n            }\n\n            // do the actual adding logic\n            block.entries.push(mesh)\n            mesh.metadata[octreeBlock] = block\n            mesh.metadata[inOctreeBlock] = true\n\n            // rely on octrees for selection, skipping bounds checks\n            mesh.alwaysSelectAsActiveMesh = true\n        }\n\n\n\n        this.removeMesh = (mesh) => {\n            if (!mesh.metadata) return\n\n            if (mesh.metadata[inDynamicList]) {\n                removeUnorderedListItem(octree.dynamicContent, mesh)\n                mesh.metadata[inDynamicList] = false\n            }\n            if (mesh.metadata[inOctreeBlock]) {\n                var block = mesh.metadata[octreeBlock]\n                if (block && block.entries) {\n                    removeUnorderedListItem(block.entries, mesh)\n                    if (block.entries.length === 0) {\n                        delete octBlocksHash[block._noaMapKey]\n                        removeUnorderedListItem(octree.blocks, block)\n                    }\n                }\n                mesh.metadata[octreeBlock] = null\n                mesh.metadata[inOctreeBlock] = false\n            }\n        }\n\n\n\n        // experimental helper\n        this.setMeshVisibility = (mesh, visible = false) => {\n            if (mesh.metadata[octreeBlock]) {\n                // mesh is static\n                if (mesh.metadata[inOctreeBlock] === visible) return\n                var block = mesh.metadata[octreeBlock]\n                if (block && block.entries) {\n                    if (visible) {\n                        block.entries.push(mesh)\n                    } else {\n                        removeUnorderedListItem(block.entries, mesh)\n                    }\n                }\n                mesh.metadata[inOctreeBlock] = visible\n            } else {\n                // mesh is dynamic\n                if (mesh.metadata[inDynamicList] === visible) return\n                if (visible) {\n                    octree.dynamicContent.push(mesh)\n                } else {\n                    removeUnorderedListItem(octree.dynamicContent, mesh)\n                }\n                mesh.metadata[inDynamicList] = visible\n            }\n        }\n\n        /*\n         * \n         *          internals\n         * \n        */\n\n        var NOP = () => { }\n        var bs = blockSize * rendering.noa.world._chunkSize\n\n        var recurseRebaseBlocks = (parent, offset) => {\n            parent.blocks.forEach(child => {\n                child.minPoint.subtractInPlace(offset)\n                child.maxPoint.subtractInPlace(offset)\n                child._boundingVectors.forEach(v => v.subtractInPlace(offset))\n                if (child.blocks) recurseRebaseBlocks(child, offset)\n            })\n        }\n\n        var makeOctreeBlock = (minPt, size) => {\n            var min = new Vector3(minPt[0], minPt[1], minPt[2])\n            var max = new Vector3(minPt[0] + size, minPt[1] + size, minPt[2] + size)\n            return new OctreeBlock(min, max, undefined, undefined, undefined, NOP)\n        }\n\n    }\n\n}\n", "\nimport aabb from 'aabb-3d'\nimport vec3 from 'gl-vec3'\nimport sweep from 'voxel-aabb-sweep'\n\nimport { RigidBody } from './rigidBody'\nexport { RigidBody }\n\n\nvar DEBUG = 0\n\n\nexport function DefaultOptions() {\n    this.airDrag = 0.1\n    this.fluidDrag = 0.4\n    this.fluidDensity = 2.0\n    this.gravity = [0, -10, 0]\n    this.minBounceImpulse = .5 // lowest collision impulse that bounces\n}\n\n\n\n\n/**\n *          Voxel Physics Engine\n * \n * Models a world of rigid bodies, to be integrated against\n * solid or liquid voxel terrain.\n * \n * Takes `testSolid(x,y,z)` function to query block solidity\n * Takes `testFluid(x,y,z)` function to query if a block is a fluid\n *  \n * The `options` argument can take the following params:\n * \n * ```js\n * {\n *     airDrag: 0.1,\n *     fluidDrag: 0.4,\n *     fluidDensity: 2.0,\n *     gravity: [0, -10, 0],\n *     minBounceImpulse: .5, // lowest collision impulse that bounces\n * }\n * ```\n * \n * @param {(x:number, y:number, z:number) => boolean} testSolid\n * @param {(x:number, y:number, z:number) => boolean} testFluid\n * \n*/\nexport function Physics(opts, testSolid, testFluid) {\n    opts = Object.assign(new DefaultOptions(), opts)\n\n    this.gravity = opts.gravity || [0, -10, 0]\n    this.airDrag = opts.airDrag || 0.1\n    this.fluidDensity = opts.fluidDensity || 2.0\n    this.fluidDrag = opts.fluidDrag || 0.4\n    this.minBounceImpulse = opts.minBounceImpulse\n    this.bodies = []\n\n    // collision function - TODO: abstract this into a setter?\n    this.testSolid = testSolid\n    this.testFluid = testFluid\n}\n\n\n/** \n * Adds a physics body to the simulation\n * @returns {RigidBody}\n*/\nPhysics.prototype.addBody = function (_aabb, mass, friction,\n    restitution, gravMult, onCollide) {\n    _aabb = _aabb || new aabb([0, 0, 0], [1, 1, 1])\n    if (typeof mass == 'undefined') mass = 1\n    if (typeof friction == 'undefined') friction = 1\n    if (typeof restitution == 'undefined') restitution = 0\n    if (typeof gravMult == 'undefined') gravMult = 1\n    var b = new RigidBody(_aabb, mass, friction, restitution, gravMult, onCollide)\n    this.bodies.push(b)\n    return b\n}\n\n/** Removes a body, by direct reference */\nPhysics.prototype.removeBody = function (b) {\n    var i = this.bodies.indexOf(b)\n    if (i < 0) return undefined\n    this.bodies.splice(i, 1)\n    b.aabb = b.onCollide = null\n}\n\n\n\n\n/*\n *    PHYSICS AND COLLISIONS\n*/\n\nvar a = vec3.create()\nvar dv = vec3.create()\nvar dx = vec3.create()\nvar impacts = vec3.create()\nvar oldResting = vec3.create()\n\n\n/* Ticks the simulation forwards in time. */\nPhysics.prototype.tick = function (dt) {\n    // convert dt to seconds\n    dt = dt / 1000\n    var noGravity = equals(0, vec3.squaredLength(this.gravity))\n    this.bodies.forEach(b => iterateBody(this, b, dt, noGravity))\n}\n\n\n\n/*\n *    PER-BODY MAIN PHYSICS ROUTINE\n*/\n\nfunction iterateBody(self, b, dt, noGravity) {\n    vec3.copy(oldResting, b.resting)\n\n    // treat bodies with <= mass as static\n    if (b.mass <= 0) {\n        vec3.set(b.velocity, 0, 0, 0)\n        vec3.set(b._forces, 0, 0, 0)\n        vec3.set(b._impulses, 0, 0, 0)\n        return\n    }\n\n    // skip bodies if static or no velocity/forces/impulses\n    var localNoGrav = noGravity || (b.gravityMultiplier === 0)\n    if (bodyAsleep(self, b, dt, localNoGrav)) return\n    b._sleepFrameCount--\n\n    // check if under water, if so apply buoyancy and drag forces\n    applyFluidForces(self, b)\n\n    // debug hooks\n    sanityCheck(b._forces)\n    sanityCheck(b._impulses)\n    sanityCheck(b.velocity)\n    sanityCheck(b.resting)\n\n    // semi-implicit Euler integration\n\n    // a = f/m + gravity*gravityMultiplier\n    vec3.scale(a, b._forces, 1 / b.mass)\n    vec3.scaleAndAdd(a, a, self.gravity, b.gravityMultiplier)\n\n    // dv = i/m + a*dt\n    // v1 = v0 + dv\n    vec3.scale(dv, b._impulses, 1 / b.mass)\n    vec3.scaleAndAdd(dv, dv, a, dt)\n    vec3.add(b.velocity, b.velocity, dv)\n\n    // apply friction based on change in velocity this frame\n    if (b.friction) {\n        applyFrictionByAxis(0, b, dv)\n        applyFrictionByAxis(1, b, dv)\n        applyFrictionByAxis(2, b, dv)\n    }\n\n    // linear air or fluid friction - effectively v *= drag\n    // body settings override global settings\n    var drag = (b.airDrag >= 0) ? b.airDrag : self.airDrag\n    if (b.inFluid) {\n        drag = (b.fluidDrag >= 0) ? b.fluidDrag : self.fluidDrag\n        drag *= 1 - (1 - b.ratioInFluid) ** 2\n    }\n    var mult = Math.max(1 - drag * dt / b.mass, 0)\n    vec3.scale(b.velocity, b.velocity, mult)\n\n    // x1-x0 = v1*dt\n    vec3.scale(dx, b.velocity, dt)\n\n    // clear forces and impulses for next timestep\n    vec3.set(b._forces, 0, 0, 0)\n    vec3.set(b._impulses, 0, 0, 0)\n\n    // cache old position for use in autostepping\n    if (b.autoStep) {\n        cloneAABB(tmpBox, b.aabb)\n    }\n\n    // sweeps aabb along dx and accounts for collisions\n    processCollisions(self, b.aabb, dx, b.resting)\n\n    // if autostep, and on ground, run collisions again with stepped up aabb\n    if (b.autoStep) {\n        tryAutoStepping(self, b, tmpBox, dx)\n    }\n\n    // Collision impacts. b.resting shows which axes had collisions:\n    for (var i = 0; i < 3; ++i) {\n        impacts[i] = 0\n        if (b.resting[i]) {\n            // count impact only if wasn't collided last frame\n            if (!oldResting[i]) impacts[i] = -b.velocity[i]\n            b.velocity[i] = 0\n        }\n    }\n    var mag = vec3.length(impacts)\n    if (mag > .001) { // epsilon\n        // send collision event - allows client to optionally change\n        // body's restitution depending on what terrain it hit\n        // event argument is impulse J = m * dv\n        vec3.scale(impacts, impacts, b.mass)\n        if (b.onCollide) b.onCollide(impacts)\n\n        // bounce depending on restitution and minBounceImpulse\n        if (b.restitution > 0 && mag > self.minBounceImpulse) {\n            vec3.scale(impacts, impacts, b.restitution)\n            b.applyImpulse(impacts)\n        }\n    }\n\n\n    // sleep check\n    var vsq = vec3.squaredLength(b.velocity)\n    if (vsq > 1e-5) b._markActive()\n}\n\n\n\n\n\n\n\n\n/*\n *    FLUIDS\n*/\n\nfunction applyFluidForces(self, body) {\n    // First pass at handling fluids. Assumes fluids are settled\n    //   thus, only check at corner of body, and only from bottom up\n    var box = body.aabb\n    var cx = Math.floor(box.base[0])\n    var cz = Math.floor(box.base[2])\n    var y0 = Math.floor(box.base[1])\n    var y1 = Math.floor(box.max[1])\n\n    if (!self.testFluid(cx, y0, cz)) {\n        body.inFluid = false\n        body.ratioInFluid = 0\n        return\n    }\n\n    // body is in a fluid - find out how much of body is submerged\n    var submerged = 1\n    var cy = y0 + 1\n    while (cy <= y1 && self.testFluid(cx, cy, cz)) {\n        submerged++\n        cy++\n    }\n    var fluidLevel = y0 + submerged\n    var heightInFluid = fluidLevel - box.base[1]\n    var ratioInFluid = heightInFluid / box.vec[1]\n    if (ratioInFluid > 1) ratioInFluid = 1\n    var vol = box.vec[0] * box.vec[1] * box.vec[2]\n    var displaced = vol * ratioInFluid\n    // bouyant force = -gravity * fluidDensity * volumeDisplaced\n    var f = _fluidVec\n    vec3.scale(f, self.gravity, -self.fluidDensity * displaced)\n    body.applyForce(f)\n\n    body.inFluid = true\n    body.ratioInFluid = ratioInFluid\n}\n\nvar _fluidVec = vec3.create()\n\n\n\n\n\n/*\n *    FRICTION\n*/\n\n\nfunction applyFrictionByAxis(axis, body, dvel) {\n    // friction applies only if moving into a touched surface\n    var restDir = body.resting[axis]\n    var vNormal = dvel[axis]\n    if (restDir === 0) return\n    if (restDir * vNormal <= 0) return\n\n    // current vel lateral to friction axis\n    vec3.copy(lateralVel, body.velocity)\n    lateralVel[axis] = 0\n    var vCurr = vec3.length(lateralVel)\n    if (equals(vCurr, 0)) return\n\n    // treat current change in velocity as the result of a pseudoforce\n    //        Fpseudo = m*dv/dt\n    // Base friction force on normal component of the pseudoforce\n    //        Ff = u * Fnormal\n    //        Ff = u * m * dvnormal / dt\n    // change in velocity due to friction force\n    //        dvF = dt * Ff / m\n    //            = dt * (u * m * dvnormal / dt) / m\n    //            = u * dvnormal\n    var dvMax = Math.abs(body.friction * vNormal)\n\n    // decrease lateral vel by dvMax (or clamp to zero)\n    var scaler = (vCurr > dvMax) ? (vCurr - dvMax) / vCurr : 0\n    body.velocity[(axis + 1) % 3] *= scaler\n    body.velocity[(axis + 2) % 3] *= scaler\n}\nvar lateralVel = vec3.create()\n\n\n\n\n\n\n/*\n *    COLLISION HANDLER\n*/\n\n// sweep aabb along velocity vector and set resting vector\nfunction processCollisions(self, box, velocity, resting) {\n    vec3.set(resting, 0, 0, 0)\n    return sweep(self.testSolid, box, velocity, function (dist, axis, dir, vec) {\n        resting[axis] = dir\n        vec[axis] = 0\n    })\n}\n\n\n\n\n\n/*\n *    AUTO-STEPPING\n*/\n\nvar tmpBox = new aabb([], [])\nvar tmpResting = vec3.create()\nvar targetPos = vec3.create()\nvar upvec = vec3.create()\nvar leftover = vec3.create()\n\nfunction tryAutoStepping(self, b, oldBox, dx) {\n    if (b.resting[1] >= 0 && !b.inFluid) return\n\n    // // direction movement was blocked before trying a step\n    var xBlocked = (b.resting[0] !== 0)\n    var zBlocked = (b.resting[2] !== 0)\n    if (!(xBlocked || zBlocked)) return\n\n    // continue autostepping only if headed sufficiently into obstruction\n    var ratio = Math.abs(dx[0] / dx[2])\n    var cutoff = 4\n    if (!xBlocked && ratio > cutoff) return\n    if (!zBlocked && ratio < 1 / cutoff) return\n\n    // original target position before being obstructed\n    vec3.add(targetPos, oldBox.base, dx)\n\n    // move towards the target until the first X/Z collision\n    var getVoxels = self.testSolid\n    sweep(getVoxels, oldBox, dx, function (dist, axis, dir, vec) {\n        if (axis === 1) vec[axis] = 0\n        else return true\n    })\n\n    var y = b.aabb.base[1]\n    var ydist = Math.floor(y + 1.001) - y\n    vec3.set(upvec, 0, ydist, 0)\n    var collided = false\n    // sweep up, bailing on any obstruction\n    sweep(getVoxels, oldBox, upvec, function (dist, axis, dir, vec) {\n        collided = true\n        return true\n    })\n    if (collided) return // could't move upwards\n\n    // now move in X/Z however far was left over before hitting the obstruction\n    vec3.subtract(leftover, targetPos, oldBox.base)\n    leftover[1] = 0\n    processCollisions(self, oldBox, leftover, tmpResting)\n\n    // bail if no movement happened in the originally blocked direction\n    if (xBlocked && !equals(oldBox.base[0], targetPos[0])) return\n    if (zBlocked && !equals(oldBox.base[2], targetPos[2])) return\n\n    // done - oldBox is now at the target autostepped position\n    cloneAABB(b.aabb, oldBox)\n    b.resting[0] = tmpResting[0]\n    b.resting[2] = tmpResting[2]\n    if (b.onStep) b.onStep()\n}\n\n\n\n\n\n/*\n *    SLEEP CHECK\n*/\n\nfunction bodyAsleep(self, body, dt, noGravity) {\n    if (body._sleepFrameCount > 0) return false\n    // without gravity bodies stay asleep until a force/impulse wakes them up\n    if (noGravity) return true\n    // otherwise check body is resting against something\n    // i.e. sweep along by distance d = 1/2 g*t^2\n    // and check there's still a collision\n    var isResting = false\n    var gmult = 0.5 * dt * dt * body.gravityMultiplier\n    vec3.scale(sleepVec, self.gravity, gmult)\n    sweep(self.testSolid, body.aabb, sleepVec, function () {\n        isResting = true\n        return true\n    }, true)\n    return isResting\n}\nvar sleepVec = vec3.create()\n\n\n\n\n\nfunction equals(a, b) { return Math.abs(a - b) < 1e-5 }\n\nfunction cloneAABB(tgt, src) {\n    for (var i = 0; i < 3; i++) {\n        tgt.base[i] = src.base[i]\n        tgt.max[i] = src.max[i]\n        tgt.vec[i] = src.vec[i]\n    }\n}\n\n\n\nvar sanityCheck = function (v) { }\nif (DEBUG) sanityCheck = function (v) {\n    if (isNaN(vec3.length(v))) throw 'Vector with NAN: ' + v\n}\n", "\nimport aabb from 'aabb-3d'\nimport vec3 from 'gl-vec3'\n\nvar DEBUG = 0\n\n\n\n/*\n *    RIGID BODY - internal data structure\n *  Only AABB bodies right now. Someday will likely need spheres?\n*/\n\nexport class RigidBody {\n    constructor(_aabb, mass, friction, restitution, gravMult, onCollide, autoStep) {\n        this.aabb = new aabb(_aabb.base, _aabb.vec) // clone\n        this.mass = mass\n        this.friction = friction\n        this.restitution = restitution\n        this.gravityMultiplier = gravMult\n        this.onCollide = onCollide\n        this.autoStep = !!autoStep\n        this.airDrag = -1   // overrides global airDrag when >= 0\n        this.fluidDrag = -1 // overrides global fluidDrag when >= 0\n        this.onStep = null\n\n        // internal state\n        this.velocity = vec3.create()\n        this.resting = [0, 0, 0]\n        this.inFluid = false\n\n        // internals\n        /** @internal */\n        this._ratioInFluid = 0\n        /** @internal */\n        this._forces = vec3.create()\n        /** @internal */\n        this._impulses = vec3.create()\n        /** @internal */\n        this._sleepFrameCount = 10 | 0\n    }\n\n    setPosition(p) {\n        sanityCheck(p)\n        vec3.subtract(p, p, this.aabb.base)\n        this.aabb.translate(p)\n        this._markActive()\n    }\n    getPosition() {\n        return vec3.clone(this.aabb.base)\n    }\n    applyForce(f) {\n        sanityCheck(f)\n        vec3.add(this._forces, this._forces, f)\n        this._markActive()\n    }\n    applyImpulse(i) {\n        sanityCheck(i)\n        vec3.add(this._impulses, this._impulses, i)\n        this._markActive()\n    }\n\n    /** @internal */\n    _markActive() {\n        this._sleepFrameCount = 10 | 0\n    }\n\n\n\n    // temp\n    atRestX() { return this.resting[0] }\n    atRestY() { return this.resting[1] }\n    atRestZ() { return this.resting[2] }\n}\n\n\n\n\nvar sanityCheck = (v) => { }\nif (DEBUG) sanityCheck = (v) => {\n    if (isNaN(vec3.length(v))) throw 'Vector with NAN: ' + v\n}\n", "\nimport { Physics as VoxelPhysics } from 'voxel-physics-engine'\n\n\n\n\nvar defaultOptions = {\n    gravity: [0, -10, 0],\n    airDrag: 0.1,\n}\n\n/**\n * `noa.physics` - Wrapper module for the physics engine.\n * \n * This module extends \n * [voxel-physics-engine](https://github.com/fenomas/voxel-physics-engine),\n * so turn on \"Inherited\" to see its APIs here, or view the base module \n * for full docs.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * \n * ```js\n * {\n *     gravity: [0, -10, 0],\n *     airDrag: 0.1,\n *     fluidDrag: 0.4,\n *     fluidDensity: 2.0,\n *     minBounceImpulse: .5,      // cutoff for a bounce to occur\n * }\n * ```\n*/\n\nexport class Physics extends VoxelPhysics {\n\n    /** \n     * @internal \n     * @param {import('../index').Engine} noa\n    */\n    constructor(noa, opts) {\n        opts = Object.assign({}, defaultOptions, opts)\n        var world = noa.world\n        var solidLookup = noa.registry._solidityLookup\n        var fluidLookup = noa.registry._fluidityLookup\n\n        // physics engine runs in offset coords, so voxel getters need to match\n        var offset = noa.worldOriginOffset\n\n        var blockGetter = (x, y, z) => {\n            var id = world.getBlockID(x + offset[0], y + offset[1], z + offset[2])\n            return solidLookup[id]\n        }\n        var isFluidGetter = (x, y, z) => {\n            var id = world.getBlockID(x + offset[0], y + offset[1], z + offset[2])\n            return fluidLookup[id]\n        }\n\n        super(opts, blockGetter, isFluidGetter)\n    }\n\n}\n\n\n\n", "\nimport EventEmitter from 'events'\nimport { Chunk } from './chunk'\nimport { LocationQueue, ChunkStorage, locationHasher } from './util'\n\nvar PROFILE_EVERY = 0               // ticks\nvar PROFILE_QUEUES_EVERY = 0        // ticks\n\n\n\n\n\n\nvar defaultOptions = {\n    chunkSize: 24,\n    chunkAddDistance: [2, 2],           // [horizontal, vertical]\n    chunkRemoveDistance: [3, 3],        // [horizontal, vertical]\n    worldGenWhilePaused: false,\n    manuallyControlChunkLoading: false,\n}\n\n/**\n * `noa.world` - manages world data, chunks, voxels.\n * \n * This module uses the following default options (from the options\n * object passed to the {@link Engine}):\n * ```js\n * var defaultOptions = {\n *   chunkSize: 24,\n *   chunkAddDistance: [2, 2],           // [horizontal, vertical]\n *   chunkRemoveDistance: [3, 3],        // [horizontal, vertical]\n *   worldGenWhilePaused: false,\n *   manuallyControlChunkLoading: false,\n * }\n * ```\n * \n * **Events:**\n *  + `worldDataNeeded = (requestID, dataArr, x, y, z, worldName)`  \n *    Alerts client that a new chunk of world data is needed.\n *  + `playerEnteredChunk => (i, j, k)`    \n *    Fires when player enters a new chunk\n *  + `chunkAdded => (chunk)`  \n *    Fires after a new chunk object is added to the world\n *  + `chunkBeingRemoved = (requestID, dataArr, userData)`  \n *    Fires before a chunk is removed from world\n*/\nexport class World extends EventEmitter {\n\n    /** @internal */\n    constructor(noa, opts) {\n        super()\n        opts = Object.assign({}, defaultOptions, opts)\n        /** @internal */\n        this.noa = noa\n\n        /** @internal */\n        this.playerChunkLoaded = false\n\n        /** @internal */\n        this.Chunk = Chunk // expose this class for ...reasons\n\n        /**\n         * Game clients should set this if they need to manually control \n         * which chunks to load and unload. When set, client should call \n         * `noa.world.manuallyLoadChunk` / `manuallyUnloadChunk` as needed.\n         */\n        this.manuallyControlChunkLoading = !!opts.manuallyControlChunkLoading\n\n        /**\n         * Defining this function sets a custom order in which to create chunks.\n         * The function should look like:\n         * ```js\n         *   (i, j, k) => 1 // return a smaller number for chunks to process first\n         * ```\n         */\n        this.chunkSortingDistFn = defaultSortDistance\n\n        /**\n         * Set this higher to cause chunks not to mesh until they have some neighbors.\n         * Max legal value is 26 (each chunk will mesh only when all neighbors are present)\n         */\n        this.minNeighborsToMesh = 6\n\n        /** When true, worldgen queues will keep running if engine is paused. */\n        this.worldGenWhilePaused = !!opts.worldGenWhilePaused\n\n        /** Limit the size of internal chunk processing queues \n         * @type {number} \n        */\n        this.maxChunksPendingCreation = 50\n\n        /** Limit the size of internal chunk processing queues \n         * @type {number} \n        */\n        this.maxChunksPendingMeshing = 50\n\n        /** Cutoff (in ms) of time spent each **tick** \n         * @type {number}\n        */\n        this.maxProcessingPerTick = 5\n\n        /** Cutoff (in ms) of time spent each **render** \n         * @type {number}\n        */\n        this.maxProcessingPerRender = 3\n\n\n        // set up internal state\n\n\n        /** @internal */\n        this._chunkSize = opts.chunkSize\n        /** @internal */\n        this._chunkAddDistance = [2, 2]\n        /** @internal */\n        this._chunkRemoveDistance = [3, 3]\n        /** @internal */\n        this._addDistanceFn = null\n        /** @internal */\n        this._remDistanceFn = null\n        /** @internal */\n        this._prevWorldName = ''\n        /** @internal */\n        this._prevPlayerChunkHash = 0\n        /** @internal */\n        this._chunkAddSearchFrom = 0\n        /** @internal */\n        this._prevSortingFn = null\n        /** @internal */\n        this._sortMeshQueueEvery = 0\n\n\n        // Init internal chunk queues:\n\n        /** @internal All chunks existing in any queue */\n        this._chunksKnown = new LocationQueue()\n\n        /** @internal in range but not yet requested from client */\n        this._chunksToRequest = new LocationQueue()\n        /** @internal known to have invalid data (wrong world, eg) */\n        this._chunksInvalidated = new LocationQueue()\n        /** @internal out of range, and waiting to be removed */\n        this._chunksToRemove = new LocationQueue()\n\n        /** @internal requested, awaiting data event from client */\n        this._chunksPending = new LocationQueue()\n        /** @internal has data, waiting to be (re-)meshed */\n        this._chunksToMesh = new LocationQueue()\n        /** @internal priority queue for chunks to re-mesh */\n        this._chunksToMeshFirst = new LocationQueue()\n\n        /** \n         * @internal A queue of chunk locations, rather than chunk references.\n         * Has only the positive 1/16 quadrant, sorted (reverse order!) */\n        this._chunksSortedLocs = new LocationQueue()\n\n        // validate add/remove sizes through a setter that clients can use later\n        this.setAddRemoveDistance(opts.chunkAddDistance, opts.chunkRemoveDistance)\n\n        // chunks stored in a data structure for quick lookup\n        // note that the hash wraps around every 1024 chunk indexes!!\n        // i.e. two chunks that far apart can't be loaded at the same time\n        /** @internal */\n        this._storage = new ChunkStorage()\n\n        // coordinate converter functions - default versions first:\n        var cs = this._chunkSize\n        /** @internal */\n        this._coordsToChunkIndexes = chunkCoordsToIndexesGeneral\n        /** @internal */\n        this._coordsToChunkLocals = chunkCoordsToLocalsGeneral\n\n        // when chunk size is a power of two, override with bit-twiddling:\n        var powerOfTwo = ((cs & cs - 1) === 0)\n        if (powerOfTwo) {\n            /** @internal */\n            this._coordShiftBits = Math.log2(cs) | 0\n            /** @internal */\n            this._coordMask = (cs - 1) | 0\n            this._coordsToChunkIndexes = chunkCoordsToIndexesPowerOfTwo\n            this._coordsToChunkLocals = chunkCoordsToLocalsPowerOfTwo\n        }\n    }\n}\n\n\n\n\n\n/*\n *\n *\n *\n *\n *                  PUBLIC API \n *\n *\n *\n *\n*/\n\nWorld.prototype.getBlockID = function (x = 0, y = 0, z = 0) {\n    var [ci, cj, ck] = this._coordsToChunkIndexes(x, y, z)\n    var chunk = this._storage.getChunkByIndexes(ci, cj, ck)\n    if (!chunk) return 0\n    var [i, j, k] = this._coordsToChunkLocals(x, y, z)\n    return chunk.voxels.get(i, j, k)\n}\n\nWorld.prototype.getBlockSolidity = function (x = 0, y = 0, z = 0) {\n    var [ci, cj, ck] = this._coordsToChunkIndexes(x, y, z)\n    var chunk = this._storage.getChunkByIndexes(ci, cj, ck)\n    if (!chunk) return false\n    var [i, j, k] = this._coordsToChunkLocals(x, y, z)\n    return !!chunk.getSolidityAt(i, j, k)\n}\n\nWorld.prototype.getBlockOpacity = function (x = 0, y = 0, z = 0) {\n    var id = this.getBlockID(x, y, z)\n    return this.noa.registry.getBlockOpacity(id)\n}\n\nWorld.prototype.getBlockFluidity = function (x = 0, y = 0, z = 0) {\n    var id = this.getBlockID(x, y, z)\n    return this.noa.registry.getBlockFluidity(id)\n}\n\nWorld.prototype.getBlockProperties = function (x = 0, y = 0, z = 0) {\n    var id = this.getBlockID(x, y, z)\n    return this.noa.registry.getBlockProps(id)\n}\n\n\nWorld.prototype.setBlockID = function (id = 0, x = 0, y = 0, z = 0) {\n    var [ci, cj, ck] = this._coordsToChunkIndexes(x, y, z)\n    var chunk = this._storage.getChunkByIndexes(ci, cj, ck)\n    if (!chunk) return\n    var [i, j, k] = this._coordsToChunkLocals(x, y, z)\n    return chunk.set(i, j, k, id)\n}\n\n\n/** @param box */\nWorld.prototype.isBoxUnobstructed = function (box) {\n    var base = box.base\n    var max = box.max\n    for (var i = Math.floor(base[0]); i < max[0] + 1; i++) {\n        for (var j = Math.floor(base[1]); j < max[1] + 1; j++) {\n            for (var k = Math.floor(base[2]); k < max[2] + 1; k++) {\n                if (this.getBlockSolidity(i, j, k)) return false\n            }\n        }\n    }\n    return true\n}\n\n\n/** \n * Clients should call this after creating a chunk's worth of data (as an ndarray)  \n * If userData is passed in it will be attached to the chunk\n * @param {string} id - the string specified when the chunk was requested \n * @param {*} array - an ndarray of voxel data\n * @param {*} userData - an arbitrary value for game client use\n * @param {number} fillVoxelID - specify a voxel ID here if you want to signify that \n * the entire chunk should be solidly filled with that voxel (e.g. `0` for air). \n * If you do this, the voxel array data will be overwritten and the engine will \n * take a fast path through some initialization steps.\n */\nWorld.prototype.setChunkData = function (id, array, userData = null, fillVoxelID = -1) {\n    setChunkData(this, id, array, userData, fillVoxelID)\n}\n\n\n\n/** \n * Sets the distances within which to load new chunks, and beyond which \n * to unload them. Generally you want the remove distance to be somewhat\n * farther, so that moving back and forth across the same chunk border doesn't\n * keep loading/unloading the same distant chunks.\n * \n * Both arguments can be numbers (number of voxels), or arrays like:\n * `[horiz, vert]` specifying different horizontal and vertical distances.\n * @param {number | number[]} addDist\n * @param {number | number[]} remDist\n */\nWorld.prototype.setAddRemoveDistance = function (addDist = 2, remDist = 3) {\n    var addArr = Array.isArray(addDist) ? addDist : [addDist, addDist]\n    var remArr = Array.isArray(remDist) ? remDist : [remDist, remDist]\n    var minGap = 1\n    if (remArr[0] < addArr[0] + minGap) remArr[0] = addArr[0] + minGap\n    if (remArr[1] < addArr[1] + minGap) remArr[1] = addArr[1] + minGap\n    this._chunkAddDistance = addArr\n    this._chunkRemoveDistance = remArr\n    // rebuild chunk distance functions and add search locations\n    this._addDistanceFn = makeDistanceTestFunction(addArr[0], addArr[1])\n    this._remDistanceFn = makeDistanceTestFunction(remArr[0], remArr[1])\n    this._chunksSortedLocs.empty()\n    // this queue holds only 1/16th the search space: i=0..max, j=0..i, k=0..max\n    for (var i = 0; i <= addArr[0]; i++) {\n        for (var k = 0; k <= i; k++) {\n            for (var j = 0; j <= addArr[1]; j++) {\n                if (!this._addDistanceFn(i, j, k)) continue\n                this._chunksSortedLocs.add(i, j, k)\n            }\n        }\n    }\n    // resets state of nearby chunk search\n    this._prevSortingFn = null\n    this._chunkAddSearchFrom = 0\n}\n\n\n\n\n\n\n/** \n * Tells noa to discard voxel data within a given `AABB` (e.g. because \n * the game client received updated data from a server). \n * The engine will mark all affected chunks for removal, and will later emit \n * new `worldDataNeeded` events (if the chunk is still in draw range).\n */\nWorld.prototype.invalidateVoxelsInAABB = function (box) {\n    invalidateChunksInBox(this, box)\n}\n\n\n/** When manually controlling chunk loading, tells the engine that the \n * chunk containing the specified (x,y,z) needs to be created and loaded.\n * > Note: throws unless `noa.world.manuallyControlChunkLoading` is set.\n * @param x, y, z\n */\nWorld.prototype.manuallyLoadChunk = function (x = 0, y = 0, z = 0) {\n    if (!this.manuallyControlChunkLoading) throw manualErr\n    var [i, j, k] = this._coordsToChunkIndexes(x, y, z)\n    this._chunksKnown.add(i, j, k)\n    this._chunksToRequest.add(i, j, k)\n}\n\n/** When manually controlling chunk loading, tells the engine that the \n * chunk containing the specified (x,y,z) needs to be unloaded and disposed.\n * > Note: throws unless `noa.world.manuallyControlChunkLoading` is set.\n * @param x, y, z\n */\nWorld.prototype.manuallyUnloadChunk = function (x = 0, y = 0, z = 0) {\n    if (!this.manuallyControlChunkLoading) throw manualErr\n    var [i, j, k] = this._coordsToChunkIndexes(x, y, z)\n    this._chunksToRemove.add(i, j, k)\n    this._chunksToMesh.remove(i, j, k)\n    this._chunksToRequest.remove(i, j, k)\n    this._chunksToMeshFirst.remove(i, j, k)\n}\nvar manualErr = 'Set `noa.world.manuallyControlChunkLoading` if you need this API'\n\n\n\n\n/*\n * \n * \n * \n *                  internals:\n * \n *          tick functions that process queues and trigger events\n * \n * \n * \n*/\n\n/** @internal */\nWorld.prototype.tick = function () {\n    var tickStartTime = performance.now()\n\n    // get indexes of player's current chunk, and has it changed since last tick?\n    var [ci, cj, ck] = getPlayerChunkIndexes(this)\n    var chunkLocHash = locationHasher(ci, cj, ck)\n    var changedChunks = (chunkLocHash !== this._prevPlayerChunkHash)\n    if (changedChunks) {\n        this.emit('playerEnteredChunk', ci, cj, ck)\n        this._prevPlayerChunkHash = chunkLocHash\n        this._chunkAddSearchFrom = 0\n    }\n\n    // if world has changed, invalidate everything and ping\n    // removals queue so that player's chunk gets loaded back quickly\n    if (this._prevWorldName !== this.noa.worldName) {\n        if (!this.manuallyControlChunkLoading) {\n            markAllChunksInvalid(this)\n            this._chunkAddSearchFrom = 0\n            processRemoveQueue(this)\n        }\n        this._prevWorldName = this.noa.worldName\n    }\n\n    profile_hook('start')\n    profile_queues_hook('start')\n\n    // scan for chunks to add/remove (unless client handles manually)\n    if (!this.manuallyControlChunkLoading) {\n        findDistantChunksToRemove(this, ci, cj, ck)\n        profile_hook('remQueue')\n        findChunksToRequest(this, ci, cj, ck)\n        profile_hook('addQueue')\n    }\n\n    // possibly scan for additions to meshing queue if it's empty\n    findChunksToMesh(this)\n\n    // process (create or mesh) some chunks, up to max iteration time\n    var t = performance.now()\n    var t1 = tickStartTime + (this.maxProcessingPerTick || 0)\n    if (t < t1) t1 = t + 1\n    var done1 = false\n    var done2 = false\n    var done3 = false\n    while (t < t1) {\n        if (!done1) {\n            done1 = processRemoveQueue(this)\n                || processRemoveQueue(this)\n            profile_hook('removes')\n        }\n        if (!done2) {\n            done2 = processRequestQueue(this)\n            profile_hook('requests')\n        }\n        if (!done3) {\n            done3 = processMeshingQueue(this, false)\n            profile_hook('meshes')\n        }\n        if (done1 && done2 && done3) break\n        t = performance.now()\n    }\n\n    // track whether the player's local chunk is loaded and ready or not\n    var pChunk = this._storage.getChunkByIndexes(ci, cj, ck)\n    this.playerChunkLoaded = !!pChunk\n\n    profile_queues_hook('end', this)\n    profile_hook('end')\n}\n\n\n/** @internal */\nWorld.prototype.render = function () {\n    // on render, quickly process the high-priority meshing queue\n    // to help avoid flashes of background while neighboring chunks update\n    var t = performance.now()\n    var t1 = t + this.maxProcessingPerRender\n    while (t < t1) {\n        var done = processMeshingQueue(this, true)\n        if (done) break\n        t = performance.now()\n    }\n}\n\n\n/** @internal */\nWorld.prototype._getChunkByCoords = function (x = 0, y = 0, z = 0) {\n    // let internal modules request a chunk object\n    var [i, j, k] = this._coordsToChunkIndexes(x, y, z)\n    return this._storage.getChunkByIndexes(i, j, k)\n}\n\n\n\n\n\n\n\n\n\n\n/*\n * \n * \n * \n *              chunk queues and queue processing\n * \n * \n * \n*/\n\n// internal accessor for chunks to queue themeselves for remeshing \n// after their data changes\nWorld.prototype._queueChunkForRemesh = function (chunk) {\n    possiblyQueueChunkForMeshing(this, chunk)\n}\n\n\n\n/** \n * helper - chunk indexes of where the player is\n * @param {World} world \n*/\nfunction getPlayerChunkIndexes(world) {\n    var [x, y, z] = world.noa.entities.getPosition(world.noa.playerEntity)\n    return world._coordsToChunkIndexes(x, y, z)\n}\n\n\n\n\n/** \n * Gradually scan neighborhood chunk locs; add missing ones to \"toRequest\".\n * @param {World} world \n*/\nfunction findChunksToRequest(world, ci, cj, ck) {\n    var toRequest = world._chunksToRequest\n    var numQueued = toRequest.count()\n    var maxQueued = 50\n    if (numQueued >= maxQueued) return\n\n    // handle changes to chunk sorting function\n    var sortDistFn = world.chunkSortingDistFn || defaultSortDistance\n    if (sortDistFn !== world._prevSortingFn) {\n        sortQueueByDistanceFrom(world, world._chunksSortedLocs, 0, 0, 0, true)\n        world._prevSortingFn = sortDistFn\n    }\n\n    // consume the pre-sorted positions array, checking each loc and \n    // its reflections for locations that need to be added to request queue\n    var locsArr = world._chunksSortedLocs.arr\n    var ix = world._chunkAddSearchFrom\n    var maxIter = Math.min(20, locsArr.length / 10)\n    for (var ct = 0; ct < maxIter; ct++) {\n        var [di, dj, dk] = locsArr[ix++ % locsArr.length]\n        checkReflectedLocations(world, ci, cj, ck, di, dj, dk)\n        if (toRequest.count() >= maxQueued) break\n    }\n\n    // only advance start point if nothing is invalidated, \n    // so that nearyby chunks stay at high priority in that case\n    if (world._chunksInvalidated.isEmpty()) {\n        world._chunkAddSearchFrom = ix % locsArr.length\n    }\n\n    // queue should be mostly sorted, but may not have been empty\n    sortQueueByDistanceFrom(world, toRequest, ci, cj, ck, false)\n}\n\n// Helpers for checking whether to add a location, and reflections of it\nvar checkReflectedLocations = (world, ci, cj, ck, i, j, k) => {\n    checkOneLocation(world, ci + i, cj + j, ck + k)\n    if (i !== k) checkOneLocation(world, ci + k, cj + j, ck + i)\n    if (i > 0) checkReflectedLocations(world, ci, cj, ck, -i, j, k)\n    if (j > 0) checkReflectedLocations(world, ci, cj, ck, i, -j, k)\n    if (k > 0) checkReflectedLocations(world, ci, cj, ck, i, j, -k)\n}\n// finally, the logic for each reflected location checked\nvar checkOneLocation = (world, i, j, k) => {\n    if (world._chunksKnown.includes(i, j, k)) return\n    world._chunksKnown.add(i, j, k)\n    world._chunksToRequest.add(i, j, k, true)\n}\n\n\n\n\n\n/** \n * Incrementally scan known chunks for any that are no longer in range.\n * Assume that the order they're removed in isn't very important.\n * @param {World} world \n*/\nfunction findDistantChunksToRemove(world, ci, cj, ck) {\n    var distCheck = world._remDistanceFn\n    var toRemove = world._chunksToRemove\n    var numQueued = toRemove.count() + world._chunksInvalidated.count()\n    var maxQueued = 50\n    if (numQueued >= maxQueued) return\n\n    var knownArr = world._chunksKnown.arr\n    if (knownArr.length === 0) return\n    var maxIter = Math.min(100, knownArr.length / 10)\n    var found = false\n    for (var ct = 0; ct < maxIter; ct++) {\n        var [i, j, k] = knownArr[removeCheckIndex++ % knownArr.length]\n        if (toRemove.includes(i, j, k)) continue\n        if (distCheck(i - ci, j - cj, k - ck)) continue\n        // flag chunk for removal and remove it from work queues\n        world._chunksToRemove.add(i, j, k)\n        world._chunksToRequest.remove(i, j, k)\n        world._chunksToMesh.remove(i, j, k)\n        world._chunksToMeshFirst.remove(i, j, k)\n        found = true\n        numQueued++\n        if (numQueued > maxQueued) break\n    }\n    removeCheckIndex = removeCheckIndex % knownArr.length\n    if (found) sortQueueByDistanceFrom(world, toRemove, ci, cj, ck)\n}\nvar removeCheckIndex = 0\n\n\n/** \n * Incrementally look for chunks that could be re-meshed\n * @param {World} world \n*/\nfunction findChunksToMesh(world) {\n    var maxQueued = 10\n    var numQueued = world._chunksToMesh.count() + world._chunksToMeshFirst.count()\n    if (numQueued > maxQueued) return\n    var knownArr = world._chunksKnown.arr\n    var maxIter = Math.min(50, knownArr.length / 10)\n    for (var ct = 0; ct < maxIter; ct++) {\n        var [i, j, k] = knownArr[meshCheckIndex++ % knownArr.length]\n        var chunk = world._storage.getChunkByIndexes(i, j, k)\n        if (!chunk) continue\n        var res = possiblyQueueChunkForMeshing(world, chunk)\n        if (res) numQueued++\n        if (numQueued > maxQueued) break\n    }\n    meshCheckIndex %= knownArr.length\n}\nvar meshCheckIndex = 0\n\n\n\n\n\n\n/** \n * invalidate chunks overlapping the given AABB\n * @param {World} world \n*/\nfunction invalidateChunksInBox(world, box) {\n    var min = world._coordsToChunkIndexes(box.base[0], box.base[1], box.base[2])\n    var max = world._coordsToChunkIndexes(box.max[0], box.max[1], box.max[2])\n    for (var i = 0; i < 3; i++) {\n        if (!Number.isFinite(box.base[i])) min[i] = box.base[i]\n        if (!Number.isFinite(box.max[i])) max[i] = box.max[i]\n    }\n    world._chunksKnown.forEach(loc => {\n        var [i, j, k] = loc\n        if (i < min[0] || i >= max[0]) return\n        if (j < min[1] || j >= max[1]) return\n        if (k < min[2] || k >= max[2]) return\n        world._chunksInvalidated.add(i, j, k)\n        world._chunksToRemove.remove(i, j, k)\n        world._chunksToRequest.remove(i, j, k)\n        world._chunksToMesh.remove(i, j, k)\n        world._chunksToMeshFirst.remove(i, j, k)\n    })\n}\n\n\n\n/** \n * when current world changes - empty work queues and mark all for removal\n * @param {World} world \n*/\nfunction markAllChunksInvalid(world) {\n    world._chunksInvalidated.copyFrom(world._chunksKnown)\n    world._chunksToRemove.empty()\n    world._chunksToRequest.empty()\n    world._chunksToMesh.empty()\n    world._chunksToMeshFirst.empty()\n    sortQueueByDistanceFrom(world, world._chunksInvalidated)\n}\n\n\n\n\n\n\n\n\n/** \n * Run through chunk tracking queues looking for work to do next\n * @param {World} world \n*/\nfunction processRequestQueue(world) {\n    var toRequest = world._chunksToRequest\n    if (toRequest.isEmpty()) return true\n    // skip if too many outstanding requests, or if meshing queue is full\n    var pending = world._chunksPending.count()\n    var toMesh = world._chunksToMesh.count()\n    if (pending >= world.maxChunksPendingCreation) return true\n    if (toMesh >= world.maxChunksPendingMeshing) return true\n    var [i, j, k] = toRequest.pop()\n    requestNewChunk(world, i, j, k)\n    return toRequest.isEmpty()\n}\n\n\n/** @param {World} world */\nfunction processRemoveQueue(world) {\n    var queue = world._chunksInvalidated\n    if (queue.isEmpty()) queue = world._chunksToRemove\n    if (queue.isEmpty()) return true\n    var [i, j, k] = queue.pop()\n    removeChunk(world, i, j, k)\n    return (queue.isEmpty())\n}\n\n\n/** \n * similar to above but for chunks waiting to be meshed\n * @param {World} world \n*/\nfunction processMeshingQueue(world, firstOnly) {\n    var queue = world._chunksToMeshFirst\n    if (queue.isEmpty() && !firstOnly) queue = world._chunksToMesh\n    if (queue.isEmpty()) return true\n    var [i, j, k] = queue.pop()\n    if (world._chunksToRemove.includes(i, j, k)) return\n    var chunk = world._storage.getChunkByIndexes(i, j, k)\n    if (chunk) doChunkRemesh(world, chunk)\n}\n\n\n/** @param {World} world */\nfunction possiblyQueueChunkForMeshing(world, chunk) {\n    if (!(chunk._terrainDirty || chunk._objectsDirty)) return false\n    if (chunk._neighborCount < chunk.minNeighborsToMesh) return false\n    if (world._chunksToMesh.includes(chunk.i, chunk.j, chunk.k)) return false\n    if (world._chunksToMeshFirst.includes(chunk.i, chunk.j, chunk.k)) return false\n    var queue = (chunk._neighborCount === 26) ?\n        world._chunksToMeshFirst : world._chunksToMesh\n    queue.add(chunk.i, chunk.j, chunk.k)\n    world._sortMeshQueueEvery++\n    if (world._sortMeshQueueEvery > 20) {\n        sortQueueByDistanceFrom(world, queue)\n        world._sortMeshQueueEvery = 0\n    }\n    return true\n}\n\n\n\n\n\n\n/*\n * \n * \n * \n *              chunk lifecycle - create / set / remove / modify\n * \n * \n * \n*/\n\n\n/** \n * create chunk object and request voxel data from client\n * @param {World} world \n*/\nfunction requestNewChunk(world, i, j, k) {\n    var size = world._chunkSize\n    var dataArr = Chunk._createVoxelArray(world._chunkSize)\n    var worldName = world.noa.worldName\n    var requestID = [i, j, k, worldName].join('|')\n    var x = i * size\n    var y = j * size\n    var z = k * size\n    world._chunksPending.add(i, j, k)\n    world.emit('worldDataNeeded', requestID, dataArr, x, y, z, worldName)\n    profile_queues_hook('request')\n}\n\n/** \n * called when client sets a chunk's voxel data\n * If userData is passed in it will be attached to the chunk\n * @param {World} world \n*/\nfunction setChunkData(world, reqID, array, userData, fillVoxelID) {\n    var arr = reqID.split('|')\n    var i = parseInt(arr.shift())\n    var j = parseInt(arr.shift())\n    var k = parseInt(arr.shift())\n    var worldName = arr.join('|')\n    world._chunksPending.remove(i, j, k)\n    // discard data if it's for a world that's no longer current\n    if (worldName !== world.noa.worldName) return\n    // discard if chunk is no longer needed\n    if (!world._chunksKnown.includes(i, j, k)) return\n    if (world._chunksToRemove.includes(i, j, k)) return\n\n    var chunk = world._storage.getChunkByIndexes(i, j, k)\n    if (!chunk) {\n        // if chunk doesn't exist, create and init\n        var size = world._chunkSize\n        chunk = new Chunk(world.noa, reqID, i, j, k, size, array, fillVoxelID)\n        world._storage.storeChunkByIndexes(i, j, k, chunk)\n        chunk.userData = userData\n        world.noa.rendering.prepareChunkForRendering(chunk)\n        world.emit('chunkAdded', chunk)\n    } else {\n        // else we're updating data for an existing chunk\n        chunk._updateVoxelArray(array, fillVoxelID)\n    }\n    // chunk can now be meshed, and ping neighbors\n    possiblyQueueChunkForMeshing(world, chunk)\n    updateNeighborsOfChunk(world, i, j, k, chunk)\n\n    profile_queues_hook('receive')\n}\n\n\n\n/** \n * remove a chunk that wound up in the remove queue\n * @param {World} world \n*/\nfunction removeChunk(world, i, j, k) {\n    var chunk = world._storage.getChunkByIndexes(i, j, k)\n\n    if (chunk) {\n        world.emit('chunkBeingRemoved', chunk.requestID, chunk.voxels, chunk.userData)\n        world.noa.rendering.disposeChunkForRendering(chunk)\n        chunk.dispose()\n        profile_queues_hook('dispose')\n        updateNeighborsOfChunk(world, i, j, k, null)\n    }\n\n    world._storage.removeChunkByIndexes(i, j, k)\n    world._chunksKnown.remove(i, j, k)\n    world._chunksToMesh.remove(i, j, k)\n    world._chunksToRemove.remove(i, j, k)\n    world._chunksToMeshFirst.remove(i, j, k)\n}\n\n\n/** @param {World} world */\nfunction doChunkRemesh(world, chunk) {\n    world._chunksToMesh.remove(chunk.i, chunk.j, chunk.k)\n    world._chunksToMeshFirst.remove(chunk.i, chunk.j, chunk.k)\n    chunk.updateMeshes()\n    profile_queues_hook('mesh')\n}\n\n\n\n\n\n\n\n\n\n\n/*\n * \n * \n *          two different versions of logic to convert\n *          chunk coords to chunk indexes or local scope\n * \n * \n*/\n\nfunction chunkCoordsToIndexesGeneral(x, y, z) {\n    var cs = this._chunkSize\n    return [Math.floor(x / cs) | 0, Math.floor(y / cs) | 0, Math.floor(z / cs) | 0]\n}\nfunction chunkCoordsToLocalsGeneral(x, y, z) {\n    var cs = this._chunkSize\n    var i = (x % cs) | 0; if (i < 0) i += cs\n    var j = (y % cs) | 0; if (j < 0) j += cs\n    var k = (z % cs) | 0; if (k < 0) k += cs\n    return [i, j, k]\n}\nfunction chunkCoordsToIndexesPowerOfTwo(x, y, z) {\n    var shift = this._coordShiftBits\n    return [(x >> shift) | 0, (y >> shift) | 0, (z >> shift) | 0]\n}\nfunction chunkCoordsToLocalsPowerOfTwo(x, y, z) {\n    var mask = this._coordMask\n    return [(x & mask) | 0, (y & mask) | 0, (z & mask) | 0]\n}\n\n\n\n\n\n\n\n/*\n * \n * \n * \n *          misc helpers and implementation functions\n * \n * \n * \n*/\n\n/** \n * sorts DESCENDING, unless reversed\n * @param {World} world \n*/\nfunction sortQueueByDistanceFrom(world, queue, pi, pj, pk, reverse = false) {\n    var distFn = world.chunkSortingDistFn || defaultSortDistance\n    var localDist = (i, j, k) => distFn(pi - i, pj - j, pk - k)\n    if (pi === undefined) {\n        [pi, pj, pk] = getPlayerChunkIndexes(world)\n    }\n    queue.sortByDistance(localDist, reverse)\n}\nvar defaultSortDistance = (i, j, k) => (i * i) + (j * j) + (k * k)\n\n\n\n\n/** \n * keep neighbor data updated when chunk is added or removed\n * @param {World} world \n*/\nfunction updateNeighborsOfChunk(world, ci, cj, ck, chunk) {\n    var terrainChanged = (!chunk) || (chunk && !chunk.isEmpty)\n    for (var i = -1; i <= 1; i++) {\n        for (var j = -1; j <= 1; j++) {\n            for (var k = -1; k <= 1; k++) {\n                if ((i | j | k) === 0) continue\n                var neighbor = world._storage.getChunkByIndexes(ci + i, cj + j, ck + k)\n                if (!neighbor) continue\n                // flag neighbor, assume terrain needs remeshing\n                if (terrainChanged) neighbor._terrainDirty = true\n                // update neighbor counts and references, both ways\n                if (chunk && !chunk._neighbors.get(i, j, k)) {\n                    chunk._neighborCount++\n                    chunk._neighbors.set(i, j, k, neighbor)\n                }\n                var nabRef = neighbor._neighbors.get(-i, -j, -k)\n                if (chunk && !nabRef) {\n                    neighbor._neighborCount++\n                    neighbor._neighbors.set(-i, -j, -k, chunk)\n                    // immediately queue neighbor if it's surrounded\n                    if (neighbor._neighborCount === 26) {\n                        possiblyQueueChunkForMeshing(world, neighbor)\n                    }\n                }\n                if (!chunk && nabRef) {\n                    neighbor._neighborCount--\n                    neighbor._neighbors.set(-i, -j, -k, null)\n                }\n            }\n        }\n    }\n}\n\n\n// make a function to check if an (i,j,k) is within a sphere/ellipse of given size\nfunction makeDistanceTestFunction(xsize, ysize) {\n    var asq = xsize * xsize\n    var bsq = ysize * ysize\n    // spherical case\n    if (xsize === ysize) return (i, j, k) => (i * i + j * j + k * k <= asq)\n    // otherwise do clipped spheres for now\n    if (xsize > ysize) return (i, j, k) => {\n        if (Math.abs(j) > ysize) return false\n        return (i * i + j * j + k * k <= asq)\n    }\n    return (i, j, k) => {\n        var dxsq = i * i + k * k\n        if (dxsq > asq) return false\n        return (dxsq + j * j <= bsq)\n    }\n}\n\n\n\n\n\n\n\n\n\n\n/*\n * \n * \n * \n * \n *                  debugging\n * \n * \n * \n * \n*/\n\n/** @internal */\nWorld.prototype.report = function () {\n    console.log('World report - playerChunkLoaded: ', this.playerChunkLoaded)\n    _report(this, '  known:     ', this._chunksKnown.arr, true)\n    _report(this, '  to request:', this._chunksToRequest.arr, 0)\n    _report(this, '  to remove: ', this._chunksToRemove.arr, 0)\n    _report(this, '  invalid:   ', this._chunksInvalidated.arr, 0)\n    _report(this, '  creating:  ', this._chunksPending.arr, 0)\n    _report(this, '  to mesh:   ', this._chunksToMesh.arr, 0)\n    _report(this, '  mesh 1st:  ', this._chunksToMeshFirst.arr, 0)\n}\n\nfunction _report(world, name, arr, ext) {\n    var full = 0,\n        empty = 0,\n        exist = 0,\n        surrounded = 0,\n        remeshes = []\n    arr.forEach(loc => {\n        var chunk = world._storage.getChunkByIndexes(loc[0], loc[1], loc[2])\n        if (!chunk) return\n        exist++\n        remeshes.push(chunk._timesMeshed)\n        if (chunk._isFull) full++\n        if (chunk._isEmpty) empty++\n        if (chunk._neighborCount === 26) surrounded++\n    })\n    var out = arr.length.toString().padEnd(8)\n    out += ('exist: ' + exist).padEnd(12)\n    out += ('full: ' + full).padEnd(12)\n    out += ('empty: ' + empty).padEnd(12)\n    out += ('surr: ' + surrounded).padEnd(12)\n    if (ext) {\n        var sum = remeshes.reduce((acc, val) => acc + val, 0)\n        var max = remeshes.reduce((acc, val) => Math.max(acc, val), 0)\n        var min = remeshes.reduce((acc, val) => Math.min(acc, val), 0)\n        out += 'times meshed: avg ' + (sum / exist).toFixed(2)\n        out += '  max ' + max\n        out += '  min ' + min\n    }\n    console.log(name, out)\n}\n\n\nimport { makeProfileHook } from './util'\nvar profile_hook = makeProfileHook(PROFILE_EVERY, 'world ticks:', 1)\nvar profile_queues_hook = ((every) => {\n    if (!(every > 0)) return () => { }\n    var iter = 0\n    var counts = {}\n    var queues = {}\n    var started = performance.now()\n    return function profile_queues_hook(state, world) {\n        if (state === 'start') return\n        if (state !== 'end') return counts[state] = (counts[state] || 0) + 1\n        queues.toreq = (queues.toreq || 0) + world._chunksToRequest.count()\n        queues.toget = (queues.toget || 0) + world._chunksPending.count()\n        queues.tomesh = (queues.tomesh || 0) + world._chunksToMesh.count() + world._chunksToMeshFirst.count()\n        queues.tomesh1 = (queues.tomesh1 || 0) + world._chunksToMeshFirst.count()\n        queues.torem = (queues.torem || 0) + world._chunksToRemove.count()\n        if (++iter < every) return\n        var t = performance.now(), dt = t - started\n        var res = {}\n        Object.keys(queues).forEach(k => {\n            var num = Math.round((queues[k] || 0) / iter)\n            res[k] = `[${num}]`.padStart(5)\n        })\n        Object.keys(counts).forEach(k => {\n            var num = Math.round((counts[k] || 0) * 1000 / dt)\n            res[k] = ('' + num).padStart(3)\n        })\n        console.log('chunk flow: ',\n            `${res.toreq}-> ${res.request || 0} req/s  `,\n            `${res.toget}-> ${res.receive || 0} got/s  `,\n            `${(res.tomesh)}-> ${res.mesh || 0} mesh/s  `,\n            `${res.torem}-> ${res.dispose || 0} rem/s  `,\n            `(meshFirst: ${res.tomesh1.trim()})`,\n        )\n        iter = 0\n        counts = {}\n        queues = {}\n        started = performance.now()\n    }\n})(PROFILE_QUEUES_EVERY)\n", "\nimport { LocationQueue } from './util'\nimport ndarray from 'ndarray'\n\n\n\n\n/* \n * \n *   Chunk\n * \n *  Stores and manages voxel ids and flags for each voxel within chunk\n * \n */\n\n\n\n\n\n/*\n *\n *    Chunk constructor\n *\n */\n\n/** @param {import('../index').Engine} noa */\nexport function Chunk(noa, requestID, ci, cj, ck, size, dataArray, fillVoxelID = -1) {\n    this.noa = noa\n    this.isDisposed = false\n\n    // arbitrary data passed in by client when generating world\n    this.userData = null\n\n    // voxel data and properties\n    this.requestID = requestID     // id sent to game client\n    this.voxels = dataArray\n    this.i = ci\n    this.j = cj\n    this.k = ck\n    this.size = size\n    this.x = ci * size\n    this.y = cj * size\n    this.z = ck * size\n    this.pos = [this.x, this.y, this.z]\n\n    // flags to track if things need re-meshing\n    this._terrainDirty = false\n    this._objectsDirty = false\n\n    // inits state of terrain / object meshing\n    this._terrainMeshes = []\n    noa._terrainMesher.initChunk(this)\n    noa._objectMesher.initChunk(this)\n\n    this._isFull = false\n    this._isEmpty = false\n\n    this._wholeLayerVoxel = Array(size).fill(-1)\n    if (fillVoxelID >= 0) {\n        this.voxels.data.fill(fillVoxelID, 0, this.voxels.size)\n        this._wholeLayerVoxel.fill(fillVoxelID)\n    }\n\n    // references to neighboring chunks, if they exist (filled in by `world`)\n    var narr = Array.from(Array(27), () => null)\n    this._neighbors = ndarray(narr, [3, 3, 3]).lo(1, 1, 1)\n    this._neighbors.set(0, 0, 0, this)\n    this._neighborCount = 0\n    this._timesMeshed = 0\n\n    // location queue of voxels in this chunk with block handlers (assume it's rare)\n    /** @internal */\n    this._blockHandlerLocs = new LocationQueue()\n\n    // passes through voxel contents, calling block handlers etc.\n    scanVoxelData(this)\n}\n\n\n// expose logic internally to create and update the voxel data array\nChunk._createVoxelArray = function (size) {\n    var arr = new Uint16Array(size * size * size)\n    return ndarray(arr, [size, size, size])\n}\n\nChunk.prototype._updateVoxelArray = function (dataArray, fillVoxelID = -1) {\n    // dispose current object blocks\n    callAllBlockHandlers(this, 'onUnload')\n    this.noa._objectMesher.disposeChunk(this)\n    this.noa._terrainMesher.disposeChunk(this)\n    this.voxels = dataArray\n    this._terrainDirty = false\n    this._objectsDirty = false\n    this._blockHandlerLocs.empty()\n    this.noa._objectMesher.initChunk(this)\n    this.noa._terrainMesher.initChunk(this)\n\n    if (fillVoxelID >= 0) {\n        this._wholeLayerVoxel.fill(fillVoxelID)\n    } else {\n        this._wholeLayerVoxel.fill(-1)\n    }\n\n    scanVoxelData(this)\n}\n\n\n\n\n\n\n\n\n/*\n *\n *    Chunk API\n *\n */\n\n// get/set deal with block IDs, so that this class acts like an ndarray\n\nChunk.prototype.get = function (i, j, k) {\n    return this.voxels.get(i, j, k)\n}\n\nChunk.prototype.getSolidityAt = function (i, j, k) {\n    var solidLookup = this.noa.registry._solidityLookup\n    return solidLookup[this.voxels.get(i, j, k)]\n}\n\nChunk.prototype.set = function (i, j, k, newID) {\n    var oldID = this.voxels.get(i, j, k)\n    if (newID === oldID) return\n\n    // update voxel data\n    this.voxels.set(i, j, k, newID)\n\n    // lookup tables from registry, etc\n    var solidLookup = this.noa.registry._solidityLookup\n    var objectLookup = this.noa.registry._objectLookup\n    var opaqueLookup = this.noa.registry._opacityLookup\n    var handlerLookup = this.noa.registry._blockHandlerLookup\n\n    // track invariants about chunk data\n    if (!opaqueLookup[newID]) this._isFull = false\n    if (newID !== 0) this._isEmpty = false\n    if (this._wholeLayerVoxel[j] !== newID) this._wholeLayerVoxel[j] = -1\n\n    // voxel lifecycle handling\n    var hold = handlerLookup[oldID]\n    var hnew = handlerLookup[newID]\n    if (hold) callBlockHandler(this, hold, 'onUnset', i, j, k)\n    if (hnew) {\n        callBlockHandler(this, hnew, 'onSet', i, j, k)\n        this._blockHandlerLocs.add(i, j, k)\n    } else {\n        this._blockHandlerLocs.remove(i, j, k)\n    }\n\n    // track object block states\n    var objMesher = this.noa._objectMesher\n    var objOld = objectLookup[oldID]\n    var objNew = objectLookup[newID]\n    if (objOld) objMesher.setObjectBlock(this, 0, i, j, k)\n    if (objNew) objMesher.setObjectBlock(this, newID, i, j, k)\n\n    // decide dirtiness states\n    var solidityChanged = (solidLookup[oldID] !== solidLookup[newID])\n    var opacityChanged = (opaqueLookup[oldID] !== opaqueLookup[newID])\n    var wasTerrain = !objOld && (oldID !== 0)\n    var nowTerrain = !objNew && (newID !== 0)\n\n    if (objOld || objNew) this._objectsDirty = true\n    if (solidityChanged || opacityChanged || wasTerrain || nowTerrain) {\n        this._terrainDirty = true\n    }\n\n    if (this._terrainDirty || this._objectsDirty) {\n        this.noa.world._queueChunkForRemesh(this)\n    }\n\n    // neighbors only affected if solidity or opacity changed on an edge\n    if (solidityChanged || opacityChanged) {\n        var edge = this.size - 1\n        var imin = (i === 0) ? -1 : 0\n        var jmin = (j === 0) ? -1 : 0\n        var kmin = (k === 0) ? -1 : 0\n        var imax = (i === edge) ? 1 : 0\n        var jmax = (j === edge) ? 1 : 0\n        var kmax = (k === edge) ? 1 : 0\n        for (var ni = imin; ni <= imax; ni++) {\n            for (var nj = jmin; nj <= jmax; nj++) {\n                for (var nk = kmin; nk <= kmax; nk++) {\n                    if ((ni | nj | nk) === 0) continue\n                    var nab = this._neighbors.get(ni, nj, nk)\n                    if (!nab) continue\n                    nab._terrainDirty = true\n                    this.noa.world._queueChunkForRemesh(nab)\n                }\n            }\n        }\n    }\n}\n\n\n\n// helper to call handler of a given type at a particular xyz\nfunction callBlockHandler(chunk, handlers, type, i, j, k) {\n    var handler = handlers[type]\n    if (!handler) return\n    handler(chunk.x + i, chunk.y + j, chunk.z + k)\n}\n\n\n// gets called by World when this chunk has been queued for remeshing\nChunk.prototype.updateMeshes = function () {\n    if (this._terrainDirty) {\n        this.noa._terrainMesher.meshChunk(this)\n        this._timesMeshed++\n        this._terrainDirty = false\n    }\n    if (this._objectsDirty) {\n        this.noa._objectMesher.buildObjectMeshes()\n        this._objectsDirty = false\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * \n *      Init\n * \n *  Scans voxel data, processing object blocks and setting chunk flags\n * \n*/\n\nfunction scanVoxelData(chunk) {\n    var voxels = chunk.voxels\n    var data = voxels.data\n    var len = voxels.shape[0]\n    var opaqueLookup = chunk.noa.registry._opacityLookup\n    var handlerLookup = chunk.noa.registry._blockHandlerLookup\n    var objectLookup = chunk.noa.registry._objectLookup\n    var plainLookup = chunk.noa.registry._blockIsPlainLookup\n    var objMesher = chunk.noa._objectMesher\n\n    // flags for tracking if chunk is entirely opaque or transparent\n    var fullyOpaque = true\n    var fullyAir = true\n\n    // scan vertically..\n    for (var j = 0; j < len; ++j) {\n\n        // fastest case where whole layer is air/dirt/etc\n        var layerID = chunk._wholeLayerVoxel[j]\n        if (layerID >= 0 && !objMesher[layerID] && !handlerLookup[layerID]) {\n            if (!opaqueLookup[layerID]) fullyOpaque = false\n            if (layerID !== 0) fullyAir = false\n            continue\n        }\n\n        var constantID = voxels.get(0, j, 0)\n\n        for (var i = 0; i < len; ++i) {\n            var index = voxels.index(i, j, 0)\n            for (var k = 0; k < len; ++k, ++index) {\n                var id = data[index]\n\n                // detect constant layer ID if there is one\n                if (constantID >= 0 && id !== constantID) constantID = -1\n\n                // most common cases: air block...\n                if (id === 0) {\n                    fullyOpaque = false\n                    continue\n                }\n                // ...or plain boring block (no mesh, handlers, etc)\n                if (plainLookup[id]) {\n                    fullyAir = false\n                    continue\n                }\n                // otherwise check opacity, object mesh, and handlers\n                fullyOpaque = fullyOpaque && opaqueLookup[id]\n                fullyAir = false\n                if (objectLookup[id]) {\n                    objMesher.setObjectBlock(chunk, id, i, j, k)\n                    chunk._objectsDirty = true\n                }\n                var handlers = handlerLookup[id]\n                if (handlers) {\n                    chunk._blockHandlerLocs.add(i, j, k)\n                    callBlockHandler(chunk, handlers, 'onLoad', i, j, k)\n                }\n            }\n        }\n\n        if (constantID >= 0) chunk._wholeLayerVoxel[j] = constantID\n    }\n\n    chunk._isFull = fullyOpaque\n    chunk._isEmpty = fullyAir\n    chunk._terrainDirty = !chunk._isEmpty\n}\n\n\n\n\n\n\n\n\n\n\n// dispose function - just clears properties and references\n\nChunk.prototype.dispose = function () {\n    // look through the data for onUnload handlers\n    callAllBlockHandlers(this, 'onUnload')\n    this._blockHandlerLocs.empty()\n\n    // let meshers dispose their stuff\n    this.noa._objectMesher.disposeChunk(this)\n    this.noa._terrainMesher.disposeChunk(this)\n\n    // apparently there's no way to dispose typed arrays, so just null everything\n    this.voxels.data = null\n    this.voxels = null\n    this._neighbors.data = null\n    this._neighbors = null\n\n    this.isDisposed = true\n}\n\n\n\n// helper to call a given handler for all blocks in the chunk\nfunction callAllBlockHandlers(chunk, type) {\n    var voxels = chunk.voxels\n    var handlerLookup = chunk.noa.registry._blockHandlerLookup\n    chunk._blockHandlerLocs.arr.forEach(([i, j, k]) => {\n        var id = voxels.get(i, j, k)\n        callBlockHandler(chunk, handlerLookup[id], type, i, j, k)\n    })\n}\n", "{\n    \"name\": \"noa-engine\",\n    \"version\": \"0.33.0\",\n    \"description\": \"Experimental voxel game engine\",\n    \"main\": \"src/index.js\",\n    \"typings\": \"dist/src/index.d.ts\",\n    \"files\": [\n        \"/src\",\n        \"/dist\"\n    ],\n    \"scripts\": {\n        \"build\": \"npm run types; npm run docs\",\n        \"types\": \"tsc\",\n        \"docs\": \"typedoc\"\n    },\n    \"author\": \"Andy Hall (https://fenomas.com)\",\n    \"license\": \"MIT\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/fenomas/noa.git\"\n    },\n    \"bugs\": {\n        \"url\": \"https://github.com/fenomas/noa/issues\"\n    },\n    \"dependencies\": {\n        \"aabb-3d\": \"fenomas/aabb-3d\",\n        \"box-intersect\": \"fenomas/box-intersect\",\n        \"ent-comp\": \"^0.11.0\",\n        \"events\": \"^3.3.0\",\n        \"fast-voxel-raycast\": \"^0.1.1\",\n        \"game-inputs\": \"^0.8.0\",\n        \"gl-vec3\": \"^1.1.3\",\n        \"micro-game-shell\": \"^0.9.0\",\n        \"ndarray\": \"^1.0.19\",\n        \"voxel-aabb-sweep\": \"^0.5.0\",\n        \"voxel-physics-engine\": \"^0.13.0\"\n    },\n    \"peerDependencies\": {\n        \"@babylonjs/core\": \"^6.1.0\"\n    },\n    \"devDependencies\": {\n        \"eslint\": \"^8.3.0\",\n        \"js-beautify\": \"^1.14.0\",\n        \"typedoc\": \"^0.24.6\",\n        \"typedoc-plugin-missing-exports\": \"^2.0.0\",\n        \"typescript\": \"^5.0.4\"\n    },\n    \"keywords\": [\n        \"voxel\",\n        \"voxels\",\n        \"game\",\n        \"engine\",\n        \"game-engine\"\n    ]\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAuBA,QAAI,IAAI,OAAO,YAAY,WAAW,UAAU;AAChD,QAAI,eAAe,KAAK,OAAO,EAAE,UAAU,aACvC,EAAE,QACF,SAASA,cAAa,QAAQ,UAAU,MAAM;AAC9C,aAAO,SAAS,UAAU,MAAM,KAAK,QAAQ,UAAU,IAAI;AAAA,IAC7D;AAEF,QAAI;AACJ,QAAI,KAAK,OAAO,EAAE,YAAY,YAAY;AACxC,uBAAiB,EAAE;AAAA,IACrB,WAAW,OAAO,uBAAuB;AACvC,uBAAiB,SAASC,gBAAe,QAAQ;AAC/C,eAAO,OAAO,oBAAoB,MAAM,EACrC,OAAO,OAAO,sBAAsB,MAAM,CAAC;AAAA,MAChD;AAAA,IACF,OAAO;AACL,uBAAiB,SAASA,gBAAe,QAAQ;AAC/C,eAAO,OAAO,oBAAoB,MAAM;AAAA,MAC1C;AAAA,IACF;AAEA,aAAS,mBAAmB,SAAS;AACnC,UAAI,WAAW,QAAQ,KAAM,SAAQ,KAAK,OAAO;AAAA,IACnD;AAEA,QAAI,cAAc,OAAO,SAAS,SAASC,aAAY,OAAO;AAC5D,aAAO,UAAU;AAAA,IACnB;AAEA,aAASC,gBAAe;AACtB,MAAAA,cAAa,KAAK,KAAK,IAAI;AAAA,IAC7B;AACA,WAAO,UAAUA;AACjB,WAAO,QAAQ,OAAO;AAGtB,IAAAA,cAAa,eAAeA;AAE5B,IAAAA,cAAa,UAAU,UAAU;AACjC,IAAAA,cAAa,UAAU,eAAe;AACtC,IAAAA,cAAa,UAAU,gBAAgB;AAIvC,QAAI,sBAAsB;AAE1B,aAAS,cAAc,UAAU;AAC/B,UAAI,OAAO,aAAa,YAAY;AAClC,cAAM,IAAI,UAAU,qEAAqE,OAAO,QAAQ;AAAA,MAC1G;AAAA,IACF;AAEA,WAAO,eAAeA,eAAc,uBAAuB;AAAA,MACzD,YAAY;AAAA,MACZ,KAAK,WAAW;AACd,eAAO;AAAA,MACT;AAAA,MACA,KAAK,SAAS,KAAK;AACjB,YAAI,OAAO,QAAQ,YAAY,MAAM,KAAK,YAAY,GAAG,GAAG;AAC1D,gBAAM,IAAI,WAAW,oGAAoG,MAAM,GAAG;AAAA,QACpI;AACA,8BAAsB;AAAA,MACxB;AAAA,IACF,CAAC;AAED,IAAAA,cAAa,OAAO,WAAW;AAE7B,UAAI,KAAK,YAAY,UACjB,KAAK,YAAY,OAAO,eAAe,IAAI,EAAE,SAAS;AACxD,aAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,aAAK,eAAe;AAAA,MACtB;AAEA,WAAK,gBAAgB,KAAK,iBAAiB;AAAA,IAC7C;AAIA,IAAAA,cAAa,UAAU,kBAAkB,SAAS,gBAAgB,GAAG;AACnE,UAAI,OAAO,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,GAAG;AACpD,cAAM,IAAI,WAAW,kFAAkF,IAAI,GAAG;AAAA,MAChH;AACA,WAAK,gBAAgB;AACrB,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,MAAM;AAC9B,UAAI,KAAK,kBAAkB;AACzB,eAAOA,cAAa;AACtB,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,cAAa,UAAU,kBAAkB,SAAS,kBAAkB;AAClE,aAAO,iBAAiB,IAAI;AAAA,IAC9B;AAEA,IAAAA,cAAa,UAAU,OAAO,SAAS,KAAK,MAAM;AAChD,UAAI,OAAO,CAAC;AACZ,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAK,MAAK,KAAK,UAAU,CAAC,CAAC;AACjE,UAAI,UAAW,SAAS;AAExB,UAAI,SAAS,KAAK;AAClB,UAAI,WAAW;AACb,kBAAW,WAAW,OAAO,UAAU;AAAA,eAChC,CAAC;AACR,eAAO;AAGT,UAAI,SAAS;AACX,YAAI;AACJ,YAAI,KAAK,SAAS;AAChB,eAAK,KAAK,CAAC;AACb,YAAI,cAAc,OAAO;AAGvB,gBAAM;AAAA,QACR;AAEA,YAAI,MAAM,IAAI,MAAM,sBAAsB,KAAK,OAAO,GAAG,UAAU,MAAM,GAAG;AAC5E,YAAI,UAAU;AACd,cAAM;AAAA,MACR;AAEA,UAAI,UAAU,OAAO,IAAI;AAEzB,UAAI,YAAY;AACd,eAAO;AAET,UAAI,OAAO,YAAY,YAAY;AACjC,qBAAa,SAAS,MAAM,IAAI;AAAA,MAClC,OAAO;AACL,YAAIC,OAAM,QAAQ;AAClB,YAAI,YAAY,WAAW,SAASA,IAAG;AACvC,iBAAS,IAAI,GAAG,IAAIA,MAAK,EAAE;AACzB,uBAAa,UAAU,CAAC,GAAG,MAAM,IAAI;AAAA,MACzC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,QAAQ,MAAM,UAAU,SAAS;AACrD,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,oBAAc,QAAQ;AAEtB,eAAS,OAAO;AAChB,UAAI,WAAW,QAAW;AACxB,iBAAS,OAAO,UAAU,uBAAO,OAAO,IAAI;AAC5C,eAAO,eAAe;AAAA,MACxB,OAAO;AAGL,YAAI,OAAO,gBAAgB,QAAW;AACpC,iBAAO;AAAA,YAAK;AAAA,YAAe;AAAA,YACf,SAAS,WAAW,SAAS,WAAW;AAAA,UAAQ;AAI5D,mBAAS,OAAO;AAAA,QAClB;AACA,mBAAW,OAAO,IAAI;AAAA,MACxB;AAEA,UAAI,aAAa,QAAW;AAE1B,mBAAW,OAAO,IAAI,IAAI;AAC1B,UAAE,OAAO;AAAA,MACX,OAAO;AACL,YAAI,OAAO,aAAa,YAAY;AAElC,qBAAW,OAAO,IAAI,IACpB,UAAU,CAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,QAExD,WAAW,SAAS;AAClB,mBAAS,QAAQ,QAAQ;AAAA,QAC3B,OAAO;AACL,mBAAS,KAAK,QAAQ;AAAA,QACxB;AAGA,YAAI,iBAAiB,MAAM;AAC3B,YAAI,IAAI,KAAK,SAAS,SAAS,KAAK,CAAC,SAAS,QAAQ;AACpD,mBAAS,SAAS;AAGlB,cAAI,IAAI,IAAI,MAAM,iDACE,SAAS,SAAS,MAAM,OAAO,IAAI,IAAI,mEAEvB;AACpC,YAAE,OAAO;AACT,YAAE,UAAU;AACZ,YAAE,OAAO;AACT,YAAE,QAAQ,SAAS;AACnB,6BAAmB,CAAC;AAAA,QACtB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,cAAa,UAAU,cAAc,SAAS,YAAY,MAAM,UAAU;AACxE,aAAO,aAAa,MAAM,MAAM,UAAU,KAAK;AAAA,IACjD;AAEA,IAAAA,cAAa,UAAU,KAAKA,cAAa,UAAU;AAEnD,IAAAA,cAAa,UAAU,kBACnB,SAAS,gBAAgB,MAAM,UAAU;AACvC,aAAO,aAAa,MAAM,MAAM,UAAU,IAAI;AAAA,IAChD;AAEJ,aAAS,cAAc;AACrB,UAAI,CAAC,KAAK,OAAO;AACf,aAAK,OAAO,eAAe,KAAK,MAAM,KAAK,MAAM;AACjD,aAAK,QAAQ;AACb,YAAI,UAAU,WAAW;AACvB,iBAAO,KAAK,SAAS,KAAK,KAAK,MAAM;AACvC,eAAO,KAAK,SAAS,MAAM,KAAK,QAAQ,SAAS;AAAA,MACnD;AAAA,IACF;AAEA,aAAS,UAAU,QAAQ,MAAM,UAAU;AACzC,UAAI,QAAQ,EAAE,OAAO,OAAO,QAAQ,QAAW,QAAgB,MAAY,SAAmB;AAC9F,UAAI,UAAU,YAAY,KAAK,KAAK;AACpC,cAAQ,WAAW;AACnB,YAAM,SAAS;AACf,aAAO;AAAA,IACT;AAEA,IAAAA,cAAa,UAAU,OAAO,SAASE,MAAK,MAAM,UAAU;AAC1D,oBAAc,QAAQ;AACtB,WAAK,GAAG,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC7C,aAAO;AAAA,IACT;AAEA,IAAAF,cAAa,UAAU,sBACnB,SAAS,oBAAoB,MAAM,UAAU;AAC3C,oBAAc,QAAQ;AACtB,WAAK,gBAAgB,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC1D,aAAO;AAAA,IACT;AAGJ,IAAAA,cAAa,UAAU,iBACnB,SAAS,eAAe,MAAM,UAAU;AACtC,UAAI,MAAM,QAAQ,UAAU,GAAG;AAE/B,oBAAc,QAAQ;AAEtB,eAAS,KAAK;AACd,UAAI,WAAW;AACb,eAAO;AAET,aAAO,OAAO,IAAI;AAClB,UAAI,SAAS;AACX,eAAO;AAET,UAAI,SAAS,YAAY,KAAK,aAAa,UAAU;AACnD,YAAI,EAAE,KAAK,iBAAiB;AAC1B,eAAK,UAAU,uBAAO,OAAO,IAAI;AAAA,aAC9B;AACH,iBAAO,OAAO,IAAI;AAClB,cAAI,OAAO;AACT,iBAAK,KAAK,kBAAkB,MAAM,KAAK,YAAY,QAAQ;AAAA,QAC/D;AAAA,MACF,WAAW,OAAO,SAAS,YAAY;AACrC,mBAAW;AAEX,aAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,cAAI,KAAK,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE,aAAa,UAAU;AACzD,+BAAmB,KAAK,CAAC,EAAE;AAC3B,uBAAW;AACX;AAAA,UACF;AAAA,QACF;AAEA,YAAI,WAAW;AACb,iBAAO;AAET,YAAI,aAAa;AACf,eAAK,MAAM;AAAA,aACR;AACH,oBAAU,MAAM,QAAQ;AAAA,QAC1B;AAEA,YAAI,KAAK,WAAW;AAClB,iBAAO,IAAI,IAAI,KAAK,CAAC;AAEvB,YAAI,OAAO,mBAAmB;AAC5B,eAAK,KAAK,kBAAkB,MAAM,oBAAoB,QAAQ;AAAA,MAClE;AAEA,aAAO;AAAA,IACT;AAEJ,IAAAA,cAAa,UAAU,MAAMA,cAAa,UAAU;AAEpD,IAAAA,cAAa,UAAU,qBACnB,SAAS,mBAAmB,MAAM;AAChC,UAAI,WAAW,QAAQ;AAEvB,eAAS,KAAK;AACd,UAAI,WAAW;AACb,eAAO;AAGT,UAAI,OAAO,mBAAmB,QAAW;AACvC,YAAI,UAAU,WAAW,GAAG;AAC1B,eAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,eAAK,eAAe;AAAA,QACtB,WAAW,OAAO,IAAI,MAAM,QAAW;AACrC,cAAI,EAAE,KAAK,iBAAiB;AAC1B,iBAAK,UAAU,uBAAO,OAAO,IAAI;AAAA;AAEjC,mBAAO,OAAO,IAAI;AAAA,QACtB;AACA,eAAO;AAAA,MACT;AAGA,UAAI,UAAU,WAAW,GAAG;AAC1B,YAAI,OAAO,OAAO,KAAK,MAAM;AAC7B,YAAI;AACJ,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,gBAAM,KAAK,CAAC;AACZ,cAAI,QAAQ,iBAAkB;AAC9B,eAAK,mBAAmB,GAAG;AAAA,QAC7B;AACA,aAAK,mBAAmB,gBAAgB;AACxC,aAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,aAAK,eAAe;AACpB,eAAO;AAAA,MACT;AAEA,kBAAY,OAAO,IAAI;AAEvB,UAAI,OAAO,cAAc,YAAY;AACnC,aAAK,eAAe,MAAM,SAAS;AAAA,MACrC,WAAW,cAAc,QAAW;AAElC,aAAK,IAAI,UAAU,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,eAAK,eAAe,MAAM,UAAU,CAAC,CAAC;AAAA,QACxC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEJ,aAAS,WAAW,QAAQ,MAAM,QAAQ;AACxC,UAAI,SAAS,OAAO;AAEpB,UAAI,WAAW;AACb,eAAO,CAAC;AAEV,UAAI,aAAa,OAAO,IAAI;AAC5B,UAAI,eAAe;AACjB,eAAO,CAAC;AAEV,UAAI,OAAO,eAAe;AACxB,eAAO,SAAS,CAAC,WAAW,YAAY,UAAU,IAAI,CAAC,UAAU;AAEnE,aAAO,SACL,gBAAgB,UAAU,IAAI,WAAW,YAAY,WAAW,MAAM;AAAA,IAC1E;AAEA,IAAAA,cAAa,UAAU,YAAY,SAAS,UAAU,MAAM;AAC1D,aAAO,WAAW,MAAM,MAAM,IAAI;AAAA,IACpC;AAEA,IAAAA,cAAa,UAAU,eAAe,SAAS,aAAa,MAAM;AAChE,aAAO,WAAW,MAAM,MAAM,KAAK;AAAA,IACrC;AAEA,IAAAA,cAAa,gBAAgB,SAAS,SAAS,MAAM;AACnD,UAAI,OAAO,QAAQ,kBAAkB,YAAY;AAC/C,eAAO,QAAQ,cAAc,IAAI;AAAA,MACnC,OAAO;AACL,eAAO,cAAc,KAAK,SAAS,IAAI;AAAA,MACzC;AAAA,IACF;AAEA,IAAAA,cAAa,UAAU,gBAAgB;AACvC,aAAS,cAAc,MAAM;AAC3B,UAAI,SAAS,KAAK;AAElB,UAAI,WAAW,QAAW;AACxB,YAAI,aAAa,OAAO,IAAI;AAE5B,YAAI,OAAO,eAAe,YAAY;AACpC,iBAAO;AAAA,QACT,WAAW,eAAe,QAAW;AACnC,iBAAO,WAAW;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAA,cAAa,UAAU,aAAa,SAAS,aAAa;AACxD,aAAO,KAAK,eAAe,IAAI,eAAe,KAAK,OAAO,IAAI,CAAC;AAAA,IACjE;AAEA,aAAS,WAAW,KAAK,GAAG;AAC1B,UAAIG,QAAO,IAAI,MAAM,CAAC;AACtB,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE;AACvB,QAAAA,MAAK,CAAC,IAAI,IAAI,CAAC;AACjB,aAAOA;AAAA,IACT;AAEA,aAAS,UAAU,MAAM,OAAO;AAC9B,aAAO,QAAQ,IAAI,KAAK,QAAQ;AAC9B,aAAK,KAAK,IAAI,KAAK,QAAQ,CAAC;AAC9B,WAAK,IAAI;AAAA,IACX;AAEA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,MAAM,IAAI,MAAM,IAAI,MAAM;AAC9B,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,YAAI,CAAC,IAAI,IAAI,CAAC,EAAE,YAAY,IAAI,CAAC;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,KAAK,SAAS,MAAM;AAC3B,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,iBAAS,cAAc,KAAK;AAC1B,kBAAQ,eAAe,MAAM,QAAQ;AACrC,iBAAO,GAAG;AAAA,QACZ;AAEA,iBAAS,WAAW;AAClB,cAAI,OAAO,QAAQ,mBAAmB,YAAY;AAChD,oBAAQ,eAAe,SAAS,aAAa;AAAA,UAC/C;AACA,kBAAQ,CAAC,EAAE,MAAM,KAAK,SAAS,CAAC;AAAA,QAClC;AAAC;AAED,uCAA+B,SAAS,MAAM,UAAU,EAAE,MAAM,KAAK,CAAC;AACtE,YAAI,SAAS,SAAS;AACpB,wCAA8B,SAAS,eAAe,EAAE,MAAM,KAAK,CAAC;AAAA,QACtE;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,8BAA8B,SAAS,SAAS,OAAO;AAC9D,UAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,uCAA+B,SAAS,SAAS,SAAS,KAAK;AAAA,MACjE;AAAA,IACF;AAEA,aAAS,+BAA+B,SAAS,MAAM,UAAU,OAAO;AACtE,UAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,YAAI,MAAM,MAAM;AACd,kBAAQ,KAAK,MAAM,QAAQ;AAAA,QAC7B,OAAO;AACL,kBAAQ,GAAG,MAAM,QAAQ;AAAA,QAC3B;AAAA,MACF,WAAW,OAAO,QAAQ,qBAAqB,YAAY;AAGzD,gBAAQ,iBAAiB,MAAM,SAAS,aAAa,KAAK;AAGxD,cAAI,MAAM,MAAM;AACd,oBAAQ,oBAAoB,MAAM,YAAY;AAAA,UAChD;AACA,mBAAS,GAAG;AAAA,QACd,CAAC;AAAA,MACH,OAAO;AACL,cAAM,IAAI,UAAU,wEAAwE,OAAO,OAAO;AAAA,MAC5G;AAAA,IACF;AAAA;AAAA;;;AChfA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAOjB,aAASA,UAAS;AACd,UAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,aAAO;AAAA,IACX;AAAA;AAAA;;;ACbA;AAAA;AAAA,WAAO,UAAUC;AAQjB,aAASA,OAAMC,IAAG;AACd,UAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,aAAO;AAAA,IACX;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,YAAW,GAAG,GAAG,GAAG;AACzB,UAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,aAAO;AAAA,IACX;AAAA;AAAA;;;AChBA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,WAAU,KAAKC,IAAG;AACvB,UAAI,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC;AACX,UAAIC,OAAM,IAAE,IAAI,IAAE,IAAI,IAAE;AACxB,UAAIA,OAAM,GAAG;AAET,QAAAA,OAAM,IAAI,KAAK,KAAKA,IAAG;AACvB,YAAI,CAAC,IAAID,GAAE,CAAC,IAAIC;AAChB,YAAI,CAAC,IAAID,GAAE,CAAC,IAAIC;AAChB,YAAI,CAAC,IAAID,GAAE,CAAC,IAAIC;AAAA,MACpB;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACtBA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,KAAIC,IAAG,GAAG;AACf,aAAOA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAAA,IACjD;AAAA;AAAA;;;ACXA;AAAA;AAAA,WAAO,UAAUC;AAEjB,QAAIC,cAAa;AACjB,QAAIC,aAAY;AAChB,QAAIC,OAAM;AAQV,aAASH,OAAMI,IAAG,GAAG;AACjB,UAAI,QAAQH,YAAWG,GAAE,CAAC,GAAGA,GAAE,CAAC,GAAGA,GAAE,CAAC,CAAC;AACvC,UAAI,QAAQH,YAAW,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAEvC,MAAAC,WAAU,OAAO,KAAK;AACtB,MAAAA,WAAU,OAAO,KAAK;AAEtB,UAAI,SAASC,KAAI,OAAO,KAAK;AAE7B,UAAG,SAAS,GAAI;AACZ,eAAO;AAAA,MACX,OAAO;AACH,eAAO,KAAK,KAAK,MAAM;AAAA,MAC3B;AAAA,IACJ;AAAA;AAAA;;;AC1BA;AAAA;AAAA,WAAO,UAAUE;AASjB,aAASA,MAAK,KAAKC,IAAG;AAClB,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,aAAO;AAAA,IACX;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AAWjB,aAASA,KAAI,KAAK,GAAG,GAAG,GAAG;AACvB,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,aAAO;AAAA,IACX;AAAA;AAAA;;;AChBA;AAAA;AAAA,WAAO,UAAUC;AAEjB,QAAIC,WAAU;AASd,aAASD,QAAOE,IAAG,GAAG;AACpB,UAAI,KAAKA,GAAE,CAAC;AACZ,UAAI,KAAKA,GAAE,CAAC;AACZ,UAAIC,MAAKD,GAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AACZ,aAAQ,KAAK,IAAI,KAAK,EAAE,KAAKD,WAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KACvE,KAAK,IAAI,KAAK,EAAE,KAAKA,WAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KACvE,KAAK,IAAIE,MAAK,EAAE,KAAKF,WAAU,KAAK,IAAI,GAAK,KAAK,IAAIE,GAAE,GAAG,KAAK,IAAI,EAAE,CAAC;AAAA,IACjF;AAAA;AAAA;;;ACrBA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,aAAYC,IAAG,GAAG;AACzB,aAAOA,GAAE,CAAC,MAAM,EAAE,CAAC,KAAKA,GAAE,CAAC,MAAM,EAAE,CAAC,KAAKA,GAAE,CAAC,MAAM,EAAE,CAAC;AAAA,IACvD;AAAA;AAAA;;;ACXA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,KAAI,KAAKC,IAAG,GAAG;AACpB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,UAAS,KAAKC,IAAG,GAAG;AACzB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,UAAS,KAAKC,IAAG,GAAG;AACzB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,QAAO,KAAKC,IAAG,GAAG;AACvB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,KAAI,KAAKC,IAAG,GAAG;AACpB,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,KAAI,KAAKC,IAAG,GAAG;AACpB,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,UAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,OAAM,KAAKC,IAAG;AACrB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,MAAK,KAAKC,IAAG;AACpB,UAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,UAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,UAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,OAAM,KAAKC,IAAG;AACrB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,UAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,OAAM,KAAKC,IAAG,GAAG;AACtB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,UAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,aAAO;AAAA,IACX;AAAA;AAAA;;;ACfA;AAAA;AAAA,WAAO,UAAUC;AAWjB,aAASA,aAAY,KAAKC,IAAG,GAAGC,QAAO;AACnC,UAAI,CAAC,IAAID,GAAE,CAAC,IAAK,EAAE,CAAC,IAAIC;AACxB,UAAI,CAAC,IAAID,GAAE,CAAC,IAAK,EAAE,CAAC,IAAIC;AACxB,UAAI,CAAC,IAAID,GAAE,CAAC,IAAK,EAAE,CAAC,IAAIC;AACxB,aAAO;AAAA,IACX;AAAA;AAAA;;;AChBA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,UAASC,IAAG,GAAG;AACpB,UAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,GACd,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,GACd,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,aAAO,KAAK,KAAK,IAAE,IAAI,IAAE,IAAI,IAAE,CAAC;AAAA,IACpC;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,iBAAgBC,IAAG,GAAG;AAC3B,UAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,GACd,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,GACd,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,aAAO,IAAE,IAAI,IAAE,IAAI,IAAE;AAAA,IACzB;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAQjB,aAASA,QAAOC,IAAG;AACf,UAAI,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC;AACX,aAAO,KAAK,KAAK,IAAE,IAAI,IAAE,IAAI,IAAE,CAAC;AAAA,IACpC;AAAA;AAAA;;;ACbA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AAQjB,aAASA,eAAcC,IAAG;AACtB,UAAI,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC;AACX,aAAO,IAAE,IAAI,IAAE,IAAI,IAAE;AAAA,IACzB;AAAA;AAAA;;;ACbA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,QAAO,KAAKC,IAAG;AACpB,UAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,UAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,UAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,aAAO;AAAA,IACX;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,SAAQ,KAAKC,IAAG;AACvB,UAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,UAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,UAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACdA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,OAAM,KAAKC,IAAG,GAAG;AACtB,UAAI,KAAKA,GAAE,CAAC,GAAG,KAAKA,GAAE,CAAC,GAAG,KAAKA,GAAE,CAAC,GAC9B,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC;AAElC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,aAAO;AAAA,IACX;AAAA;AAAA;;;AClBA;AAAA;AAAA,WAAO,UAAUC;AAWjB,aAASA,MAAK,KAAKC,IAAG,GAAG,GAAG;AACxB,UAAI,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,UAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,UAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,aAAO;AAAA,IACX;AAAA;AAAA;;;ACnBA;AAAA;AAAA,WAAO,UAAUC;AASjB,aAASA,QAAO,KAAKC,QAAO;AACxB,MAAAA,SAAQA,UAAS;AAEjB,UAAI,IAAI,KAAK,OAAO,IAAI,IAAM,KAAK;AACnC,UAAI,IAAK,KAAK,OAAO,IAAI,IAAO;AAChC,UAAI,SAAS,KAAK,KAAK,IAAI,IAAE,CAAC,IAAIA;AAElC,UAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AACvB,UAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AACvB,UAAI,CAAC,IAAI,IAAIA;AACb,aAAO;AAAA,IACX;AAAA;AAAA;;;ACpBA;AAAA;AAAA,WAAO,UAAUC;AAWjB,aAASA,eAAc,KAAKC,IAAG,GAAG;AAC9B,UAAI,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC,GAC3B,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE;AAC9C,UAAI,KAAK;AACT,UAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK;AACpD,UAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK;AACpD,UAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK;AACrD,aAAO;AAAA,IACX;AAAA;AAAA;;;ACnBA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,eAAc,KAAKC,IAAG,GAAG;AAC9B,UAAI,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC;AAC/B,UAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,UAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,UAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,aAAO;AAAA,IACX;AAAA;AAAA;;;AChBA;AAAA;AAAA,WAAO,UAAUC;AAajB,aAASA,eAAc,KAAKC,IAAG,GAAG;AAI9B,UAAI,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,CAAC,GAC3B,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC;AAG7C,UAAI,KAAK,KAAK,IAAI,KAAK;AACvB,UAAI,KAAK,KAAK,IAAI,KAAK;AACvB,UAAI,KAAK,KAAK,IAAI,KAAK;AAGvB,YAAM;AACN,YAAM;AACN,YAAM;AAGN,UAAI,CAAC,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,UAAI,CAAC,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,UAAI,CAAC,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA;AAAA;;;ACpCA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,SAAQ,KAAKC,IAAG,GAAG,GAAE;AAC1B,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AAGZ,UAAI,KAAKA,GAAE,CAAC,IAAI;AAChB,UAAI,KAAKA,GAAE,CAAC,IAAI;AAEhB,UAAI,KAAK,KAAK,IAAI,CAAC;AACnB,UAAI,KAAK,KAAK,IAAI,CAAC;AAGnB,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAC7B,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAE7B,aAAO;AAAA,IACX;AAAA;AAAA;;;AC3BA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,SAAQ,KAAKC,IAAG,GAAG,GAAE;AAC1B,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AAGZ,UAAI,KAAKA,GAAE,CAAC,IAAI;AAChB,UAAI,KAAKA,GAAE,CAAC,IAAI;AAEhB,UAAI,KAAK,KAAK,IAAI,CAAC;AACnB,UAAI,KAAK,KAAK,IAAI,CAAC;AAGnB,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAC7B,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAE7B,aAAO;AAAA,IACX;AAAA;AAAA;;;AC3BA;AAAA;AAAA,WAAO,UAAUC;AAUjB,aAASA,SAAQ,KAAKC,IAAG,GAAG,GAAE;AAC1B,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,CAAC;AAGZ,UAAI,KAAKA,GAAE,CAAC,IAAI;AAChB,UAAI,KAAKA,GAAE,CAAC,IAAI;AAEhB,UAAI,KAAK,KAAK,IAAI,CAAC;AACnB,UAAI,KAAK,KAAK,IAAI,CAAC;AAGnB,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAC7B,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK;AAC7B,UAAI,CAAC,IAAIA,GAAE,CAAC;AAEZ,aAAO;AAAA,IACX;AAAA;AAAA;;;AC3BA;AAAA;AAAA,WAAO,UAAUC;AAEjB,QAAI,MAAM,iBAAoB;AAc9B,aAASA,SAAQC,IAAG,QAAQ,QAAQ,OAAO,IAAI,KAAK;AAC5C,UAAI,GAAG;AACP,UAAG,CAAC,QAAQ;AACR,iBAAS;AAAA,MACb;AAEA,UAAG,CAAC,QAAQ;AACR,iBAAS;AAAA,MACb;AAEA,UAAG,OAAO;AACN,YAAI,KAAK,IAAK,QAAQ,SAAU,QAAQA,GAAE,MAAM;AAAA,MACpD,OAAO;AACH,YAAIA,GAAE;AAAA,MACV;AAEA,WAAI,IAAI,QAAQ,IAAI,GAAG,KAAK,QAAQ;AAChC,YAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,YAAI,CAAC,IAAIA,GAAE,IAAE,CAAC;AACd,YAAI,CAAC,IAAIA,GAAE,IAAE,CAAC;AACd,WAAG,KAAK,KAAK,GAAG;AAChB,QAAAA,GAAE,CAAC,IAAI,IAAI,CAAC;AACZ,QAAAA,GAAE,IAAE,CAAC,IAAI,IAAI,CAAC;AACd,QAAAA,GAAE,IAAE,CAAC,IAAI,IAAI,CAAC;AAAA,MAClB;AAEA,aAAOA;AAAA,IACf;AAAA;AAAA;;;AC3CA;AAAA;AAAA,WAAO,UAAU;AAAA,MACf,SAAS;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,KAAK;AAAA,MACL,UAAU;AAAA,MACV,KAAK;AAAA,MACL,UAAU;AAAA,MACV,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,MACV,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,IACb;AAAA;AAAA;;;AC9CA;AAAA;AAAA;AAEA,aAAS,KAAK,GAAG;AACf,UAAI,SAAS,IAAI,MAAM,CAAC;AACxB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,eAAO,CAAC,IAAI;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACVjB;AAAA;AASA,WAAO,UAAU,SAAU,KAAK;AAC9B,aAAO,OAAO,SAAS,SAAS,GAAG,KAAK,aAAa,GAAG,KAAK,CAAC,CAAC,IAAI;AAAA,IACrE;AAEA,aAAS,SAAU,KAAK;AACtB,aAAO,CAAC,CAAC,IAAI,eAAe,OAAO,IAAI,YAAY,aAAa,cAAc,IAAI,YAAY,SAAS,GAAG;AAAA,IAC5G;AAGA,aAAS,aAAc,KAAK;AAC1B,aAAO,OAAO,IAAI,gBAAgB,cAAc,OAAO,IAAI,UAAU,cAAc,SAAS,IAAI,MAAM,GAAG,CAAC,CAAC;AAAA,IAC7G;AAAA;AAAA;;;ACpBA;AAAA;AAAA,QAAI,OAAO;AACX,QAAI,WAAW;AAEf,QAAI,iBAAoB,OAAO,iBAAkB;AAEjD,aAAS,WAAWC,IAAG,GAAG;AACxB,aAAOA,GAAE,CAAC,IAAI,EAAE,CAAC;AAAA,IACnB;AAEA,aAAS,QAAQ;AACf,UAAI,SAAS,KAAK;AAClB,UAAI,QAAQ,IAAI,MAAM,OAAO,MAAM;AACnC,UAAI;AACJ,WAAI,IAAE,GAAG,IAAE,MAAM,QAAQ,EAAE,GAAG;AAC5B,cAAM,CAAC,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC;AAAA,MACpC;AACA,YAAM,KAAK,UAAU;AACrB,UAAI,SAAS,IAAI,MAAM,MAAM,MAAM;AACnC,WAAI,IAAE,GAAG,IAAE,OAAO,QAAQ,EAAE,GAAG;AAC7B,eAAO,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC;AAAA,MACxB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB,OAAO,WAAW;AAC5C,UAAI,YAAY,CAAC,QAAQ,WAAW,KAAK,KAAK,EAAE,KAAK,EAAE;AACvD,UAAG,YAAY,GAAG;AAChB,oBAAY,aAAa;AAAA,MAC3B;AACA,UAAI,aAAc,UAAU;AAE5B,UAAG,cAAc,IAAI;AAEnB,YAAI,OACF,cAAY,YAAU,iCAChB,YAAU,6BACP,QAAM,oLAMG,YAAU,iHAGN,YAAU,oBAAkB,YAAU;AAC9D,YAAI,YAAY,IAAI,SAAS,IAAI;AACjC,eAAO,UAAU;AAAA,MACnB,WAAU,cAAc,GAAG;AAEzB,YAAI,OACF,cAAY,YAAU,qDAIhB,YAAU,6BACP,QAAM,+KAUC,YAAU,yBACnB,YAAU,kDAED,YAAU,+EAGG,YAAU,oBACnC,aAAa,+BAA+B,4BACtD,0BACqB,YAAU,qBACrB,aAAa,iCAAiC,8BAA4B,iCAExD,YAAU,0BAAwB,YAAU;AACpE,YAAI,YAAY,IAAI,SAAS,gBAAgB,IAAI;AACjD,eAAO,UAAU,oBAAoB,KAAK,EAAE,CAAC,CAAC;AAAA,MAChD;AAEA,UAAI,OAAO,CAAC,cAAc;AAG1B,UAAI,UAAU,KAAK,SAAS;AAC5B,UAAI,OAAO,QAAQ,IAAI,SAASC,IAAG;AAAE,eAAO,MAAIA;AAAA,MAAE,CAAC;AACnD,UAAI,YAAY,iBAAiB,QAAQ,IAAI,SAASA,IAAG;AACnD,eAAO,iBAAiBA,KAAI,QAAQA;AAAA,MACtC,CAAC,EAAE,KAAK,GAAG;AACf,UAAI,WAAW,QAAQ,IAAI,SAASA,IAAG;AACnC,eAAO,MAAIA;AAAA,MACb,CAAC,EAAE,KAAK,GAAG;AACb,UAAI,YAAY,QAAQ,IAAI,SAASA,IAAG;AACpC,eAAO,MAAIA;AAAA,MACb,CAAC,EAAE,KAAK,GAAG;AACb,WAAK;AAAA,QACH,cAAY,YAAU,QAAQ,WAAW,MAAM,YAAY;AAAA,QACzD,iBAAiB,WAAW;AAAA,QAC5B,kBAAkB,YAAY;AAAA,QAC9B;AAAA,QACF,eAAa,YAAU;AAAA,QACvB,kBAAgB,QAAM;AAAA,QACtB,qBAAmB;AAAA,MAAS;AAG9B,WAAK;AAAA,QAAK,sDAAoD,YAAU,oBACjE,QAAQ,IAAI,SAASA,IAAG;AAAE,iBAAO,gBAAcA,KAAE;AAAA,QAAI,CAAC,EAAE,KAAK,GAAG;AAAA,QACzE;AAAA,MAAK;AAGH,UAAG,cAAc,GAAG;AAClB,aAAK,KAAK,iBAAiB;AAAA,MAC7B,OAAO;AACL,aAAK,KAAK,2CAA2C;AACrD,YAAG,YAAY,GAAG;AAChB,eAAK,KAAK,cAAY,YAAU,WAAW;AAC3C,cAAG,cAAc,GAAG;AAClB,iBAAK,KAAK,2EAA2E;AAAA,UACvF,WAAU,cAAc,GAAG;AACzB,iBAAK;AAAA,cACb;AAAA,YAeK;AAAA,UACC;AAAA,QACF,OAAO;AACL,eAAK,KAAK,SAAS;AAAA,QACrB;AAAA,MACF;AAGA,WAAK;AAAA,QACP,wBAAsB,YAAU,UAAQ,KAAK,KAAK,GAAG,IAAE;AAAA,MAAM;AAC3D,UAAG,YAAY;AACb,aAAK,KAAK,0BAAwB,YAAU,MAAM;AAAA,MACpD,OAAO;AACL,aAAK,KAAK,sBAAoB,YAAU,MAAM;AAAA,MAChD;AAGA,WAAK,KAAK,wBAAsB,YAAU,UAAQ,KAAK,KAAK,GAAG,IAAE,IAAI;AACrE,UAAG,YAAY;AACb,aAAK,KAAK,0BAAwB,YAAU,IAAI;AAAA,MAClD,OAAO;AACL,aAAK,KAAK,sBAAoB,YAAU,IAAI;AAAA,MAC9C;AAGA,WAAK;AAAA,QACH,0BAAwB,YAAU;AAAA,QAAW,KAAK,KAAK;AAAA,QAAG,cAAY,YAAU;AAAA,MAAG;AAGrF,WAAK,KAAK,uBAAqB,YAAU,SAAO,KAAK,KAAK,GAAG,IAAE,kBAAgB,YAAU,gBACvF,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,CAAC,aAAYA,IAAE,kBAAiBA,IAAE,mBAAmBA,IAAG,OAAOA,IAAE,IAAI,EAAE,KAAK,EAAE;AAAA,MACvF,CAAC,EAAE,KAAK,GAAG,IAAE,MACb,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,iBAAeA,KAAI;AAAA,MAC5B,CAAC,EAAE,KAAK,GAAG,IAAE,gBAAgB;AAG/B,UAAI,SAAS,QAAQ,IAAI,SAASA,IAAG;AAAE,eAAO,MAAIA,KAAE,iBAAeA,KAAE;AAAA,MAAI,CAAC;AAC1E,UAAI,SAAS,QAAQ,IAAI,SAASA,IAAG;AAAE,eAAO,MAAIA,KAAE,kBAAgBA,KAAE;AAAA,MAAI,CAAC;AAC3E,WAAK,KAAK,uBAAqB,YAAU,SAAO,KAAK,KAAK,GAAG,IAAE,6BAA2B,OAAO,KAAK,GAAG,IAAE,MAAI,OAAO,KAAK,GAAG,CAAC;AAC/H,eAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,aAAK;AAAA,UACT,gBAAc,IAAE,mBAAiB,IAAE,aAC9B,IAAE,YACD,IAAE,SACL,IAAE;AAAA,QAAM;AAAA,MACT;AACA,WAAK,KAAK,gBAAc,YAAU,gBAChC,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAIA;AAAA,MACb,CAAC,EAAE,KAAK,GAAG,IAAE,MACb,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAIA;AAAA,MACb,CAAC,EAAE,KAAK,GAAG,IAAE,MAAM;AAGrB,WAAK,KAAK,yBAAuB,YAAU,WAAS,KAAK,KAAK,GAAG,IAAE,WACjE,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAIA,KAAE,iBAAeA,KAAE;AAAA,MAChC,CAAC,EAAE,KAAK,GAAG,IAAE,MACb,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAIA,KAAE,kBAAgBA,KAAE;AAAA,MACjC,CAAC,EAAE,KAAK,GAAG,IAAE,mCAAmC;AAClD,eAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,aAAK;AAAA,UACT,gBAAc,IAAE,qBACX,IAAE,oBAED,IAAE,QAAM,IAAE,UACb,IAAE,aAAW,IAAE,eAEf,IAAE,YAAU,IAAE,UAEd,IAAE;AAAA,QACH;AAAA,MACA;AACA,WAAK,KAAK,gBAAc,YAAU,gBAChC,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAMA;AAAA,MACf,CAAC,EAAE,KAAK,GAAG,IAAE,MACb,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,MAAMA;AAAA,MACf,CAAC,EAAE,KAAK,GAAG,IAAE,MAAM;AAGrB,UAAI,SAAS,IAAI,MAAM,SAAS;AAChC,UAAI,UAAU,IAAI,MAAM,SAAS;AACjC,eAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,eAAO,CAAC,IAAI,QAAM,IAAE;AACpB,gBAAQ,CAAC,IAAI,QAAM,IAAE;AAAA,MACvB;AACA,WAAK;AAAA,QAAK,8BAA4B,YAAU,gBAAc,OAAK,OACjE,KAAK,IAAI,SAAS,GAAE,KAAK;AAAE,iBAAO,IAAI,OAAO,IAAI,kBAAkB,MAAM,MAAM,IAAI;AAAA,QAAK,CAAC,EAAE,KAAK,GAAG;AAAA,QACnG,+CAA6C,YAAU,gBAAc,OAAO,KAAK,GAAG,IAAE,MAAI,QAAQ,KAAK,GAAG,IAAE;AAAA,MAAgB;AAG9H,WAAK,KAAK,yBAAuB,YAAU,WAAS,OAAK,+BAA+B;AACxF,eAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,aAAK,KAAK,gBAAc,IAAE,mBAAiB,IAAE,2BAAyB,IAAE,QAAM,IAAE,gCAA8B,IAAE,2BAAyB,IAAE,KAAK;AAAA,MAClJ;AACA,WAAK,KAAK,8DAA8D;AAGxE,WAAK,KAAK,+BAA6B,YAAU,2CAAyC,YAAU,WAClG,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,WAASA,KAAE;AAAA,MACpB,CAAC,EAAE,KAAK,GAAG,IAAE,MACb,QAAQ,IAAI,SAASA,IAAG;AACtB,eAAO,YAAUA,KAAE;AAAA,MACrB,CAAC,EAAE,KAAK,GAAG,IAAE,WAAW;AAG1B,UAAI,YAAY,IAAI,SAAS,aAAa,SAAS,KAAK,KAAK,IAAI,CAAC;AAClE,aAAO,UAAU,oBAAoB,KAAK,GAAG,KAAK;AAAA,IACpD;AAEA,aAAS,WAAW,MAAM;AACxB,UAAG,SAAS,IAAI,GAAG;AACjB,eAAO;AAAA,MACT;AACA,UAAG,gBAAgB;AACjB,gBAAO,OAAO,UAAU,SAAS,KAAK,IAAI,GAAG;AAAA,UAC3C,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,QACX;AAAA,MACF;AACA,UAAG,MAAM,QAAQ,IAAI,GAAG;AACtB,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,QAAI,sBAAsB;AAAA,MACxB,WAAU,CAAC;AAAA,MACX,WAAU,CAAC;AAAA,MACX,QAAO,CAAC;AAAA,MACR,SAAQ,CAAC;AAAA,MACT,SAAQ,CAAC;AAAA,MACT,SAAQ,CAAC;AAAA,MACT,UAAS,CAAC;AAAA,MACV,UAAS,CAAC;AAAA,MACV,SAAQ,CAAC;AAAA,MACT,iBAAgB,CAAC;AAAA,MACjB,YAAY,CAAC;AAAA,MACb,aAAa,CAAC;AAAA,MACd,UAAS,CAAC;AAAA,MACV,WAAU,CAAC;AAAA,IACb;AAQA,aAAS,mBAAmB,MAAM,OAAO,QAAQ,QAAQ;AACvD,UAAG,SAAS,QAAW;AACrB,YAAI,OAAO,oBAAoB,MAAM,CAAC;AACtC,eAAO,KAAK,CAAC,CAAC;AAAA,MAChB,WAAU,OAAO,SAAS,UAAU;AAClC,eAAO,CAAC,IAAI;AAAA,MACd;AACA,UAAG,UAAU,QAAW;AACtB,gBAAQ,CAAE,KAAK,MAAO;AAAA,MACxB;AACA,UAAI,IAAI,MAAM;AACd,UAAG,WAAW,QAAW;AACvB,iBAAS,IAAI,MAAM,CAAC;AACpB,iBAAQ,IAAE,IAAE,GAAG,KAAG,GAAG,KAAG,GAAG,EAAE,GAAG;AAC9B,iBAAO,CAAC,IAAI;AACZ,gBAAM,MAAM,CAAC;AAAA,QACf;AAAA,MACF;AACA,UAAG,WAAW,QAAW;AACvB,iBAAS;AACT,iBAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,cAAG,OAAO,CAAC,IAAI,GAAG;AAChB,uBAAW,MAAM,CAAC,IAAE,KAAG,OAAO,CAAC;AAAA,UACjC;AAAA,QACF;AAAA,MACF;AACA,UAAI,QAAQ,WAAW,IAAI;AAC3B,UAAI,YAAY,oBAAoB,KAAK;AACzC,aAAM,UAAU,UAAU,IAAE,GAAG;AAC7B,kBAAU,KAAK,mBAAmB,OAAO,UAAU,SAAO,CAAC,CAAC;AAAA,MAC9D;AACA,UAAI,OAAO,UAAU,IAAE,CAAC;AACxB,aAAO,KAAK,MAAM,OAAO,QAAQ,MAAM;AAAA,IACzC;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5VjB;AAAA;AAAA;AAEA,aAAS,cAAe,UACvB,IAAI,IAAI,IACRC,KAAI,IAAI,IACR,OAAO,SAAS,UAAU;AAQ1B,UAAI,IAAI,GACLC,SAAQ,KAAK,OACb,KAAKA,OAAM,EAAE,IAAI,GACjB,KAAKA,OAAM,EAAE,IAAI,GACjB,KAAKA,OAAM,EAAE,IAAI,GAEjB,QAASD,MAAK,IAAK,IAAI,IACvB,QAAS,KAAK,IAAK,IAAI,IACvB,QAAS,KAAK,IAAK,IAAI,IAGvB,UAAU,KAAK,IAAI,IAAIA,GAAE,GACzB,UAAU,KAAK,IAAI,IAAI,EAAE,GACzB,UAAU,KAAK,IAAI,IAAI,EAAE,GAEzB,QAAS,QAAQ,IAAM,KAAK,IAAI,KAAO,KAAK,IAC5C,QAAS,QAAQ,IAAM,KAAK,IAAI,KAAO,KAAK,IAC5C,QAAS,QAAQ,IAAM,KAAK,IAAI,KAAO,KAAK,IAG5C,QAAS,UAAU,WAAY,UAAU,QAAQ,UACjD,QAAS,UAAU,WAAY,UAAU,QAAQ,UACjD,QAAS,UAAU,WAAY,UAAU,QAAQ,UAEjD,eAAe;AAGlB,aAAO,KAAK,OAAO;AAGlB,YAAI,IAAI,SAAS,IAAI,IAAI,EAAE;AAC3B,YAAI,GAAG;AACN,cAAI,SAAS;AACZ,oBAAQ,CAAC,IAAI,KAAK,IAAIA;AACtB,oBAAQ,CAAC,IAAI,KAAK,IAAI;AACtB,oBAAQ,CAAC,IAAI,KAAK,IAAI;AAAA,UACvB;AACA,cAAI,UAAU;AACb,qBAAS,CAAC,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC,IAAI;AAC1C,gBAAI,iBAAiB,EAAG,UAAS,CAAC,IAAI,CAAC;AACvC,gBAAI,iBAAiB,EAAG,UAAS,CAAC,IAAI,CAAC;AACvC,gBAAI,iBAAiB,EAAG,UAAS,CAAC,IAAI,CAAC;AAAA,UACxC;AACA,iBAAO;AAAA,QACR;AAGA,YAAI,QAAQ,OAAO;AAClB,cAAI,QAAQ,OAAO;AAClB,kBAAM;AACN,gBAAI;AACJ,qBAAS;AACT,2BAAe;AAAA,UAChB,OAAO;AACN,kBAAM;AACN,gBAAI;AACJ,qBAAS;AACT,2BAAe;AAAA,UAChB;AAAA,QACD,OAAO;AACN,cAAI,QAAQ,OAAO;AAClB,kBAAM;AACN,gBAAI;AACJ,qBAAS;AACT,2BAAe;AAAA,UAChB,OAAO;AACN,kBAAM;AACN,gBAAI;AACJ,qBAAS;AACT,2BAAe;AAAA,UAChB;AAAA,QACD;AAAA,MAED;AAGA,UAAI,SAAS;AACZ,gBAAQ,CAAC,IAAI,KAAK,IAAIA;AACtB,gBAAQ,CAAC,IAAI,KAAK,IAAI;AACtB,gBAAQ,CAAC,IAAI,KAAK,IAAI;AAAA,MACvB;AACA,UAAI,UAAU;AACb,iBAAS,CAAC,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC,IAAI;AAAA,MAC3C;AAEA,aAAO;AAAA,IAER;AAKA,aAAS,SAAS,UAAU,QAAQ,WAAW,OAAO,SAAS,UAAU;AACxE,UAAI,KAAK,CAAC,OAAO,CAAC,GACf,KAAK,CAAC,OAAO,CAAC,GACd,KAAK,CAAC,OAAO,CAAC,GACdA,MAAK,CAAC,UAAU,CAAC,GACjB,KAAK,CAAC,UAAU,CAAC,GACjB,KAAK,CAAC,UAAU,CAAC,GACjB,KAAK,KAAK,KAAKA,MAAKA,MAAK,KAAK,KAAK,KAAK,EAAE;AAE7C,UAAI,OAAO,GAAG;AACb,cAAM,IAAI,MAAM,mCAAmC;AAAA,MACpD;AAEA,MAAAA,OAAM;AACN,YAAM;AACN,YAAM;AACN,UAAI,OAAQ,UAAW,aAAa;AACnC,gBAAQ;AAAA,MACT,OAAO;AACN,gBAAQ,CAAC;AAAA,MACV;AACA,aAAO,cAAc,UAAU,IAAI,IAAI,IAAIA,KAAI,IAAI,IAAI,OAAO,SAAS,QAAQ;AAAA,IAChF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjIjB;AAAA;AAAA;AAKA,QAAI,SAAS,CAAC;AACd,QAAI,UAAU,CAAC;AACf,QAAI,UAAU,CAAC;AACf,QAAI,WAAW,CAAC;AAChB,QAAI,aAAa,CAAC;AAClB,QAAI,YAAY,CAAC;AACjB,QAAI,UAAU,CAAC;AACf,QAAI,aAAa,CAAC;AAClB,QAAI,WAAW,CAAC;AAChB,QAAI,UAAU,CAAC;AACf,QAAI,WAAW,CAAC;AAChB,QAAI,aAAa,CAAC;AAMlB,aAAS,WAAW,UAAU,UAAU,KAAK,MAAME,MAAK,SAAS;AAS7D,UAAI,KAAK;AACT,UAAI,MAAM;AACV,UAAI,MAAM;AACV,UAAI,OAAO;AACX,UAAI,SAAS;AACb,UAAI,QAAQ;AACZ,UAAI,SAAS;AAEb,UAAIC,SAAQ,KAAK;AACjB,UAAI,eAAe;AACnB,UAAI,IAAI;AACR,UAAI,QAAQ;AACZ,UAAI,OAAO;AACX,UAAI,IAAI;AAIR,gBAAU;AACV,UAAI,UAAU,EAAG,QAAO;AAExB,aAAO,YAAY;AAGnB,aAAO,KAAK,OAAO;AAGf,YAAI,eAAe,IAAI,GAAG;AAEtB,cAAI,OAAO,gBAAgB;AAC3B,cAAI,KAAM,QAAO;AAAA,QACrB;AAEA,eAAO,YAAY;AAAA,MACvB;AAGA,sBAAgB;AAChB,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,aAAK,CAAC,KAAK,IAAI,CAAC;AAChB,QAAAD,KAAI,CAAC,KAAK,IAAI,CAAC;AAAA,MACnB;AACA,aAAO;AAOP,eAAS,YAAY;AAGjB,YAAI;AACJ,gBAAQ,KAAK,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;AACrE,YAAI,UAAU,EAAG;AACjB,iBAASE,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,cAAI,MAAO,IAAIA,EAAC,KAAK;AACrB,eAAKA,EAAC,IAAI,MAAM,IAAI;AAEpB,cAAI,OAAO,MAAMF,KAAIE,EAAC,IAAI,KAAKA,EAAC;AAChC,aAAGA,EAAC,IAAI,MAAM,KAAKA,EAAC,IAAIF,KAAIE,EAAC;AAE7B,cAAIA,EAAC,IAAI,cAAc,MAAM,KAAKA,EAAC,CAAC;AACpC,cAAIA,EAAC,IAAI,eAAe,GAAGA,EAAC,GAAG,KAAKA,EAAC,CAAC;AAEtC,iBAAOA,EAAC,IAAI,IAAIA,EAAC,IAAI;AAErB,iBAAOA,EAAC,IAAI,KAAK,IAAI,IAAI,OAAOA,EAAC,CAAC;AAElC,cAAIC,QAAO,MAAO,IAAID,EAAC,IAAI,IAAI,OAAS,OAAO,IAAIA,EAAC;AACpD,gBAAMA,EAAC,IAAK,OAAOA,EAAC,IAAI,WAAY,OAAOA,EAAC,IAAIC,QAAO;AAAA,QAC3D;AAAA,MAEJ;AAKA,eAAS,eAAe,QAAQ;AAC5B,YAAI,QAAQ,KAAK,CAAC;AAClB,YAAI,KAAM,WAAW,IAAK,IAAI,CAAC,IAAI,IAAI,CAAC;AACxC,YAAI,KAAK,IAAI,CAAC,IAAI;AAElB,YAAI,QAAQ,KAAK,CAAC;AAClB,YAAI,KAAM,WAAW,IAAK,IAAI,CAAC,IAAI,IAAI,CAAC;AACxC,YAAI,KAAK,IAAI,CAAC,IAAI;AAElB,YAAI,QAAQ,KAAK,CAAC;AAClB,YAAI,KAAM,WAAW,IAAK,IAAI,CAAC,IAAI,IAAI,CAAC;AACxC,YAAI,KAAK,IAAI,CAAC,IAAI;AAelB,iBAAS,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO;AAClC,mBAAS,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO;AAClC,qBAAS,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO;AAClC,kBAAI,SAAS,GAAG,GAAG,CAAC,EAAG,QAAO;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAKA,eAAS,kBAAkB;AAGvB,wBAAgB;AAChB,YAAI,MAAM,KAAK,IAAI;AAGnB,YAAIC,QAAO,IAAI;AACf,YAAI,OAAO;AACX,aAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,cAAIC,MAAK,IAAI,CAAC,IAAID;AAClB,eAAK,CAAC,KAAKC;AACX,UAAAL,KAAI,CAAC,KAAKK;AACV,eAAK,CAAC,IAAI,IAAI,CAAC,IAAIA;AAAA,QACvB;AAIA,YAAI,MAAM,GAAG;AACT,UAAAL,KAAI,IAAI,IAAI,KAAK,MAAMA,KAAI,IAAI,CAAC;AAAA,QACpC,OAAO;AACH,eAAK,IAAI,IAAI,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,QACtC;AAGA,YAAI,MAAM,SAAS,cAAc,MAAM,KAAK,IAAI;AAGhD,YAAI,IAAK,QAAO;AAGhB,aAAK,IAAI,GAAG,IAAI,GAAG,IAAK,KAAI,CAAC,IAAI,KAAK,CAAC;AACvC,kBAAU;AACV,YAAI,UAAU,EAAG,QAAO;AAExB,eAAO;AAAA,MACX;AAKA,eAAS,cAAc;AACnB,YAAIM,QAAQ,MAAM,CAAC,IAAI,MAAM,CAAC,IACxB,MAAM,CAAC,IAAI,MAAM,CAAC,IAAK,IAAI,IAC3B,MAAM,CAAC,IAAI,MAAM,CAAC,IAAK,IAAI;AACjC,YAAI,KAAK,MAAMA,KAAI,IAAI;AACvB,YAAI,MAAMA,KAAI;AACd,YAAIA,KAAI,KAAK,KAAKA,KAAI;AACtB,cAAMA,KAAI,KAAK,OAAOA,KAAI;AAC1B,aAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,aAAG,CAAC,KAAK,KAAK,OAAO,CAAC;AACtB,cAAI,CAAC,IAAI,eAAe,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QAC1C;AAEA,eAAOA;AAAA,MACX;AAIA,eAAS,cAAc,OAAOC,OAAM;AAChC,eAAON,OAAM,QAAQM,QAAO,OAAO;AAAA,MACvC;AACA,eAAS,eAAe,OAAOA,OAAM;AACjC,eAAON,OAAM,QAAQM,QAAO,OAAO;AAAA,MACvC;AAAA,IAEJ;AAQA,aAASC,OAAM,UAAU,KAAK,KAAK,UAAU,aAAa,SAAS;AAE/D,UAAI,MAAM;AACV,UAAI,OAAO;AACX,UAAIR,OAAM;AACV,UAAI,SAAS;AAGb,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACf,QAAAA,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;AACnB,aAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC;AAAA,MACzB;AAEA,UAAI,CAAC,QAAS,WAAU;AAGxB,UAAIG,QAAO,WAAW,UAAU,UAAU,KAAK,MAAMH,MAAK,OAAO;AAGjE,UAAI,CAAC,aAAa;AACd,aAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,iBAAO,CAAC,IAAK,IAAI,CAAC,IAAI,IAAKA,KAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC;AAAA,QACzE;AACA,YAAI,UAAU,MAAM;AAAA,MACxB;AAGA,aAAOG;AAAA,IACX;AAEA,WAAO,UAAUK;AAAA;AAAA;;;AC5PjB;AAAA;AAeA,WAAO,UAAU,MAAM,UAAU;AAAA,MAE7B,cAAc;AACV,aAAK,OAAO,CAAC;AACb,aAAK,OAAO,CAAC;AACb,aAAK,OAAO,CAAC;AACb,aAAK,mBAAmB,CAAC;AAAA,MAC7B;AAAA;AAAA,MAIA,IAAI,IAAI,aAAa;AACjB,YAAI,OAAO,KAAK,KAAK,EAAE,MAAM,UAAU;AAEnC,cAAI,QAAQ,KAAK,KAAK,EAAE;AACxB,eAAK,KAAK,EAAE,IAAI;AAChB,eAAK,KAAK,KAAK,IAAI;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,EAAE,IAAI,KAAK,KAAK;AAC1B,eAAK,KAAK,EAAE,IAAI;AAChB,eAAK,KAAK,KAAK,WAAW;AAAA,QAC9B;AAAA,MACJ;AAAA;AAAA,MAIA,OAAO,IAAI;AACP,YAAI,QAAQ,KAAK,KAAK,EAAE;AACxB,aAAK,KAAK,EAAE,IAAI;AAChB,aAAK,KAAK,KAAK,IAAI;AACnB,aAAK,iBAAiB,KAAK,EAAE;AAAA,MACjC;AAAA;AAAA,MAIA,UAAU;AACN,aAAK,OAAO;AACZ,aAAK,OAAO;AACZ,aAAK,OAAO;AACZ,aAAK,iBAAiB,SAAS;AAAA,MACnC;AAAA;AAAA,MAIA,QAAQ;AACJ,iBAAS,IAAI,GAAG,IAAI,KAAK,iBAAiB,QAAQ,KAAK;AACnD,cAAI,KAAK,KAAK,iBAAiB,CAAC;AAEhC,cAAI,KAAK,KAAK,EAAE,MAAM,KAAM;AAC5B,wBAAc,MAAM,EAAE;AAAA,QAC1B;AACA,aAAK,iBAAiB,SAAS;AAAA,MACnC;AAAA,IAEJ;AAWA,aAAS,cAAc,MAAM,IAAI;AAE7B,UAAI,QAAQ,KAAK,KAAK,EAAE;AAExB,aAAO,KAAK,KAAK,EAAE;AACnB,aAAO,KAAK,KAAK,EAAE;AAEnB,UAAI,UAAU,KAAK,KAAK,SAAS,GAAG;AAChC,aAAK,KAAK,IAAI;AAAA,MAClB,OAAO;AAEH,YAAI,UAAU,KAAK,KAAK,IAAI;AAC5B,aAAK,KAAK,KAAK,IAAI;AAEnB,YAAI,YAAY,QAAQ,QAAQ,CAAC,MAAM,MAAM;AAEzC,cAAI,YAAY,KAAK,KAAK;AAC1B,mBAAS,UAAU,KAAK,MAAM;AAC1B,gBAAI,KAAK,KAAK,MAAM,MAAM,WAAW;AACjC,mBAAK,KAAK,MAAM,IAAI;AACpB;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,OAAO;AACH,cAAI,YAAY,QAAQ,QAAQ,QAAQ,CAAC,EAAE;AAC3C,eAAK,KAAK,SAAS,IAAI;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AC5GA;AAAA;AACA,WAAO,UAAUC;AACjB,QAAI,YAAY;AA0BhB,aAASA,OAAM;AACd,UAAI,OAAO;AAYX,WAAK,aAAa,CAAC;AACnB,WAAK,QAAQ,KAAK;AAUlB,UAAI,aAAa,KAAK;AAGtB,UAAI,MAAM;AAIV,UAAI,UAAU,CAAC;AAGf,UAAI,UAAU,CAAC;AACf,UAAI,gBAAgB,CAAC;AAGrB,UAAI,YAAY;AAAA,QACf,SAAS;AAAA,QACT,UAAU,CAAC;AAAA,QACX,YAAY,CAAC;AAAA,MACd;AAGA,WAAK,WAAW;AAChB,WAAK,WAAW;AAChB,WAAK,iBAAiB;AA2BtB,WAAK,eAAe,SAAU,UAAU;AACvC,YAAI,KAAK;AACT,YAAI,MAAM,QAAQ,QAAQ,GAAG;AAC5B,mBAAS,QAAQ,cAAY,KAAK,aAAa,IAAI,QAAQ,CAAC;AAAA,QAC7D;AACA,eAAO;AAAA,MACR;AAWA,WAAK,eAAe,SAAU,OAAO;AAGpC,eAAO,KAAK,OAAO,EAAE,QAAQ,cAAY;AACxC,cAAI,OAAO,QAAQ,QAAQ;AAC3B,cAAI,KAAK,KAAK,KAAK,GAAG;AACrB,4BAAgB,OAAO,QAAQ;AAAA,UAChC;AAAA,QACD,CAAC;AACD,eAAO;AAAA,MACR;AAoCA,WAAK,kBAAkB,SAAU,UAAU;AAC1C,YAAI,CAAC,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC7D,YAAI,OAAO,SAAS;AACpB,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,iDAAiD;AAC5E,YAAI,OAAO,SAAS,SAAU,OAAM,IAAI,MAAM,kCAAkC;AAChF,YAAI,SAAS,GAAI,OAAM,IAAI,MAAM,4CAA4C;AAC7E,YAAI,QAAQ,IAAI,EAAG,OAAM,IAAI,MAAM,aAAa,IAAI,kBAAkB;AAGtE,YAAI,cAAc,CAAC;AACnB,oBAAY,OAAO;AACnB,oBAAY,QAAQ,CAAC,CAAC,SAAS;AAC/B,oBAAY,QAAQ,MAAM,SAAS,KAAK,IAAI,KAAK,SAAS;AAC1D,oBAAY,QAAQ,SAAS,SAAS,CAAC;AACvC,oBAAY,QAAQ,SAAS,SAAS;AACtC,oBAAY,WAAW,SAAS,YAAY;AAC5C,oBAAY,SAAS,SAAS,UAAU;AACxC,oBAAY,eAAe,SAAS,gBAAgB;AAEpD,mBAAW,IAAI,IAAI;AACnB,gBAAQ,IAAI,IAAI,IAAI,UAAU;AAC9B,gBAAQ,IAAI,EAAE,uBAAuB;AACrC,gBAAQ,IAAI,EAAE,mBAAoB,YAAY,QAAS,CAAC,IAAI;AAE5D,YAAI,YAAY,QAAQ;AACvB,kBAAQ,KAAK,IAAI;AACjB,kBAAQ,KAAK,CAACC,IAAG,MAAM,WAAWA,EAAC,EAAE,QAAQ,WAAW,CAAC,EAAE,KAAK;AAAA,QACjE;AACA,YAAI,YAAY,cAAc;AAC7B,wBAAc,KAAK,IAAI;AACvB,wBAAc,KAAK,CAACA,IAAG,MAAM,WAAWA,EAAC,EAAE,QAAQ,WAAW,CAAC,EAAE,KAAK;AAAA,QACvE;AAEA,eAAO;AAAA,MACR;AA4BA,WAAK,qBAAqB,SAAU,UAAU,UAAU;AACvD,YAAI,MAAM,WAAW,QAAQ;AAC7B,YAAI,CAAC,IAAK,OAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;AAC1D,YAAI,CAAC,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC7D,YAAI,IAAI,SAAS,SAAS,KAAM,OAAM,IAAI,MAAM,wDAAwD;AAGxG,YAAI,cAAc,CAAC;AACnB,oBAAY,OAAO;AACnB,oBAAY,QAAQ,CAAC,CAAC,SAAS;AAC/B,oBAAY,QAAQ,MAAM,SAAS,KAAK,IAAI,KAAK,SAAS;AAC1D,oBAAY,QAAQ,SAAS,SAAS,CAAC;AACvC,oBAAY,QAAQ,SAAS,SAAS;AACtC,oBAAY,WAAW,SAAS,YAAY;AAC5C,oBAAY,SAAS,SAAS,UAAU;AACxC,oBAAY,eAAe,SAAS,gBAAgB;AAGpD,mBAAW,QAAQ,IAAI;AACvB,gBAAQ,QAAQ,EAAE,uBAAuB;AACzC,gBAAQ,QAAQ,EAAE,mBAAoB,YAAY,QAAS,CAAC,IAAI;AAEhE,YAAI,KAAK,QAAQ,QAAQ,QAAQ;AACjC,YAAI,YAAY,UAAU,KAAK,EAAG,SAAQ,KAAK,QAAQ;AACvD,YAAI,CAAC,YAAY,UAAU,MAAM,EAAG,SAAQ,OAAO,IAAI,CAAC;AACxD,gBAAQ,KAAK,CAACA,IAAG,MAAM,WAAWA,EAAC,EAAE,QAAQ,WAAW,CAAC,EAAE,KAAK;AAEhE,YAAI,KAAK,cAAc,QAAQ,QAAQ;AACvC,YAAI,YAAY,gBAAgB,KAAK,EAAG,eAAc,KAAK,QAAQ;AACnE,YAAI,CAAC,YAAY,gBAAgB,MAAM,EAAG,eAAc,OAAO,IAAI,CAAC;AACpE,sBAAc,KAAK,CAACA,IAAG,MAAM,WAAWA,EAAC,EAAE,QAAQ,WAAW,CAAC,EAAE,KAAK;AAItE,YAAI,YAAY,YAAY;AAC5B,aAAK,cAAc,QAAQ,EAAE,QAAQ,WAAS;AAC7C,mBAAS,OAAO,WAAW;AAC1B,gBAAI,EAAE,OAAO,OAAQ,OAAM,GAAG,IAAI,UAAU,GAAG;AAAA,UAChD;AAEA,cAAI,YAAY,MAAO,aAAY,MAAM,MAAM,MAAM,KAAK;AAAA,QAC3D,CAAC;AAGD,eAAO;AAAA,MACR;AAqBA,WAAK,kBAAkB,SAAU,UAAU;AAC1C,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;AAE3D,aAAK,MAAM;AACX,aAAK,KAAK,QAAQ,SAAO;AACxB,cAAI,CAAC,IAAK;AACV,cAAI,KAAK,IAAI,QAAQ,IAAI,CAAC,EAAE;AAC5B,0BAAgB,IAAI,QAAQ;AAAA,QAC7B,CAAC;AAED,YAAI,IAAI,QAAQ,QAAQ,QAAQ;AAChC,YAAI,IAAI,cAAc,QAAQ,QAAQ;AACtC,YAAI,IAAI,GAAI,SAAQ,OAAO,GAAG,CAAC;AAC/B,YAAI,IAAI,GAAI,eAAc,OAAO,GAAG,CAAC;AAErC,gBAAQ,QAAQ,EAAE,QAAQ;AAC1B,eAAO,QAAQ,QAAQ;AACvB,eAAO,WAAW,QAAQ;AAE1B,eAAO;AAAA,MACR;AAiBA,WAAK,eAAe,SAAU,OAAO,UAAU,OAAO;AACrD,YAAI,MAAM,WAAW,QAAQ;AAC7B,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAG5D,YAAI,KAAK,KAAK,KAAK,KAAK,CAAC,IAAI,OAAO;AACnC,gBAAM,IAAI,MAAM,UAAU,KAAK,2BAA2B,QAAQ,GAAG;AAAA,QACtE;AAGA,YAAI,WAAW,OAAO,OAAO,CAAC,GAAG,EAAE,MAAM,MAAM,GAAG,IAAI,OAAO,KAAK;AAGlE,iBAAS,OAAO;AAGhB,YAAI,IAAI,OAAO;AACd,cAAI,YAAY,KAAK,KAAK,KAAK;AAC/B,cAAI,CAAC,WAAW;AACf,wBAAY,CAAC;AACb,iBAAK,IAAI,OAAO,SAAS;AAAA,UAC1B;AACA,oBAAU,KAAK,QAAQ;AAAA,QACxB,OAAO;AACN,eAAK,IAAI,OAAO,QAAQ;AAAA,QACzB;AAGA,YAAI,IAAI,MAAO,KAAI,MAAM,OAAO,QAAQ;AAExC,eAAO;AAAA,MACR;AAaA,WAAK,eAAe,SAAU,OAAO,UAAU;AAC9C,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAC5D,eAAO,CAAC,CAAC,KAAK,KAAK,KAAK;AAAA,MACzB;AAeA,WAAK,kBAAkB,SAAU,OAAO,UAAU;AACjD,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAG5D,wBAAgB,OAAO,QAAQ;AAE/B,eAAO;AAAA,MACR;AAqBA,WAAK,WAAW,SAAU,OAAO,UAAU;AAC1C,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAC5D,eAAO,KAAK,KAAK,KAAK;AAAA,MACvB;AAoBA,WAAK,gBAAgB,SAAU,UAAU;AACxC,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAC5D,0BAAkB,IAAI;AACtB,eAAO,KAAK;AAAA,MACb;AAsBA,WAAK,mBAAmB,SAAU,UAAU;AAC3C,YAAI,CAAC,QAAQ,QAAQ,EAAG,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AACzE,YAAI,OAAO,QAAQ,QAAQ,EAAE;AAC7B,eAAO,CAAC,OAAO,KAAK,EAAE;AAAA,MACvB;AAoBA,WAAK,uBAAuB,SAAU,UAAU;AAC/C,YAAI,CAAC,QAAQ,QAAQ,EAAG,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AACzE,YAAI,OAAO,QAAQ,QAAQ,EAAE;AAC7B,eAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE;AAAA,MACzB;AA8BA,WAAK,OAAO,SAAU,IAAI;AACzB,0BAAkB;AAClB,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,cAAI,WAAW,QAAQ,CAAC;AACxB,cAAI,OAAO,WAAW,QAAQ;AAC9B,cAAI,OAAO,QAAQ,QAAQ;AAC3B,eAAK,OAAO,IAAI,KAAK,IAAI;AACzB,4BAAkB;AAAA,QACnB;AACA,eAAO;AAAA,MACR;AAuBA,WAAK,SAAS,SAAU,IAAI;AAC3B,0BAAkB;AAClB,iBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC9C,cAAI,WAAW,cAAc,CAAC;AAC9B,cAAI,OAAO,WAAW,QAAQ;AAC9B,cAAI,OAAO,QAAQ,QAAQ;AAC3B,eAAK,aAAa,IAAI,KAAK,IAAI;AAC/B,4BAAkB;AAAA,QACnB;AACA,eAAO;AAAA,MACR;AAoBA,WAAK,uBAAuB,SAAU,OAAO,UAAU,OAAO;AAC7D,YAAI,MAAM,WAAW,QAAQ;AAC7B,YAAI,OAAO,QAAQ,QAAQ;AAC3B,YAAI,CAAC,KAAM,OAAM,IAAI,MAAM,sBAAsB,QAAQ,GAAG;AAC5D,YAAI,CAAC,IAAI,MAAO,OAAM,IAAI,MAAM,oDAAoD;AAGpF,+BAAuB,OAAO,KAAK,MAAM,KAAK;AAE9C,eAAO;AAAA,MACR;AAyBA,eAAS,gBAAgB,OAAO,UAAU;AACzC,YAAI,MAAM,WAAW,QAAQ;AAC7B,YAAI,OAAO,QAAQ,QAAQ;AAI3B,YAAI,QAAQ,KAAK,KAAK,KAAK;AAC3B,YAAI,CAAC,MAAO;AAGZ,aAAK,OAAO,KAAK;AAGjB,YAAI,IAAI,UAAU;AACjB,cAAI,IAAI,OAAO;AACd,kBAAM,QAAQ,CAAAC,WAAS;AACtB,kBAAIA,OAAO,KAAI,SAAS,OAAOA,MAAK;AAAA,YACrC,CAAC;AACD,kBAAM,SAAS;AAAA,UAChB,OAAO;AACN,gBAAI,SAAS,OAAO,KAAK;AAAA,UAC1B;AAAA,QACD;AAEA,kBAAU,SAAS,KAAK,IAAI;AAC5B,sBAAc;AAAA,MACf;AAIA,eAAS,uBAAuB,OAAO,KAAK,MAAM,OAAO;AAExD,YAAI,YAAY,KAAK,KAAK,KAAK;AAC/B,YAAI,CAAC,UAAW;AAGhB,YAAI,QAAQ,UAAU,KAAK;AAC3B,YAAI,CAAC,MAAO;AAGZ,kBAAU,KAAK,IAAI;AACnB,YAAI,IAAI,SAAU,KAAI,SAAS,OAAO,KAAK;AAE3C,kBAAU,WAAW,KAAK,EAAE,OAAO,KAAK,CAAC;AACzC,sBAAc;AAAA,MACf;AASA,eAAS,gBAAgB;AACxB,YAAI,UAAU,QAAS;AACvB,kBAAU,UAAU;AACpB,mBAAW,iBAAiB,CAAC;AAAA,MAC9B;AAEA,eAAS,kBAAkB;AAC1B,kBAAU,UAAU;AACpB,0BAAkB;AAAA,MACnB;AAYA,eAAS,oBAAoB;AAC5B,YAAI,UAAU,WAAW,QAAQ;AAChC,mCAAyB,UAAU,UAAU;AAAA,QAC9C;AACA,YAAI,UAAU,SAAS,QAAQ;AAC9B,mCAAyB,UAAU,QAAQ;AAAA,QAC5C;AAAA,MACD;AAGA,eAAS,yBAAyB,MAAM;AACvC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,cAAI,EAAE,OAAO,KAAK,IAAI,KAAK,CAAC;AAC5B,cAAI,YAAY,KAAK,KAAK,KAAK;AAC/B,cAAI,CAAC,UAAW;AAChB,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,gBAAI,UAAU,CAAC,EAAG;AAClB,sBAAU,OAAO,GAAG,CAAC;AACrB;AAAA,UACD;AAEA,cAAI,UAAU,WAAW,GAAG;AAC3B,iBAAK,OAAO,KAAK;AACjB,sBAAU,SAAS,KAAK,IAAI;AAAA,UAC7B;AAAA,QACD;AACA,aAAK,SAAS;AAAA,MACf;AAGA,eAAS,yBAAyB,MAAM;AACvC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,cAAI,OAAO,KAAK,CAAC;AACjB,eAAK,MAAM;AAAA,QACZ;AACA,aAAK,SAAS;AAAA,MACf;AAAA,IAID;AAAA;AAAA;;;AC1uBA;AAAA;AAAA;AAAA;AAYA,QAAI,WAAW;AAGf,YAAQ,WAAY;AACpB,YAAQ,UAAa;AACrB,YAAQ,UAAY,MAAK,WAAS;AAGlC,YAAQ,OAAO,SAAS,GAAG;AACzB,cAAQ,IAAI,MAAM,IAAI;AAAA,IACxB;AAGA,YAAQ,MAAM,SAAS,GAAG;AACxB,UAAI,OAAO,KAAM,WAAS;AAC1B,cAAQ,IAAI,QAAQ;AAAA,IACtB;AAGA,YAAQ,MAAM,SAAS,GAAG,GAAG;AAC3B,aAAO,KAAM,IAAI,KAAK,EAAE,IAAI;AAAA,IAC9B;AAGA,YAAQ,MAAM,SAAS,GAAG,GAAG;AAC3B,aAAO,KAAM,IAAI,KAAK,EAAE,IAAI;AAAA,IAC9B;AAGA,YAAQ,SAAS,SAAS,GAAG;AAC3B,aAAO,EAAE,IAAK,IAAE,MAAQ,CAAC,CAAC;AAAA,IAC5B;AAGA,YAAQ,OAAO,SAAS,GAAG;AACzB,UAAI,GAAG;AACP,WAAS,IAAI,UAAW;AAAG,aAAO;AAClC,eAAS,IAAI,QAAW;AAAG,aAAO;AAAO,WAAK;AAC9C,eAAS,IAAI,OAAW;AAAG,aAAO;AAAO,WAAK;AAC9C,eAAS,IAAI,MAAW;AAAG,aAAO;AAAO,WAAK;AAC9C,aAAO,IAAK,KAAK;AAAA,IACnB;AAGA,YAAQ,QAAQ,SAAS,GAAG;AAC1B,aAAS,KAAK,MAAc,IAAK,KAAK,MAAa,IAAK,KAAK,MAAY,IAChE,KAAK,MAAW,IAAK,KAAK,MAAU,IAAK,KAAK,MAAS,IACvD,KAAK,MAAQ,IAAK,KAAK,MAAO,IAAK,KAAK,KAAM,IAAI;AAAA,IAC7D;AAGA,YAAQ,WAAW,SAAS,GAAG;AAC7B,UAAI,KAAM,MAAM,IAAK;AACrB,WAAK,IAAI,cAAgB,MAAM,IAAK;AACpC,cAAS,KAAK,MAAM,KAAK,aAAa,aAAe;AAAA,IACvD;AAGA,aAAS,mBAAmB,GAAG;AAC7B,UAAI,IAAI;AACR,WAAK,CAAC;AACN,UAAI,EAAG;AACP,UAAI,IAAI,MAAY,MAAK;AACzB,UAAI,IAAI,SAAY,MAAK;AACzB,UAAI,IAAI,UAAY,MAAK;AACzB,UAAI,IAAI,UAAY,MAAK;AACzB,UAAI,IAAI,WAAY,MAAK;AACzB,aAAO;AAAA,IACT;AACA,YAAQ,qBAAqB;AAG7B,YAAQ,WAAW,SAAS,GAAG;AAC7B,WAAK,MAAM;AACX,QAAE;AACF,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,aAAO,IAAI;AAAA,IACb;AAGA,YAAQ,WAAW,SAAS,GAAG;AAC7B,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,aAAO,KAAK,MAAI;AAAA,IAClB;AAGA,YAAQ,SAAS,SAAS,GAAG;AAC3B,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK;AACL,aAAQ,UAAW,IAAK;AAAA,IAC1B;AAEA,QAAI,gBAAgB,IAAI,MAAM,GAAG;AAEjC,KAAC,SAAS,KAAK;AACb,eAAQ,IAAE,GAAG,IAAE,KAAK,EAAE,GAAG;AACvB,YAAI,IAAI,GAAG,IAAI,GAAG,IAAI;AACtB,aAAK,OAAO,GAAG,GAAG,OAAO,GAAG;AAC1B,gBAAM;AACN,eAAK,IAAI;AACT,YAAE;AAAA,QACJ;AACA,YAAI,CAAC,IAAK,KAAK,IAAK;AAAA,MACtB;AAAA,IACF,GAAG,aAAa;AAGhB,YAAQ,UAAU,SAAS,GAAG;AAC5B,aAAS,cAAe,IAAY,GAAI,KAAK,KACpC,cAAe,MAAM,IAAM,GAAI,KAAK,KACpC,cAAe,MAAM,KAAM,GAAI,KAAK,IACpC,cAAe,MAAM,KAAM,GAAI;AAAA,IAC1C;AAGA,YAAQ,cAAc,SAAS,GAAG,GAAG;AACnC,WAAK;AACL,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AAErB,WAAK;AACL,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AAErB,aAAO,IAAK,KAAK;AAAA,IACnB;AAGA,YAAQ,gBAAgB,SAAS,GAAG,GAAG;AACrC,UAAK,MAAM,IAAK;AAChB,WAAK,IAAK,MAAM,KAAO;AACvB,WAAK,IAAK,MAAM,KAAO;AACvB,WAAK,IAAK,MAAM,KAAO;AACvB,WAAK,IAAK,MAAM,MAAO;AACvB,aAAQ,KAAK,MAAO;AAAA,IACtB;AAIA,YAAQ,cAAc,SAAS,GAAG,GAAG,GAAG;AACtC,WAAK;AACL,WAAM,IAAK,KAAG,MAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AAErB,WAAK;AACL,WAAM,IAAK,KAAG,MAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,KAAK;AAEX,WAAK;AACL,WAAM,IAAK,KAAG,MAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AACrB,WAAM,IAAK,KAAG,KAAO;AAErB,aAAO,IAAK,KAAK;AAAA,IACnB;AAGA,YAAQ,gBAAgB,SAAS,GAAG,GAAG;AACrC,UAAK,MAAM,IAAW;AACtB,WAAK,IAAK,MAAI,KAAQ;AACtB,WAAK,IAAK,MAAI,KAAQ;AACtB,WAAK,IAAK,MAAI,KAAQ;AACtB,WAAK,IAAK,MAAI,MAAQ;AACtB,aAAQ,KAAG,MAAK;AAAA,IAClB;AAGA,YAAQ,kBAAkB,SAAS,GAAG;AACpC,UAAI,IAAI,IAAK,IAAI;AACjB,aAAQ,IAAI,KAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,MAAQ,mBAAmB,CAAC,IAAI;AAAA,IAClE;AAAA;AAAA;;;AC1MA;AAAA;AAAA;AAEA,aAAS,WAAW,OAAO,OAAO,GAAG;AACnC,UAAI,IAAI,MAAM,CAAC,IAAE;AACjB,UAAG,KAAK,GAAG;AACT,eAAO,CAAC;AAAA,MACV;AACA,UAAI,SAAS,IAAI,MAAM,CAAC,GAAG;AAC3B,UAAG,MAAM,MAAM,SAAO,GAAG;AACvB,aAAI,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACjB,iBAAO,CAAC,IAAI;AAAA,QACd;AAAA,MACF,OAAO;AACL,aAAI,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACjB,iBAAO,CAAC,IAAI,WAAW,OAAO,OAAO,IAAE,CAAC;AAAA,QAC1C;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,OAAO,OAAO;AACjC,UAAI,QAAQ;AACZ,eAAS,IAAI,MAAM,KAAK;AACxB,WAAI,IAAE,GAAG,IAAE,OAAO,EAAE,GAAG;AACrB,eAAO,CAAC,IAAI;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAEA,aAAS,KAAK,OAAO,OAAO;AAC1B,UAAG,OAAO,UAAU,aAAa;AAC/B,gBAAQ;AAAA,MACV;AACA,cAAO,OAAO,OAAO;AAAA,QACnB,KAAK;AACH,cAAG,QAAQ,GAAG;AACZ,mBAAO,YAAY,QAAM,GAAG,KAAK;AAAA,UACnC;AACF;AAAA,QACA,KAAK;AACH,cAAG,OAAQ,MAAM,WAAY,UAAU;AACrC,mBAAO,WAAW,OAAO,OAAO,CAAC;AAAA,UACnC;AACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChDjB,IAAAC,qBAAA;AAAA;AAOA,WAAO,UAAU,SAAS,SAAU,KAAK;AACvC,aAAO,OAAO,QAAQ,IAAI,eAAe,QACvC,OAAO,IAAI,YAAY,aAAa,cAAc,IAAI,YAAY,SAAS,GAAG;AAAA,IAClF;AAAA;AAAA;;;ACVA;AAAA;AAAA;AAEA,QAAI,OAAO;AACX,QAAI,MAAM;AACV,QAAI,WAAW;AAGf,QAAG,CAAC,OAAO,mBAAmB;AAC5B,aAAO,oBAAoB;AAAA,QACvB,OAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,QAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,QAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,MAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,OAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,OAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,OAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,QAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,MAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,QAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,QACrB,QAAU,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,MACzB;AAAA,IACF;AAEA,QAAI,YAAa,OAAO,sBAAuB;AAC/C,QAAI,OAAO,OAAO;AAGlB,QAAG,CAAC,KAAK,QAAQ;AACf,WAAK,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,IAC3B;AACA,QAAG,CAAC,KAAK,QAAQ;AACf,WAAK,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;AAAA,IAC3B;AAGA,QAAI,OAAU,KAAK;AAAnB,QACI,SAAU,KAAK;AAEnB,YAAQ,OAAO,SAAS,KAAK,OAAO;AAClC,UAAG,SAAS,KAAK,GAAG;AAClB,eAAO,KAAK,KAAK,MAAM,MAAM,CAAC,EAAE,KAAK,KAAK;AAAA,MAC5C,OAAO;AACL,YAAG,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,wBAAwB;AACnE,kBAAQ,MAAM;AAAA,QAChB;AACA,YAAG,CAAC,OAAO;AACT;AAAA,QACF;AACA,YAAI,IAAI,MAAM,UAAU,MAAM;AAC9B,YAAI,QAAQ,KAAK,KAAK,CAAC,IAAE;AACzB,aAAK,KAAK,EAAE,KAAK,KAAK;AAAA,MACxB;AAAA,IACF;AAEA,aAAS,gBAAgB,QAAQ;AAC/B,UAAG,CAAC,QAAQ;AACV;AAAA,MACF;AACA,UAAI,IAAI,OAAO,UAAU,OAAO;AAChC,UAAI,QAAQ,KAAK,KAAK,CAAC;AACvB,WAAK,KAAK,EAAE,KAAK,MAAM;AAAA,IACzB;AAEA,aAAS,eAAe,OAAO;AAC7B,sBAAgB,MAAM,MAAM;AAAA,IAC9B;AAEA,YAAQ,YACR,QAAQ,aACR,QAAQ,aACR,QAAQ,WACR,QAAQ,YACR,QAAQ,YACR,QAAQ,cACR,QAAQ,YACR,QAAQ,cACR,QAAQ,aACR,QAAQ,mBACR,QAAQ,eAAe;AAEvB,YAAQ,kBAAkB;AAE1B,YAAQ,aAAa,SAAS,WAAW,OAAO;AAC9C,aAAO,KAAK,KAAK,MAAM,MAAM,CAAC,EAAE,KAAK,KAAK;AAAA,IAC5C;AAEA,YAAQ,SAAS,SAAS,OAAO,GAAG,OAAO;AACzC,UAAG,UAAU,UAAa,UAAU,eAAe;AACjD,eAAO,kBAAkB,CAAC;AAAA,MAC5B,OAAO;AACL,gBAAO,OAAO;AAAA,UACZ,KAAK;AACH,mBAAO,YAAY,CAAC;AAAA,UACtB,KAAK;AACH,mBAAO,aAAa,CAAC;AAAA,UACvB,KAAK;AACH,mBAAO,aAAa,CAAC;AAAA,UACvB,KAAK;AACH,mBAAO,WAAW,CAAC;AAAA,UACrB,KAAK;AACH,mBAAO,YAAY,CAAC;AAAA,UACtB,KAAK;AACH,mBAAO,YAAY,CAAC;AAAA,UACtB,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,YAAY,CAAC;AAAA,UACtB,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,aAAa,CAAC;AAAA,UACvB,KAAK;AACH,mBAAO,mBAAmB,CAAC;AAAA,UAC7B,KAAK;AACH,kBAAM;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,eAAe,CAAC;AAAA,UAEzB;AACE,mBAAO;AAAA,QACX;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB,GAAG;AAC5B,UAAI,IAAI,KAAK,SAAS,CAAC;AACvB,UAAI,QAAQ,KAAK,KAAK,CAAC;AACvB,UAAI,IAAI,KAAK,KAAK;AAClB,UAAG,EAAE,SAAS,GAAG;AACf,eAAO,EAAE,IAAI;AAAA,MACf;AACA,aAAO,IAAI,YAAY,CAAC;AAAA,IAC1B;AACA,YAAQ,oBAAoB;AAE5B,aAAS,YAAY,GAAG;AACtB,aAAO,IAAI,WAAW,kBAAkB,CAAC,GAAG,GAAG,CAAC;AAAA,IAClD;AACA,YAAQ,cAAc;AAEtB,aAAS,aAAa,GAAG;AACvB,aAAO,IAAI,YAAY,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACrD;AACA,YAAQ,eAAe;AAEvB,aAAS,aAAa,GAAG;AACvB,aAAO,IAAI,YAAY,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACrD;AACA,YAAQ,eAAe;AAEvB,aAAS,WAAW,GAAG;AACrB,aAAO,IAAI,UAAU,kBAAkB,CAAC,GAAG,GAAG,CAAC;AAAA,IACjD;AACA,YAAQ,aAAa;AAErB,aAAS,YAAY,GAAG;AACtB,aAAO,IAAI,WAAW,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACpD;AACA,YAAQ,cAAc;AAEtB,aAAS,YAAY,GAAG;AACtB,aAAO,IAAI,WAAW,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACpD;AACA,YAAQ,cAAc;AAEtB,aAAS,YAAY,GAAG;AACtB,aAAO,IAAI,aAAa,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACtD;AACA,YAAQ,gBAAgB,QAAQ,cAAc;AAE9C,aAAS,aAAa,GAAG;AACvB,aAAO,IAAI,aAAa,kBAAkB,IAAE,CAAC,GAAG,GAAG,CAAC;AAAA,IACtD;AACA,YAAQ,gBAAgB,QAAQ,eAAe;AAE/C,aAAS,mBAAmB,GAAG;AAC7B,UAAG,WAAW;AACZ,eAAO,IAAI,kBAAkB,kBAAkB,CAAC,GAAG,GAAG,CAAC;AAAA,MACzD,OAAO;AACL,eAAO,YAAY,CAAC;AAAA,MACtB;AAAA,IACF;AACA,YAAQ,qBAAqB;AAE7B,aAAS,eAAe,GAAG;AACzB,aAAO,IAAI,SAAS,kBAAkB,CAAC,GAAG,GAAG,CAAC;AAAA,IAChD;AACA,YAAQ,iBAAiB;AAEzB,YAAQ,aAAa,SAAS,aAAa;AACzC,eAAQ,IAAE,GAAG,IAAE,IAAI,EAAE,GAAG;AACtB,aAAK,MAAM,CAAC,EAAE,SAAS;AACvB,aAAK,OAAO,CAAC,EAAE,SAAS;AACxB,aAAK,OAAO,CAAC,EAAE,SAAS;AACxB,aAAK,KAAK,CAAC,EAAE,SAAS;AACtB,aAAK,MAAM,CAAC,EAAE,SAAS;AACvB,aAAK,MAAM,CAAC,EAAE,SAAS;AACvB,aAAK,MAAM,CAAC,EAAE,SAAS;AACvB,aAAK,OAAO,CAAC,EAAE,SAAS;AACxB,aAAK,OAAO,CAAC,EAAE,SAAS;AACxB,aAAK,CAAC,EAAE,SAAS;AACjB,eAAO,CAAC,EAAE,SAAS;AAAA,MACrB;AAAA,IACF;AAAA;AAAA;;;AC3MA;AAAA;AAAA;AAKA,WAAO,UAAU;AAEjB,QAAI,qBAAqB;AAEzB,aAAS,QAAQ,MAAM,IAAI;AACzB,UAAI,MAAM,IAAE,oBAAoB;AAC9B,sBAAc,GAAG,KAAK,GAAG,IAAI;AAAA,MAC/B,OAAO;AACL,kBAAU,GAAG,KAAK,GAAG,IAAI;AAAA,MAC3B;AAAA,IACF;AAEA,aAAS,cAAc,MAAM,OAAO,MAAM;AACxC,UAAI,MAAM,KAAG,OAAK;AAClB,eAAQ,IAAE,OAAK,GAAG,KAAG,OAAO,EAAE,GAAG;AAC/B,YAAIC,KAAI,KAAK,KAAK;AAClB,YAAI,IAAI,KAAK,KAAK;AAClB,YAAI,IAAI;AACR,YAAI,OAAO,MAAI;AACf,eAAM,MAAM,MAAM;AAChB,cAAI,IAAI,KAAK,OAAK,CAAC;AACnB,cAAI,IAAI,KAAK,OAAK,CAAC;AACnB,cAAG,IAAIA,IAAG;AACR;AAAA,UACF,WAAU,MAAMA,MAAK,IAAI,GAAG;AAC1B;AAAA,UACF;AACA,eAAK,IAAI,IAAM;AACf,eAAK,OAAK,CAAC,IAAI;AACf,kBAAQ;AAAA,QACV;AACA,aAAK,IAAI,IAAMA;AACf,aAAK,OAAK,CAAC,IAAI;AAAA,MACjB;AAAA,IACF;AAEA,aAAS,KAAK,GAAG,GAAG,MAAM;AACxB,WAAK;AACL,WAAK;AACL,UAAI,IAAI,KAAK,CAAC;AACd,UAAI,IAAI,KAAK,IAAE,CAAC;AAChB,WAAK,CAAC,IAAI,KAAK,CAAC;AAChB,WAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AACpB,WAAK,CAAC,IAAI;AACV,WAAK,IAAE,CAAC,IAAI;AAAA,IACd;AAEA,aAAS,KAAK,GAAG,GAAG,MAAM;AACxB,WAAK;AACL,WAAK;AACL,WAAK,CAAC,IAAI,KAAK,CAAC;AAChB,WAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AAAA,IACtB;AAEA,aAAS,OAAO,GAAG,GAAG,GAAG,MAAM;AAC7B,WAAK;AACL,WAAK;AACL,WAAK;AACL,UAAI,IAAI,KAAK,CAAC;AACd,UAAI,IAAI,KAAK,IAAE,CAAC;AAChB,WAAK,CAAC,IAAI,KAAK,CAAC;AAChB,WAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AACpB,WAAK,CAAC,IAAI,KAAK,CAAC;AAChB,WAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AACpB,WAAK,CAAC,IAAI;AACV,WAAK,IAAE,CAAC,IAAI;AAAA,IACd;AAEA,aAAS,aAAa,GAAG,GAAG,IAAI,IAAI,MAAM;AACxC,WAAK;AACL,WAAK;AACL,WAAK,CAAC,IAAI,KAAK,CAAC;AAChB,WAAK,CAAC,IAAI;AACV,WAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AACpB,WAAK,IAAE,CAAC,IAAI;AAAA,IACd;AAEA,aAAS,QAAQ,GAAG,GAAG,MAAM;AAC3B,WAAK;AACL,WAAK;AACL,UAAI,IAAI,KAAK,CAAC,GACV,IAAI,KAAK,CAAC;AACd,UAAG,IAAI,GAAG;AACR,eAAO;AAAA,MACT,WAAU,MAAM,GAAG;AACjB,eAAO,KAAK,IAAE,CAAC,IAAI,KAAK,IAAE,CAAC;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,GAAG,GAAG,GAAG,MAAM;AACnC,WAAK;AACL,UAAI,IAAI,KAAK,CAAC;AACd,UAAG,IAAI,GAAG;AACR,eAAO;AAAA,MACT,WAAU,MAAM,GAAG;AACjB,eAAO,KAAK,IAAE,CAAC,IAAI;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,MAAM,OAAO,MAAM;AACpC,UAAI,SAAS,QAAQ,OAAO,KAAK,IAAI,GACjC,SAAS,OAAO,OAChB,SAAS,QAAQ,OACjB,SAAS,OAAO,SAAS,GACzB,SAAS,SAAS,OAClB,SAAS,SAAS,OAClB,MAAM,QACN,MAAM,QACN,MAAM,QACN,MAAM,QACN,MAAM,QACN,OAAO,OAAO,GACd,QAAQ,QAAQ,GAChB,MAAM;AACV,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AACA,UAAG,QAAQ,KAAK,KAAK,IAAI,GAAG;AAC1B,cAAM;AACN,cAAM;AACN,cAAM;AAAA,MACR;AAEA,UAAI,UAAU,KAAK,IAAE,GAAG;AACxB,UAAI,UAAU,KAAK,IAAE,MAAI,CAAC;AAC1B,UAAI,UAAU,KAAK,IAAE,GAAG;AACxB,UAAI,UAAU,KAAK,IAAE,MAAI,CAAC;AAE1B,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,UAAI,OAAO,IAAI;AACf,eAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC7B,YAAI,IAAI,KAAK,OAAK,EAAE;AACpB,YAAI,IAAI,KAAK,OAAK,EAAE;AACpB,YAAI,IAAI,KAAK,OAAK,EAAE;AACpB,aAAK,OAAK,EAAE,IAAI;AAChB,aAAK,OAAK,EAAE,IAAI;AAChB,aAAK,OAAK,EAAE,IAAI;AAAA,MAClB;AAEA,WAAK,QAAQ,MAAM,IAAI;AACvB,WAAK,QAAQ,OAAO,IAAI;AACxB,eAAS,IAAI,MAAM,KAAK,OAAO,EAAE,GAAG;AAClC,YAAI,aAAa,GAAG,SAAS,SAAS,IAAI,GAAG;AAC3C,cAAI,MAAM,MAAM;AACd,iBAAK,GAAG,MAAM,IAAI;AAAA,UACpB;AACA,YAAE;AAAA,QACJ,OAAO;AACL,cAAI,CAAC,aAAa,GAAG,SAAS,SAAS,IAAI,GAAG;AAC5C,mBAAO,MAAM;AACX,kBAAI,CAAC,aAAa,OAAO,SAAS,SAAS,IAAI,GAAG;AAChD,oBAAI,EAAE,QAAQ,GAAG;AACf;AAAA,gBACF;AACA;AAAA,cACF,OAAO;AACL,oBAAI,aAAa,OAAO,SAAS,SAAS,IAAI,GAAG;AAC/C,yBAAO,GAAG,MAAM,OAAO,IAAI;AAC3B,oBAAE;AACF,oBAAE;AAAA,gBACJ,OAAO;AACL,uBAAK,GAAG,OAAO,IAAI;AACnB,oBAAE;AAAA,gBACJ;AACA;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,mBAAa,MAAM,OAAK,GAAG,SAAS,SAAS,IAAI;AACjD,mBAAa,OAAO,QAAM,GAAG,SAAS,SAAS,IAAI;AACnD,UAAI,OAAO,IAAI,QAAQ,oBAAoB;AACzC,sBAAc,MAAM,OAAO,GAAG,IAAI;AAAA,MACpC,OAAO;AACL,kBAAU,MAAM,OAAO,GAAG,IAAI;AAAA,MAChC;AACA,UAAI,SAAS,QAAQ,MAAM,oBAAoB;AAC7C,sBAAc,QAAQ,GAAG,OAAO,IAAI;AAAA,MACtC,OAAO;AACL,kBAAU,QAAQ,GAAG,OAAO,IAAI;AAAA,MAClC;AACA,UAAI,QAAQ,QAAQ,oBAAoB;AACtC,sBAAc,MAAM,OAAO,IAAI;AAAA,MACjC,OAAO;AACL,kBAAU,MAAM,OAAO,IAAI;AAAA,MAC7B;AAAA,IACF;AAAA;AAAA;;;AC3OA;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA,MACf,MAAgB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,OAAQ;AACZ,QAAI,OAAQ;AACZ,QAAI,QAAQ;AAGZ,QAAI,YAAa,KAAG;AAGpB,QAAI,gBAAqB;AACzB,QAAI,kBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,kBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,mBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,mBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,qBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,qBAAqB,KAAK,YAAY,aAAa;AACvD,QAAI,eAAqB,KAAK,aAAa,gBAAgB,CAAC;AAG5D,aAAS,OAAO,OAAO;AACrB,UAAI,SAAS,KAAK,SAAS,KAAK;AAChC,UAAG,gBAAgB,SAAS,QAAQ;AAClC,aAAK,KAAK,eAAe;AACzB,0BAAkB,KAAK,YAAY,MAAM;AAAA,MAC3C;AACA,UAAG,gBAAgB,SAAS,QAAQ;AAClC,aAAK,KAAK,eAAe;AACzB,0BAAkB,KAAK,YAAY,MAAM;AAAA,MAC3C;AACA,UAAG,iBAAiB,SAAS,QAAQ;AACnC,aAAK,KAAK,gBAAgB;AAC1B,2BAAmB,KAAK,YAAY,MAAM;AAAA,MAC5C;AACA,UAAG,iBAAiB,SAAS,QAAQ;AACnC,aAAK,KAAK,gBAAgB;AAC1B,2BAAmB,KAAK,YAAY,MAAM;AAAA,MAC5C;AACA,UAAG,mBAAmB,SAAS,QAAQ;AACrC,aAAK,KAAK,kBAAkB;AAC5B,6BAAqB,KAAK,YAAY,MAAM;AAAA,MAC9C;AACA,UAAG,mBAAmB,SAAS,QAAQ;AACrC,aAAK,KAAK,kBAAkB;AAC5B,6BAAqB,KAAK,YAAY,MAAM;AAAA,MAC9C;AACA,UAAI,cAAc,IAAI;AACtB,UAAG,aAAa,SAAS,aAAa;AACpC,aAAK,KAAK,YAAY;AACtB,uBAAe,KAAK,aAAa,WAAW;AAAA,MAC9C;AAAA,IACF;AAGA,aAAS,MAAM,OAAO,OAAO,OAAO,MAAM;AACxC,UAAI,MAAM,MAAM,IAAI;AACpB,UAAI,MAAM,MAAM,QAAM,CAAC;AACvB,YAAM,GAAG,IAAI;AACb,YAAM,GAAG,IAAI;AAAA,IACf;AAGA,aAAS,OAAO,OAAO,OAAO,OAAO,MAAM;AACzC,YAAM,KAAK,IAAI;AACf,YAAM,IAAI,IAAK;AAAA,IACjB;AAGA,aAAS,eACL,GAAG,OACH,UAAW,QAAQ,KAAK,UACxB,WAAW,SAAS,MAAM,WAAW;AASvC,UAAI,MAAW;AACf,UAAI,WAAW,IAAE;AACjB,UAAI,SAAW,IAAE;AACjB,UAAI,OAAW,WAAS;AAExB,eAAQ,IAAE,UAAU,IAAE,QAAQ,EAAE,GAAG;AACjC,YAAI,MAAM,SAAS,CAAC;AACpB,YAAI,YAAY,WAAS;AACzB,qBAAa,KAAK,IAAI,IAAI,YAAU,MAAM;AAC1C,qBAAa,KAAK,IAAI,EAAE,MAAI;AAC5B,qBAAa,KAAK,IAAI,IAAI,YAAU,IAAI;AACxC,qBAAa,KAAK,IAAI;AAAA,MACxB;AAEA,eAAQ,IAAE,WAAW,IAAE,SAAS,EAAE,GAAG;AACnC,YAAI,MAAM,UAAU,CAAC,IAAE;AACvB,YAAI,aAAa,WAAS;AAC1B,qBAAa,KAAK,IAAI,KAAK,aAAW,MAAM;AAC5C,qBAAa,KAAK,IAAI,CAAC;AACvB,qBAAa,KAAK,IAAI,KAAK,aAAW,IAAI;AAC1C,qBAAa,KAAK,IAAI;AAAA,MACxB;AAGA,UAAI,IAAI,QAAQ;AAChB,YAAM,cAAc,CAAC;AAErB,UAAI,YAAa;AACjB,UAAI,aAAa;AACjB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,YAAI,IAAI,aAAa,IAAE,IAAE,CAAC,IAAE;AAC5B,YAAG,KAAK,WAAW;AAEjB,cAAK,IAAE,YAAW;AAClB,gBAAM,kBAAkB,kBAAkB,cAAc,CAAC;AAAA,QAC3D,WAAU,KAAK,GAAG;AAEhB,gBAAM,iBAAiB,iBAAiB,aAAa,CAAC;AAAA,QACxD,WAAU,KAAK,CAAC,WAAW;AAEzB,cAAK,CAAC,IAAE,YAAW;AACnB,mBAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,gBAAI,SAAS,MAAM,gBAAgB,CAAC,GAAG,CAAC;AACxC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO,kBAAkB,kBAAkB,cAAc,CAAC;AAAA,QAC5D,OAAO;AAEL,cAAK,CAAC,IAAE,IAAG;AACX,mBAAQ,IAAE,GAAG,IAAE,YAAY,EAAE,GAAG;AAC9B,gBAAI,SAAS,MAAM,GAAG,iBAAiB,CAAC,CAAC;AACzC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO,iBAAiB,iBAAiB,aAAa,CAAC;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAGA,aAAS,cAAc,GAAG,OACxB,UAAU,QAAQ,KAAK,UACvB,WAAW,SAAS,MAAM,WAAW;AAErC,UAAI,MAAW;AACf,UAAI,WAAW,IAAE;AACjB,UAAI,SAAW,IAAE;AACjB,UAAI,OAAW,WAAS;AAExB,eAAQ,IAAE,UAAU,IAAE,QAAQ,EAAE,GAAG;AACjC,YAAI,MAAO,SAAS,CAAC,IAAE,KAAI;AAC3B,YAAI,YAAY,WAAS;AACzB,qBAAa,KAAK,IAAI,IAAI,YAAU,MAAM;AAC1C,qBAAa,KAAK,IAAI,CAAC;AACvB,qBAAa,KAAK,IAAI,IAAI,YAAU,IAAI;AACxC,qBAAa,KAAK,IAAI;AAAA,MACxB;AAEA,eAAQ,IAAE,WAAW,IAAE,SAAS,EAAE,GAAG;AACnC,YAAI,MAAO,UAAU,CAAC,IAAE,KAAI;AAC5B,YAAI,aAAa,WAAS;AAC1B,qBAAa,KAAK,IAAI,KAAK,aAAW,MAAM;AAC5C,qBAAa,KAAK,IAAK,CAAC,MAAK;AAC7B,qBAAa,KAAK,IAAI,KAAK,aAAW,IAAI;AAC1C,qBAAa,KAAK,IAAI,MAAI;AAAA,MAC5B;AAGA,UAAI,IAAI,QAAQ;AAChB,YAAM,cAAc,CAAC;AAErB,UAAI,YAAe;AACnB,UAAI,aAAe;AACnB,UAAI,eAAe;AACnB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,YAAI,IAAQ,aAAa,IAAE,IAAE,CAAC,IAAE;AAChC,YAAI,QAAQ,IAAE;AACd,YAAG,IAAI,IAAE,KAAM,KAAG,MAAQ,aAAa,IAAE,IAAE,CAAC,KAAG,GAAI;AACjD,kBAAQ;AACR,eAAK;AAAA,QACP;AAEA,YAAG,IAAI,GAAG;AAER,cAAI,KAAK,EAAE,KAAG,KAAK;AAGnB,mBAAQ,IAAE,GAAG,IAAE,cAAc,EAAE,GAAG;AAChC,gBAAI,SAAS,MAAM,mBAAmB,CAAC,GAAG,EAAE;AAC5C,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,cAAG,UAAU,GAAG;AAEd,qBAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,kBAAI,SAAS,MAAM,gBAAgB,CAAC,GAAG,EAAE;AACzC,kBAAG,WAAW,QAAQ;AACpB,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAEA,cAAG,UAAU,GAAG;AAEd,qBAAQ,IAAE,GAAG,IAAE,YAAY,EAAE,GAAG;AAC9B,kBAAI,SAAS,MAAM,iBAAiB,CAAC,GAAG,EAAE;AAC1C,kBAAG,WAAW,QAAQ;AACpB,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAEA,cAAG,UAAU,GAAG;AAEd,mBAAO,iBAAiB,iBAAiB,aAAa,EAAE;AAAA,UAC1D,WAAU,UAAU,GAAG;AAErB,mBAAO,kBAAkB,kBAAkB,cAAc,EAAE;AAAA,UAC7D,WAAU,UAAU,GAAG;AAErB,mBAAO,oBAAoB,oBAAoB,gBAAgB,EAAE;AAAA,UACnE;AAAA,QACF,OAAO;AAEL,cAAI,MAAM,KAAG,KAAK;AAClB,cAAG,UAAU,GAAG;AAEd,kBAAM,iBAAiB,iBAAiB,aAAa,EAAE;AAAA,UACzD,WAAU,UAAU,GAAG;AAErB,kBAAM,kBAAkB,kBAAkB,cAAc,EAAE;AAAA,UAC5D,WAAU,UAAU,GAAG;AAErB,kBAAM,oBAAoB,oBAAoB,gBAAgB,EAAE;AAAA,UAClE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAKA,aAAS,cACP,GAAG,MAAM,OAAO,MAChB,UAAW,QAAQ,KAAK,UACxB,WAAW,SAAS,MAAM,WAAW;AAErC,UAAI,MAAW;AACf,UAAI,WAAW,IAAE;AACjB,UAAI,SAAW;AACf,UAAI,OAAW,OAAK;AAEpB,UAAI,WAAY;AAChB,UAAI,YAAY;AAChB,UAAG,MAAM;AACP,oBAAY;AAAA,MACd,OAAO;AACL,mBAAY;AAAA,MACd;AAEA,eAAQ,IAAE,UAAU,IAAE,QAAQ,EAAE,GAAG;AACjC,YAAI,MAAM,IAAI;AACd,YAAI,YAAY,WAAS;AACzB,qBAAa,KAAK,IAAI,IAAI,YAAU,MAAM;AAC1C,qBAAa,KAAK,IAAI,CAAC;AACvB,qBAAa,KAAK,IAAI,IAAI,YAAU,IAAI;AACxC,qBAAa,KAAK,IAAI;AAAA,MACxB;AACA,eAAQ,IAAE,WAAW,IAAE,SAAS,EAAE,GAAG;AACnC,YAAI,MAAM,IAAI;AACd,YAAI,aAAa,WAAS;AAC1B,qBAAa,KAAK,IAAI,KAAK,aAAW,MAAM;AAC5C,qBAAa,KAAK,IAAI,CAAC;AAAA,MACzB;AAGA,UAAI,IAAI,QAAQ;AAChB,YAAM,cAAc,CAAC;AAErB,UAAI,YAAe;AACnB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,YAAI,IAAI,aAAa,IAAE,IAAE,CAAC,IAAE;AAC5B,YAAG,IAAI,GAAG;AACR,cAAI,MAAQ,CAAC;AACb,cAAI,QAAQ;AACZ,cAAG,OAAO,WAAW;AACnB,oBAAQ,CAAC;AACT,mBAAO;AAAA,UACT,OAAO;AACL,oBAAQ,CAAC,CAAC;AACV,mBAAO;AAAA,UACT;AACA,cAAG,OAAO;AACR,mBAAO,iBAAiB,iBAAiB,aAAa,GAAG;AAAA,UAC3D,OAAO;AACL,gBAAI,SAAU,UAAU,GAAG;AAC3B,gBAAI,UAAU,WAAW;AAEzB,gBAAI,KAAK,KAAK,UAAQ,OAAK,CAAC;AAC5B,gBAAI,KAAK,KAAK,UAAQ,OAAK,IAAE,CAAC;AAEtC;AACQ,uBAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,oBAAI,OAAS,gBAAgB,CAAC;AAC9B,oBAAI,SAAS,WAAW;AAExB,oBAAG,KAAK,IAAI,SAAO,OAAK,CAAC,KACtB,IAAI,SAAO,OAAK,IAAE,CAAC,IAAI,IAAI;AAC5B;AAAA,gBACF;AAEA,yBAAQ,IAAE,OAAK,GAAG,IAAE,GAAG,EAAE,GAAG;AAC1B,sBAAG,KAAK,UAAU,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,KACtC,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,GAAG;AAC1C,6BAAS;AAAA,kBACX;AAAA,gBACF;AAEA,oBAAI,QAAS,SAAS,IAAI;AAC1B,oBAAI;AACJ,oBAAG,MAAM;AACP,2BAAS,MAAM,QAAQ,KAAK;AAAA,gBAC9B,OAAO;AACL,2BAAS,MAAM,OAAO,MAAM;AAAA,gBAC9B;AACA,oBAAG,WAAW,QAAQ;AACpB,yBAAO;AAAA,gBACT;AAAA,cACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,gBAAM,iBAAiB,iBAAiB,aAAa,IAAI,QAAQ;AAAA,QACnE;AAAA,MACF;AAAA,IACF;AAEA,aAAS,aACP,GAAG,MAAM,OACT,UAAW,QAAQ,KAAK,UACxB,WAAW,SAAS,MAAM,WAAW;AAErC,UAAI,MAAW;AACf,UAAI,WAAW,IAAE;AACjB,UAAI,SAAW;AACf,UAAI,OAAW,OAAK;AAEpB,eAAQ,IAAE,UAAU,IAAE,QAAQ,EAAE,GAAG;AACjC,YAAI,MAAM,IAAI;AACd,YAAI,YAAY,WAAS;AACzB,qBAAa,KAAK,IAAI,IAAI,YAAU,MAAM;AAC1C,qBAAa,KAAK,IAAI,CAAC;AACvB,qBAAa,KAAK,IAAI,IAAI,YAAU,IAAI;AACxC,qBAAa,KAAK,IAAI;AAAA,MACxB;AACA,eAAQ,IAAE,WAAW,IAAE,SAAS,EAAE,GAAG;AACnC,YAAI,MAAM,IAAI;AACd,YAAI,aAAa,WAAS;AAC1B,qBAAa,KAAK,IAAI,KAAK,aAAW,MAAM;AAC5C,qBAAa,KAAK,IAAI,CAAC;AAAA,MACzB;AAGA,UAAI,IAAI,QAAQ;AAChB,YAAM,cAAc,CAAC;AAErB,UAAI,YAAe;AACnB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,YAAI,IAAI,aAAa,IAAE,IAAE,CAAC,IAAE;AAC5B,YAAG,IAAI,GAAG;AACR,cAAI,MAAQ,CAAC;AACb,cAAG,OAAO,WAAW;AACnB,4BAAgB,WAAW,IAAI,MAAM;AAAA,UACvC,OAAO;AACL,mBAAO;AACP,gBAAI,SAAU,UAAU,GAAG;AAC3B,gBAAI,UAAU,WAAW;AAEzB,gBAAI,KAAK,KAAK,UAAQ,OAAK,CAAC;AAC5B,gBAAI,KAAK,KAAK,UAAQ,OAAK,IAAE,CAAC;AAEtC;AACQ,uBAAQ,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC7B,oBAAI,OAAS,gBAAgB,CAAC;AAC9B,oBAAI,QAAS,SAAS,IAAI;AAE1B,oBAAG,UAAU,QAAQ;AACnB;AAAA,gBACF;AAEA,oBAAI,SAAS,WAAW;AACxB,oBAAG,KAAK,IAAI,SAAO,OAAK,CAAC,KACvB,IAAI,SAAO,OAAK,IAAE,CAAC,IAAI,IAAI;AAC3B;AAAA,gBACF;AACA,yBAAQ,IAAE,OAAK,GAAG,IAAE,GAAG,EAAE,GAAG;AAC1B,sBAAG,KAAK,UAAU,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,KACtC,IAAI,SAAS,IAAI,CAAC,IAAM,KAAK,UAAU,CAAC,GAAG;AAC5C,6BAAS;AAAA,kBACX;AAAA,gBACF;AAEA,oBAAI,SAAS,MAAM,OAAO,MAAM;AAChC,oBAAG,WAAW,QAAQ;AACpB,yBAAO;AAAA,gBACT;AAAA,cACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAI,MAAM,IAAI;AACd,mBAAQ,IAAE,YAAU,GAAG,KAAG,GAAG,EAAE,GAAG;AAChC,gBAAG,gBAAgB,CAAC,MAAM,KAAK;AAC7B,uBAAQ,IAAE,IAAE,GAAG,IAAE,WAAW,EAAE,GAAG;AAC/B,gCAAgB,IAAE,CAAC,IAAI,gBAAgB,CAAC;AAAA,cAC1C;AACA;AAAA,YACF;AAAA,UACF;AACA,YAAE;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACjbA;AAAA;AAAA;AAEA,QAAI,YAAc;AAClB,QAAI,OAAc;AAClB,QAAI,QAAc;AAClB,QAAI,OAAc;AAElB,QAAI,YAAc;AAElB,QAAI,YAAc;AAClB,QAAI,UAAc;AAClB,QAAI,YAAc;AAClB,QAAI,YAAc;AAClB,QAAI,UAAc;AAElB,QAAI,aAAc;AAClB,QAAI,WAAc;AAClB,QAAI,aAAc;AAClB,QAAI,aAAc;AAClB,QAAI,WAAc;AAElB,QAAI,SAAc;AAElB,QAAI,cAAc;AAElB,QAAI,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,aAAS,mBAAmB,UAAU,MAAM,MAAM;AAChD,UAAI,WAAW,gBACZ,WAAW,QAAQ,WACnB,OAAO,SAAS,OAChB,OAAO,SAAS;AAEnB,UAAI,OAAO;AAAA,QAAC;AAAA,QAAa;AAAA,QAAU;AAAA,QAAK,KAAK,KAAK;AAAA,QAAG;AAAA,QACnD;AAAA,QAAQ;AAAA,QAAW;AAAA,QAAO;AAAA,QAAW;AAAA,MAAG;AAE1C,UAAI,UACF,eAAe,YAAY,MAAM,UAAU,MAAM,YAAY,MAAM,YAAY,QACpE,UAAS,UACP,UAAU,OAAO,YAAY,cAC1B,YAAY,MAAM,OAAO,MAAM,UAAU,UACzC,YAAY,MAAM,OAAO,MAAM,UAAU,MAAM,YAAY,UAC3D,YAAY;AAE9B,UAAI,WACF,eAAe,aAAa,MAAM,WAAW,MAAM,YAAY,MAAM,aAAa,QACvE,WAAW,UACT,WAAW,OAAO,YAAY,cAC3B,aAAa,MAAM,OAAO,MAAM,WAAW,QAClD,OAAO,QAAQ,aAAa,MAAM,OAAO,MAAM,WAAW,MAAM,YAAY,OAAO,MACpF,QAAQ,aAAa;AAE/B,UAAG,UAAU;AACX,aAAK,KAAK,SAAS,aAAa,KAAK,QAAQ;AAAA,MAC/C,OAAO;AACL,aAAK,KAAK,UAAU,aAAa,KAAK,OAAO;AAAA,MAC/C;AAEA,UAAG,MAAM;AACP,aAAK,KAAK,2BAA2B;AAAA,MACvC,WAAU,MAAM;AACd,aAAK,KAAK,4BAA4B;AAAA,MACxC,OAAO;AACL,aAAK,KAAK,2BAA2B;AAAA,MACvC;AAEA,WAAK,KAAK,eAAa,OAAK,UAAQ,YAAU,kBAClC,YAAU,QAAM,UAAQ,UACxB,YAAU,QAAM,YAAU,MAAI,UAAQ,UACtC,aAAW,QAAM,WAAS,UAC1B,aAAW,QAAM,YAAU,MAAI,WAAS,gCAClB,cAAc,WACnC,SAAS,MAAM,QAAQ,GAAG;AAEvC,UAAG,MAAM;AACP,aAAK,KAAK,OAAO;AAAA,MACnB,OAAO;AACL,aAAK,KAAK,OAAO;AAAA,MACnB;AAEA,WAAK,KAAK,UAAU,SAAS,sBAAsB,SAAS,MAAM;AAElE,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM,KAAK,KAAK,EAAE;AAAA,MACpB;AAAA,IACF;AAEA,aAAS,kBAAkB,MAAM;AAC/B,UAAI,WAAW,gBAAgB,OAAO,SAAS;AAC/C,UAAI,SAAS,CAAC;AACd,UAAI,QAAQ,KAAK,MAAM;AACvB,UAAG,CAAC,MAAM;AACR,cAAM,OAAO,GAAG,GAAG,IAAI;AAAA,MACzB;AAEA,UAAI,OAAO,CAAC,cAAc,WAAW,MAAM,MAAM,KAAK,IAAI,IAAI;AAE9D,eAAS,OAAO,UAAU,MAAM;AAC9B,YAAI,MAAM,mBAAmB,UAAU,MAAM,IAAI;AACjD,eAAO,KAAK,IAAI,IAAI;AACpB,aAAK,KAAK,YAAY,IAAI,OAAO,MAAM,KAAK,KAAK,IAAI,IAAI;AAAA,MAC3D;AAEA,WAAK,KAAK,QAAQ,UAAU,MAAM,YAAY,MAC5B,WAAW,MAAM,aAAa,IAAI;AAEpD,UAAG,MAAM;AACP,eAAO,MAAM,KAAK;AAClB,aAAK,KAAK,QAAQ;AAClB,eAAO,OAAO,KAAK;AAAA,MACrB,OAAO;AACL,aAAK,KAAK,QAAQ,OAAO,IAAI;AAC7B,eAAO,MAAM,IAAI;AACjB,aAAK,KAAK,QAAQ;AAClB,eAAO,MAAM,KAAK;AAClB,aAAK,KAAK,eAAe,OAAO,IAAI;AACpC,eAAO,OAAO,IAAI;AAClB,aAAK,KAAK,QAAQ;AAClB,eAAO,OAAO,KAAK;AACnB,aAAK,KAAK,GAAG;AAAA,MACf;AACA,WAAK,KAAK,cAAc,QAAQ;AAEhC,UAAI,UAAU,OAAO,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE;AAC5C,UAAI,OAAO,IAAI,SAAS,OAAO;AAC/B,aAAO,KAAK;AAAA,IACd;AAGA,YAAQ,UAAU,kBAAkB,KAAK;AACzC,YAAQ,OAAU,kBAAkB,IAAI;AAAA;AAAA;;;AC/IxC;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,QAAI,OAAO;AAEX,aAAS,aAAa,WAAW,MAAM;AACrC,UAAI,QAAO,SAAS,MAAM,EAAE,EAAE,OAAO,IAAI;AACzC,UAAI,QAAQ,CAAC;AACb,UAAG,UAAU,QAAQ,IAAI,KAAK,GAAG;AAC/B,cAAM,KAAK,WAAW;AAAA,MACxB;AACA,UAAG,UAAU,QAAQ,IAAI,KAAK,GAAG;AAC/B,cAAM,KAAK,WAAW;AAAA,MACxB;AACA,YAAM;AAAA,QACJ,KAAK,QAAQ,KAAK,MAAM,KAAK,CAAC,EACzB,QAAQ,KAAK,SAAS;AAAA,MAAC;AAC9B,aAAO,SAAS,MAAM,QAAQ,KAAK;AAAA,IACrC;AAAA;AAAA;;;ACnBA;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,QAAI,eAAe;AAEnB,QAAI,yBAAyB,aAAa,SAAS,CAAC,IAAI,CAAC;AAEzD,QAAI,sBAAsB;AAG1B,aAAS,cAAc,GAAG,MAAM,OAAO,KAAK,OAAO,KAAK;AACtD,UAAI,WAAW,IAAI;AACnB,UAAI,SAAS,YAAY,QAAM,KAAK;AACpC,eAAQ,IAAE,QAAM,GAAG,IAAE,KAAK,EAAE,GAAG,UAAQ,UAAU;AAC/C,YAAI,IAAI,MAAM,MAAM;AACpB,iBAAQ,IAAE,GAAG,MAAI,YAAU,IAAE,IACzB,IAAE,SAAS,MAAM,MAAI,IAAI,IAAI,GAC7B,EAAE,GAAG,OAAK,UAAU;AAEtB,cAAI,OAAO;AACX,cAAI,OAAO,MAAI;AACf,mBAAQ,IAAE,GAAG,IAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM;AAC5C,gBAAI,IAAI,MAAM,IAAI;AAClB,kBAAM,IAAI,IAAI,MAAM,IAAI;AACxB,kBAAM,IAAI,IAAI;AAAA,UAChB;AACA,cAAI,MAAM,IAAI,CAAC;AACf,cAAI,CAAC,IAAI,IAAI,IAAE,CAAC;AAChB,cAAI,IAAE,CAAC,IAAI;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAIA,aAAS,WAAW,GAAG,MAAM,OAAO,KAAK,OAAO,KAAK;AACnD,UAAG,OAAO,QAAM,GAAG;AACjB,eAAO;AAAA,MACT;AAEA,UAAI,KAAW;AACf,UAAI,KAAW;AACf,UAAI,MAAa,MAAM,UAAW;AAClC,UAAI,WAAW,IAAE;AACjB,UAAI,QAAW;AACf,UAAI,QAAW,MAAM,WAAS,MAAI,IAAI;AAEtC,aAAM,KAAK,IAAI;AACb,YAAG,KAAK,KAAK,qBAAqB;AAChC,wBAAc,GAAG,MAAM,IAAI,IAAI,OAAO,GAAG;AACzC,kBAAQ,MAAM,WAAS,MAAI,IAAI;AAC/B;AAAA,QACF;AAGA,YAAI,QAAS,KAAK;AAClB,YAAI,SAAU,KAAK,OAAO,IAAE,QAAM,KAAI;AACtC,YAAI,SAAS,MAAM,WAAS,SAAS,IAAI;AACzC,YAAI,SAAU,KAAK,OAAO,IAAE,QAAM,KAAI;AACtC,YAAI,SAAS,MAAM,WAAS,SAAS,IAAI;AACzC,YAAI,SAAU,KAAK,OAAO,IAAE,QAAM,KAAI;AACtC,YAAI,SAAS,MAAM,WAAS,SAAS,IAAI;AACzC,YAAG,UAAU,QAAQ;AACnB,cAAG,UAAU,QAAQ;AACnB,oBAAQ;AACR,oBAAQ;AAAA,UACV,WAAU,UAAU,QAAQ;AAC1B,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ;AACR,oBAAQ;AAAA,UACV;AAAA,QACF,OAAO;AACL,cAAG,UAAU,QAAQ;AACnB,oBAAQ;AACR,oBAAQ;AAAA,UACV,WAAU,UAAU,QAAQ;AAC1B,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ;AACR,oBAAQ;AAAA,UACV;AAAA,QACF;AAGA,YAAI,OAAO,YAAY,KAAG;AAC1B,YAAI,OAAO,WAAW;AACtB,iBAAQ,IAAE,GAAG,IAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM;AAC5C,cAAI,IAAI,MAAM,IAAI;AAClB,gBAAM,IAAI,IAAI,MAAM,IAAI;AACxB,gBAAM,IAAI,IAAI;AAAA,QAChB;AACA,YAAI,IAAI,IAAI,KAAG,CAAC;AAChB,YAAI,KAAG,CAAC,IAAI,IAAI,KAAK;AACrB,YAAI,KAAK,IAAI;AAGb,gBAAQ;AAAA,UACN;AAAA,UAAG;AAAA,UACH;AAAA,UAAI,KAAG;AAAA,UAAG;AAAA,UAAO;AAAA,UACjB;AAAA,QAAK;AAGP,YAAI,OAAO,YAAY,KAAG;AAC1B,YAAI,OAAO,WAAW;AACtB,iBAAQ,IAAE,GAAG,IAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM;AAC5C,cAAI,IAAI,MAAM,IAAI;AAClB,gBAAM,IAAI,IAAI,MAAM,IAAI;AACxB,gBAAM,IAAI,IAAI;AAAA,QAChB;AACA,YAAI,IAAI,IAAI,KAAG,CAAC;AAChB,YAAI,KAAG,CAAC,IAAI,IAAI,KAAK;AACrB,YAAI,KAAK,IAAI;AAGb,YAAG,MAAM,OAAO;AACd,eAAK,QAAM;AACX,iBAAM,KAAK,MACT,MAAM,YAAU,KAAG,KAAG,IAAI,MAAM,OAAO;AACvC,kBAAM;AAAA,UACR;AACA,gBAAM;AAAA,QACR,WAAU,QAAQ,KAAK;AACrB,eAAK,QAAQ;AACb,iBAAM,KAAK,MACT,MAAM,WAAS,KAAG,IAAI,MAAM,OAAO;AACnC,kBAAM;AAAA,UACR;AAAA,QACF,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAGA,aAAO;AAAA,QACL;AAAA,QAAG;AAAA,QACH;AAAA,QAAO;AAAA,QAAK;AAAA,QAAO;AAAA,QACnB,MAAM,WAAS,MAAI,IAAI;AAAA,MAAC;AAAA,IAC5B;AAAA;AAAA;;;AC7IA;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,aAAa;AACjB,QAAI,oBAAoB,WAAW;AACnC,QAAI,iBAAiB,WAAW;AAChC,QAAIC,SAAQ;AACZ,QAAI,aAAa;AACjB,QAAI,eAAe;AAGnB,QAAI,qBAAwB;AAC5B,QAAI,cAAyB,KAAG;AAChC,QAAI,uBAAyB,KAAG;AAGhC,QAAI,oCAAoC;AAAA,MACtC;AAAA,MACA,CAAC,MAAM,IAAI;AAAA,IAAC;AAEd,QAAI,sBAAsB;AAAA,MACxB;AAAA,MACA,CAAC,IAAI;AAAA,IAAC;AAER,QAAI,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,IAAI;AAAA,IAAC;AAER,QAAI,4BAA4B;AAAA,MAC9B;AAAA,MACA,CAAC,IAAI;AAAA,IAAC;AAER,QAAI,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,IAAI;AAAA,IAAC;AAER,QAAI,+BAA+B;AAAA,MACjC;AAAA,MACA,CAAC,IAAI;AAAA,IAAC;AAGR,QAAI,cAAc;AAClB,QAAI,cAAc;AAGlB,QAAI,gBAAgB;AACpB,QAAI,aAAc,KAAK,YAAY,aAAa;AAChD,QAAI,aAAc,KAAK,aAAa,aAAa;AAGjD,aAAS,SAAS,GAAG,OAAO;AAC1B,UAAI,SAAU,IAAI,KAAK,KAAK,QAAM,CAAC,KAAK,IAAE,KAAI;AAC9C,UAAI,UAAU,KAAK,SAAS,cAAY,MAAM;AAC9C,UAAG,WAAW,SAAS,SAAS;AAC9B,aAAK,KAAK,UAAU;AACpB,qBAAa,KAAK,YAAY,OAAO;AAAA,MACvC;AACA,UAAI,aAAa,KAAK,SAAS,cAAY,MAAM;AACjD,UAAG,WAAW,SAAS,YAAY;AACjC,aAAK,KAAK,UAAU;AACpB,qBAAa,KAAK,aAAa,UAAU;AAAA,MAC3C;AAAA,IACF;AAGA,aAAS,SAAS,KAChB,MACA,UAAU,QACV,WAAW,SACX,OACA,IAAI,IAAI;AAER,UAAI,OAAO,cAAc;AACzB,iBAAW,IAAI,IAAM;AACrB,iBAAW,OAAK,CAAC,IAAI;AACrB,iBAAW,OAAK,CAAC,IAAI;AACrB,iBAAW,OAAK,CAAC,IAAI;AACrB,iBAAW,OAAK,CAAC,IAAI;AACrB,iBAAW,OAAK,CAAC,IAAI;AAErB,UAAI,OAAO,cAAc;AACzB,iBAAW,IAAI,IAAM;AACrB,iBAAW,OAAK,CAAC,IAAI;AAAA,IACvB;AAGA,aAAS,gBACP,GAAG,MAAM,OAAO,MAChB,UAAU,QAAQ,KAAK,UACvB,YAAY,MAAM,QAAQ;AAE1B,UAAI,WAAW,IAAI;AACnB,UAAI,UAAW,aAAa;AAC5B,UAAI,QAAW,KAAK,UAAU,IAAI;AAEpC;AACE,iBAAQ,IAAE,UAAU,SAAO,WAAS,UAAU,IAAE,QAAQ,EAAE,GAAG,UAAQ,UAAU;AAC7E,cAAI,KAAK,IAAI,SAAO,IAAI;AACxB,cAAI,KAAK,IAAI,SAAO,OAAK,CAAC;AAC1B,cAAG,QAAQ,MAAM,KAAK,OAAO;AAC3B;AAAA,UACF;AACA,cAAG,QAAQ,UAAU,IAAI;AACvB;AAAA,UACF;AACA,cAAI,QAAQ,SAAS,CAAC;AACtB,mBAAQ,IAAE,OAAK,GAAG,IAAE,GAAG,EAAE,GAAG;AAC1B,gBAAI,KAAK,IAAI,SAAO,CAAC;AACrB,gBAAI,KAAK,IAAI,SAAO,IAAE,CAAC;AACvB,gBAAI,KAAK,KAAK,UAAQ,CAAC;AACvB,gBAAI,KAAK,KAAK,UAAQ,IAAE,CAAC;AACzB,gBAAG,KAAK,MAAM,KAAK,IAAI;AACrB,uBAAS;AAAA,YACX;AAAA,UACF;AACA,cAAI;AACJ,cAAG,MAAM;AACP,qBAAS,MAAM,QAAQ,KAAK;AAAA,UAC9B,OAAO;AACL,qBAAS,MAAM,OAAO,MAAM;AAAA,UAC9B;AACA,cAAG,WAAW,QAAQ;AACpB,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,IACF;AAGA,aAAS,aACP,GAAG,MAAM,OACT,UAAU,QAAQ,KAAK,UACvB,YAAY,MAAM,QAAQ;AAE1B,UAAI,WAAW,IAAI;AACnB,UAAI,UAAW,aAAa;AAC5B,UAAI,QAAW,KAAK,UAAU,IAAI;AAEpC;AACE,iBAAQ,IAAE,UAAU,SAAO,WAAS,UAAU,IAAE,QAAQ,EAAE,GAAG,UAAQ,UAAU;AAC7E,cAAI,QAAQ,SAAS,CAAC;AACtB,cAAG,UAAU,QAAQ;AACnB;AAAA,UACF;AACA,cAAI,KAAK,IAAI,SAAO,IAAI;AACxB,cAAI,KAAK,IAAI,SAAO,OAAK,CAAC;AAC1B,cAAG,QAAQ,MAAM,KAAK,OAAO;AAC3B;AAAA,UACF;AACA,mBAAQ,IAAE,OAAK,GAAG,IAAE,GAAG,EAAE,GAAG;AAC1B,gBAAI,KAAK,IAAI,SAAO,CAAC;AACrB,gBAAI,KAAK,IAAI,SAAO,IAAE,CAAC;AACvB,gBAAI,KAAK,KAAK,UAAQ,CAAC;AACvB,gBAAI,KAAK,KAAK,UAAQ,IAAE,CAAC;AACzB,gBAAG,KAAK,MAAM,KAAK,IAAI;AACrB,uBAAS;AAAA,YACX;AAAA,UACF;AACA,cAAI,SAAS,MAAM,OAAO,MAAM;AAChC,cAAG,WAAW,QAAQ;AACpB,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,IACF;AAGA,aAAS,iBACP,GAAG,OAAO,UACV,OAAO,QAAQ,QACf,OAAO,QAAQ,QAAQ;AAGvB,eAAS,GAAG,QAAQ,KAAK;AAEzB,UAAI,MAAO;AACX,UAAI,WAAW,IAAI;AACnB,UAAI;AAEJ;AAAA,QAAS;AAAA,QACL;AAAA,QACA;AAAA,QAAG;AAAA,QACH;AAAA,QAAG;AAAA,QACH,WAAW,KAAK;AAAA,QAChB;AAAA,QAAW;AAAA,MAAQ;AACvB,UAAG,CAAC,UAAU;AACZ;AAAA,UAAS;AAAA,UACP;AAAA,UACA;AAAA,UAAG;AAAA,UACH;AAAA,UAAG;AAAA,UACH;AAAA,UACA;AAAA,UAAW;AAAA,QAAQ;AAAA,MACvB;AAEA,aAAM,MAAM,GAAG;AACb,eAAQ;AAER,YAAI,OAAO,MAAM;AACjB,YAAI,OAAY,WAAW,IAAI;AAC/B,YAAI,WAAY,WAAW,OAAK,CAAC;AACjC,YAAI,SAAY,WAAW,OAAK,CAAC;AACjC,YAAI,YAAY,WAAW,OAAK,CAAC;AACjC,YAAI,UAAY,WAAW,OAAK,CAAC;AACjC,YAAI,QAAY,WAAW,OAAK,CAAC;AAEjC,YAAI,OAAO,MAAM;AACjB,YAAI,KAAY,WAAW,IAAI;AAC/B,YAAI,KAAY,WAAW,OAAK,CAAC;AAGjC,YAAI,OAAa,QAAQ;AACzB,YAAI,OAAY,CAAC,EAAE,QAAQ;AAG3B,YAAI,MAAY;AAChB,YAAI,WAAY;AAChB,YAAI,OAAY;AAChB,YAAI,YAAY;AAChB,YAAG,MAAM;AACP,gBAAc;AACd,qBAAc;AACd,iBAAc;AACd,sBAAc;AAAA,QAChB;AAEA,YAAG,QAAQ,GAAG;AACZ,mBAAS;AAAA,YACP;AAAA,YAAG;AAAA,YACH;AAAA,YAAU;AAAA,YAAQ;AAAA,YAAK;AAAA,YACvB;AAAA,UAAE;AACJ,cAAG,YAAY,QAAQ;AACrB;AAAA,UACF;AAAA,QACF;AACA,YAAG,QAAQ,GAAG;AACZ,qBAAW;AAAA,YACT;AAAA,YAAG;AAAA,YACH;AAAA,YAAU;AAAA,YAAQ;AAAA,YAAK;AAAA,YACvB;AAAA,UAAE;AACJ,cAAG,YAAY,QAAQ;AACrB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,WAAY,SAAU;AAC1B,YAAI,YAAY,UAAU;AAE1B,YAAG,MAAM;AACP,cAAG,IAAI,YAAY,WAAW,aAAa,sBAAsB;AAC/D,qBAASA,OAAM;AAAA,cACb;AAAA,cAAG;AAAA,cAAM;AAAA,cACT;AAAA,cAAU;AAAA,cAAQ;AAAA,cAAK;AAAA,cACvB;AAAA,cAAW;AAAA,cAAS;AAAA,cAAM;AAAA,YAAS;AACrC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AACA;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAG,IAAI,KAAK,IAAI,UAAU,SAAS,IAAI,oBAAoB;AAEzD,qBAAS;AAAA,cACL;AAAA,cAAG;AAAA,cAAM;AAAA,cAAO;AAAA,cAChB;AAAA,cAAW;AAAA,cAAS;AAAA,cAAM;AAAA,cAC1B;AAAA,cAAW;AAAA,cAAS;AAAA,cAAM;AAAA,YAAS;AACvC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AACA;AAAA,UACF,WAAU,IAAI,WAAW,YAAY,aAAa;AAEhD,qBAASA,OAAM;AAAA,cACb;AAAA,cAAG;AAAA,cAAM;AAAA,cAAO;AAAA,cAChB;AAAA,cAAU;AAAA,cAAQ;AAAA,cAAK;AAAA,cACvB;AAAA,cAAW;AAAA,cAAS;AAAA,cAAM;AAAA,YAAS;AACrC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AACA;AAAA,UACF;AAAA,QACF;AAGA,YAAI,OAAO;AAAA,UACT;AAAA,UAAG;AAAA,UACH;AAAA,UAAU;AAAA,UAAQ;AAAA,UAAK;AAAA,UACvB;AAAA,UAAI;AAAA,QAAE;AAGR,YAAG,WAAW,MAAM;AAElB,cAAG,KAAK,OAAO,YAAY,oBAAoB;AAE7C,qBAAS;AAAA,cACP;AAAA,cAAG,OAAK;AAAA,cAAG;AAAA,cACX;AAAA,cAAU;AAAA,cAAM;AAAA,cAAK;AAAA,cACrB;AAAA,cAAW;AAAA,cAAS;AAAA,cAAM;AAAA,YAAS;AACrC,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF,WAAU,SAAS,IAAE,GAAG;AACtB,gBAAG,MAAM;AACP,uBAASA,OAAM;AAAA,gBACb;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAW;AAAA,gBAAS;AAAA,gBAAM;AAAA,gBAC1B;AAAA,gBAAU;AAAA,gBAAM;AAAA,gBAAK;AAAA,cAAQ;AAAA,YACjC,OAAO;AACL,uBAASA,OAAM;AAAA,gBACb;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAU;AAAA,gBAAM;AAAA,gBAAK;AAAA,gBACrB;AAAA,gBAAW;AAAA,gBAAS;AAAA,gBAAM;AAAA,cAAS;AAAA,YACvC;AACA,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF,OAAO;AACL;AAAA,cAAS;AAAA,cACP,OAAK;AAAA,cACL;AAAA,cAAU;AAAA,cACV;AAAA,cAAW;AAAA,cACX;AAAA,cACA;AAAA,cAAW;AAAA,YAAQ;AACrB;AAAA,cAAS;AAAA,cACP,OAAK;AAAA,cACL;AAAA,cAAW;AAAA,cACX;AAAA,cAAU;AAAA,cACV,OAAK;AAAA,cACL;AAAA,cAAW;AAAA,YAAQ;AAAA,UACvB;AAAA,QACF;AAGA,YAAG,OAAO,QAAQ;AAQhB,cAAI,QAAQ;AAAA,YACV;AAAA,YAAG;AAAA,YACH;AAAA,YAAW;AAAA,YAAS;AAAA,YAAM;AAAA,UAAS;AACrC,cAAI,MAAM,KAAK,WAAW,QAAQ,IAAI;AACtC,cAAI,QAAQ;AAAA,YACV;AAAA,YAAG;AAAA,YACH;AAAA,YAAO;AAAA,YAAS;AAAA,YAAM;AAAA,YACtB;AAAA,UAAG;AAGL,cAAG,QAAQ,SAAS;AAClB;AAAA,cAAS;AAAA,cACP;AAAA,cACA;AAAA,cAAM;AAAA,cACN;AAAA,cAAO;AAAA,eACN,OAAK,MAAM,OAAO,KAAK;AAAA,cACxB;AAAA,cAAK;AAAA,YAAE;AAAA,UACX;AAGA,cAAG,YAAY,OAAO;AACpB;AAAA,cAAS;AAAA,cACP;AAAA,cACA;AAAA,cAAM;AAAA,cACN;AAAA,cAAW;AAAA,eACV,OAAK,MAAM,OAAO,KAAK;AAAA,cACxB;AAAA,cAAI;AAAA,YAAG;AAAA,UACX;AAGA,cAAG,QAAQ,MAAM,OAAO;AAEtB,gBAAG,MAAM;AACP,uBAAS;AAAA,gBACP;AAAA,gBAAG;AAAA,gBAAM;AAAA,gBACT;AAAA,gBAAM;AAAA,gBAAQ;AAAA,gBAAK;AAAA,gBACnB;AAAA,gBAAO;AAAA,gBAAM,UAAU,KAAK;AAAA,cAAC;AAAA,YACjC,OAAO;AACL,uBAAS;AAAA,gBACP;AAAA,gBAAG;AAAA,gBAAM;AAAA,gBAAO;AAAA,gBAChB;AAAA,gBAAM;AAAA,gBAAQ;AAAA,gBAAK;AAAA,gBACnB;AAAA,gBAAO;AAAA,gBAAM,UAAU,KAAK;AAAA,cAAC;AAAA,YACjC;AACA,gBAAG,WAAW,QAAQ;AACpB,qBAAO;AAAA,YACT;AAAA,UACF,WAAU,QAAQ,OAAO;AACvB,gBAAI;AACJ,gBAAG,MAAM;AAEP,qBAAO;AAAA,gBACL;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAM;AAAA,gBAAQ;AAAA,gBAAK;AAAA,gBACnB;AAAA,cAAG;AACL,kBAAG,OAAO,MAAM;AACd,oBAAI,OAAO;AAAA,kBACT;AAAA,kBAAG;AAAA,kBACH;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAK;AAAA,kBACjB;AAAA,gBAAG;AACL,oBAAG,SAAS,IAAE,GAAG;AAGf,sBAAG,OAAO,MAAM;AACd,6BAASA,OAAM;AAAA,sBACb;AAAA,sBAAG;AAAA,sBACH;AAAA,sBAAM;AAAA,sBAAM;AAAA,sBAAK;AAAA,sBACjB;AAAA,sBAAO;AAAA,sBAAO;AAAA,sBAAM;AAAA,oBAAS;AAC/B,wBAAG,WAAW,QAAQ;AACpB,6BAAO;AAAA,oBACT;AAAA,kBACF;AAIA,sBAAG,OAAO,MAAM;AACd,6BAASA,OAAM;AAAA,sBACb;AAAA,sBAAG;AAAA,sBACH;AAAA,sBAAM;AAAA,sBAAM;AAAA,sBAAK;AAAA,sBACjB;AAAA,sBAAO;AAAA,sBAAO;AAAA,sBAAM;AAAA,oBAAS;AAC/B,wBAAG,WAAW,QAAQ;AACpB,6BAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF,OAAO;AACL,sBAAG,OAAO,MAAM;AACd;AAAA,sBAAS;AAAA,sBACP,OAAK;AAAA,sBACL;AAAA,sBAAM;AAAA,sBACN;AAAA,sBAAO;AAAA,sBACP;AAAA,sBACA;AAAA,sBAAW;AAAA,oBAAQ;AAAA,kBACvB;AACA,sBAAG,OAAO,MAAM;AACd;AAAA,sBAAS;AAAA,sBACP,OAAK;AAAA,sBACL;AAAA,sBAAM;AAAA,sBACN;AAAA,sBAAO;AAAA,sBACP;AAAA,sBACA;AAAA,sBAAW;AAAA,oBAAQ;AACrB;AAAA,sBAAS;AAAA,sBACP,OAAK;AAAA,sBACL;AAAA,sBAAO;AAAA,sBACP;AAAA,sBAAM;AAAA,sBACN;AAAA,sBACA;AAAA,sBAAW;AAAA,oBAAQ;AAAA,kBACvB;AAAA,gBACF;AAAA,cACF;AAAA,YACF,OAAO;AACL,kBAAG,MAAM;AACP,uBAAO;AAAA,kBACL;AAAA,kBAAG;AAAA,kBACH;AAAA,kBAAM;AAAA,kBAAQ;AAAA,kBAAK;AAAA,kBACnB;AAAA,gBAAG;AAAA,cACP,OAAO;AACL,uBAAO;AAAA,kBACL;AAAA,kBAAG;AAAA,kBACH;AAAA,kBAAM;AAAA,kBAAQ;AAAA,kBAAK;AAAA,kBACnB;AAAA,gBAAG;AAAA,cACP;AACA,kBAAG,OAAO,MAAM;AACd,oBAAG,SAAS,IAAE,GAAG;AACf,sBAAG,MAAM;AACP,6BAASA,OAAM;AAAA,sBACb;AAAA,sBAAG;AAAA,sBACH;AAAA,sBAAO;AAAA,sBAAO;AAAA,sBAAM;AAAA,sBACpB;AAAA,sBAAM;AAAA,sBAAM;AAAA,sBAAK;AAAA,oBAAQ;AAAA,kBAC7B,OAAO;AACL,6BAASA,OAAM;AAAA,sBACb;AAAA,sBAAG;AAAA,sBACH;AAAA,sBAAM;AAAA,sBAAM;AAAA,sBAAK;AAAA,sBACjB;AAAA,sBAAO;AAAA,sBAAO;AAAA,sBAAM;AAAA,oBAAS;AAAA,kBACjC;AAAA,gBACF,OAAO;AACL;AAAA,oBAAS;AAAA,oBACP,OAAK;AAAA,oBACL;AAAA,oBAAM;AAAA,oBACN;AAAA,oBAAO;AAAA,oBACP;AAAA,oBACA;AAAA,oBAAW;AAAA,kBAAQ;AACrB;AAAA,oBAAS;AAAA,oBACP,OAAK;AAAA,oBACL;AAAA,oBAAO;AAAA,oBACP;AAAA,oBAAM;AAAA,oBACN,OAAK;AAAA,oBACL;AAAA,oBAAW;AAAA,kBAAQ;AAAA,gBACvB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC7eA;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,QAAI,OAAO;AACX,QAAIC,SAAQ;AACZ,QAAI,mBAAmB;AAEvB,aAAS,SAAS,GAAG,KAAK;AACxB,eAAQ,IAAE,GAAG,IAAE,GAAG,EAAE,GAAG;AACrB,YAAG,EAAE,IAAI,CAAC,KAAK,IAAI,IAAE,CAAC,IAAI;AACxB,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAGA,aAAS,aAAa,OAAO,GAAG,MAAM,KAAK;AACzC,UAAI,MAAM;AACV,UAAI,QAAQ;AACZ,eAAQ,IAAE,GAAG,IAAE,MAAM,QAAQ,IAAE,GAAG,EAAE,GAAG;AACrC,YAAI,IAAI,MAAM,CAAC;AACf,YAAG,SAAS,GAAG,CAAC,GAAG;AACjB;AAAA,QACF;AACA,iBAAQ,IAAE,GAAG,IAAE,IAAE,GAAG,EAAE,GAAG;AACvB,eAAK,KAAK,IAAI,EAAE,CAAC;AAAA,QACnB;AACA,YAAI,OAAO,IAAI;AAAA,MACjB;AACA,aAAO;AAAA,IACT;AAGA,aAASC,cAAa,KAAK,MAAM,OAAO,MAAM;AAC5C,UAAI,IAAI,IAAI;AACZ,UAAI,IAAI,KAAK;AAGb,UAAG,KAAK,KAAK,KAAK,GAAG;AACnB;AAAA,MACF;AAGA,UAAI,IAAK,IAAI,CAAC,EAAE,WAAU;AAC1B,UAAG,KAAK,GAAG;AACT;AAAA,MACF;AAEA,UAAI;AAGJ,UAAI,UAAW,KAAK,aAAa,IAAE,IAAE,CAAC;AACtC,UAAI,SAAW,KAAK,YAAY,CAAC;AACjC,UAAI,aAAa,KAAK,GAAG,SAAS,MAAM;AAExC,UAAG,IAAI,GAAG;AACR,YAAG,MAAM,KAAK,MAAM;AAElB,UAAAD,OAAM,KAAK,CAAC;AACZ,mBAASA,OAAM;AAAA,YACb;AAAA,YAAG;AAAA,YACH;AAAA,YAAG;AAAA,YAAG;AAAA,YAAS;AAAA,YACf;AAAA,YAAG;AAAA,YAAG;AAAA,YAAS;AAAA,UAAM;AAAA,QACzB,OAAO;AAGL,cAAI,WAAW,KAAK,aAAa,IAAE,IAAE,CAAC;AACtC,cAAI,UAAW,KAAK,YAAY,CAAC;AACjC,cAAI,aAAa,MAAM,GAAG,UAAU,OAAO;AAE3C,cAAG,IAAI,GAAG;AACR,YAAAA,OAAM,KAAK,IAAE,CAAC;AAEd,gBAAG,MAAM,GAAG;AAEV,uBAASA,OAAM;AAAA,gBACb;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAU;AAAA,gBAChB;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAU;AAAA,cAAO;AAAA,YAC3B,OAAO;AAEL,uBAAS;AAAA,gBACP;AAAA,gBAAG;AAAA,gBAAU;AAAA,gBACb;AAAA,gBAAG;AAAA,gBAAU;AAAA,gBACb;AAAA,gBAAG;AAAA,gBAAU;AAAA,cAAO;AAAA,YACxB;AAEA,iBAAK,KAAK,QAAQ;AAClB,iBAAK,KAAK,OAAO;AAAA,UACnB;AAAA,QACF;AAEA,aAAK,KAAK,OAAO;AACjB,aAAK,KAAK,MAAM;AAAA,MAClB;AAEA,aAAO;AAAA,IACT;AAGA,QAAI;AAEJ,aAAS,WAAW,GAAE,GAAG;AACvB,aAAO,KAAK,CAAC,GAAE,CAAC,CAAC;AAAA,IACnB;AAEA,aAAS,mBAAmB,GAAG;AAC7B,eAAS,CAAC;AACV,MAAAC,cAAa,GAAG,GAAG,YAAY,IAAI;AACnC,aAAO;AAAA,IACT;AAEA,aAAS,wBAAwB,GAAG,GAAG;AACrC,eAAS,CAAC;AACV,MAAAA,cAAa,GAAG,GAAG,YAAY,KAAK;AACpC,aAAO;AAAA,IACT;AAGA,aAAS,oBAAoB,MAAM,MAAM,MAAM;AAC7C,UAAI;AACJ,cAAO,UAAU,QAAQ;AAAA,QACvB,KAAK;AACH,iBAAO,mBAAmB,IAAI;AAAA,QAChC,KAAK;AACH,cAAG,OAAO,SAAS,YAAY;AAC7B,mBAAOA,cAAa,MAAM,MAAM,MAAM,IAAI;AAAA,UAC5C,OAAO;AACL,mBAAO,wBAAwB,MAAM,IAAI;AAAA,UAC3C;AAAA,QACF,KAAK;AACH,iBAAOA,cAAa,MAAM,MAAM,MAAM,KAAK;AAAA,QAC7C;AACE,gBAAM,IAAI,MAAM,kCAAkC;AAAA,MACtD;AAAA,IACF;AAAA;AAAA;;;ACpIA,IAAI,UAAU,CAAC,OAAO,QAAQ,GAAG;AAC7B,SAAO,QAAQ,IAAI,OAAO,cAAc,CAAC;AAC7C;;;ACGA,IAAAC,iBAA6B;AAC7B,IAAAC,mBAAiB;AACjB,IAAAC,kBAAoB;AACpB,gCAAoB;;;ACZpB,oBAA6B;;;ACD7B;AAAA,EACI,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,OAAS;AAAA,IACL;AAAA,IACA;AAAA,EACJ;AAAA,EACA,SAAW;AAAA,IACP,OAAS;AAAA,IACT,OAAS;AAAA,EACb;AAAA,EACA,QAAU;AAAA,EACV,SAAW;AAAA,EACX,UAAY;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAAA,EACA,cAAgB;AAAA,IACZ,QAAU;AAAA,EACd;AAAA,EACA,YAAc;AAAA,IACV,MAAQ;AAAA,IACR,KAAO;AAAA,EACX;AAAA,EACA,MAAQ;AAAA,IACJ,KAAO;AAAA,EACX;AACJ;;;AD7BA,IAAI,UAAU,gBAAY;AAG1B,SAAS,iBAAiB;AACtB,OAAK,kBAAkB;AACvB,OAAK,kBAAkB;AACvB,OAAK,mBAAmB;AACxB,OAAK,WAAW;AACpB;AAGO,IAAM,aAAN,MAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB,YAAY,YAAY,SAAS;AAC7B,SAAK,UAAU;AACf,QAAI,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,eAAe,GAAG,WAAW,CAAC,CAAC;AAIhE,SAAK,UAAU,cAAc;AAE7B,SAAK,kBAAkB,CAAC,CAAC,KAAK;AAE9B,SAAK,kBAAkB,CAAC,CAAC,KAAK;AAE9B,SAAK,mBAAmB,CAAC,CAAC,KAAK;AAE/B,SAAK,WAAW,CAAC,CAAC,KAAK;AASvB,SAAK,eAAe,CAAC,IAAI,gBAAgB;AAOzC,SAAK,OAAO,IAAI,2BAAa;AAK7B,SAAK,KAAK,IAAI,2BAAa;AAQ3B,SAAK,QAAQ,CAAC;AAMd,SAAK,eAAe;AAAA,MAChB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,IACb;AAOA,SAAK,aAAa,CAAC;AAOnB,SAAK,eAAe,CAAC;AAMrB,SAAK,cAAc,CAAC;AAEpB,SAAK,aAAa,CAAC;AAEnB,SAAK,kBAAkB,CAAC;AAExB,SAAK,WAAW,EAAE,OAAO,GAAG,OAAO,GAAG,QAAQ,KAAK;AAGnD,SAAK,qBAAqB,CAAC;AAG3B,QAAI,SAAS,eAAe,WAAW;AACnC,iBAAW,IAAI;AAAA,IACnB,OAAO;AACH,eAAS,iBAAiB,oBAAoB,QAAM;AAChD,mBAAW,IAAI;AAAA,MACnB,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,IACrB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,KAAK,gBAAgB,MAAM;AACvB,SAAK,QAAQ,UAAQ;AACjB,UAAI,WAAW,KAAK,YAAY,IAAI,KAAK,CAAC;AAC1C,UAAI,SAAS,SAAS,WAAW,EAAG;AACpC,eAAS,KAAK,WAAW;AACzB,WAAK,YAAY,IAAI,IAAI;AAAA,IAC7B,CAAC;AACD,SAAK,MAAM,WAAW,IAAI,CAAC,CAAC,KAAK,MAAM,WAAW;AAClD,SAAK,WAAW,WAAW,IAAI,KAAK,WAAW,WAAW,KAAK;AAC/D,SAAK,aAAa,WAAW,IAAI,KAAK,aAAa,WAAW,KAAK;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,aAAa;AAChB,aAAS,QAAQ,KAAK,aAAa;AAC/B,UAAI,WAAW,KAAK,YAAY,IAAI;AACpC,UAAI,IAAI,SAAS,QAAQ,WAAW;AACpC,UAAI,IAAI,IAAI;AAAE,iBAAS,OAAO,GAAG,CAAC;AAAA,MAAE;AAAA,IACxC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,cAAc;AACV,QAAI,MAAM,CAAC;AACX,aAAS,QAAQ,KAAK,aAAa;AAC/B,UAAI,WAAW,KAAK,YAAY,IAAI;AACpC,eAAS,QAAQ,iBAAe;AAC5B,YAAI,WAAW,IAAI,IAAI,WAAW,KAAK,CAAC;AACxC,YAAI,WAAW,EAAE,KAAK,IAAI;AAAA,MAC9B,CAAC;AAAA,IACL;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO;AACH,sBAAkB,KAAK,YAAY;AACnC,sBAAkB,KAAK,UAAU;AACjC,sBAAkB,KAAK,YAAY;AAAA,EACvC;AACJ;AAEA,SAAS,kBAAkB,KAAK;AAC5B,WAAS,OAAO,IAAK,KAAI,GAAG,IAAI;AACpC;AAcA,SAAS,WAAW,QAAQ;AAExB,SAAO,iBAAiB,WAAW,WAAW,KAAK,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC7E,SAAO,iBAAiB,SAAS,WAAW,KAAK,MAAM,QAAQ,KAAK,GAAG,KAAK;AAG5E,MAAI,cAAc,EAAE,SAAS,KAAK;AAClC,MAAI,OAAO,cAAc;AACrB,WAAO,QAAQ,iBAAiB,eAAe,eAAe,KAAK,MAAM,QAAQ,IAAI,GAAG,WAAW;AACnG,WAAO,SAAS,iBAAiB,aAAa,eAAe,KAAK,MAAM,QAAQ,KAAK,GAAG,WAAW;AACnG,WAAO,QAAQ,iBAAiB,eAAe,cAAc,KAAK,MAAM,MAAM,GAAG,WAAW;AAAA,EAChG,OAAO;AACH,WAAO,QAAQ,iBAAiB,aAAa,eAAe,KAAK,MAAM,QAAQ,IAAI,GAAG,WAAW;AACjG,WAAO,SAAS,iBAAiB,WAAW,eAAe,KAAK,MAAM,QAAQ,KAAK,GAAG,WAAW;AACjG,WAAO,QAAQ,iBAAiB,aAAa,cAAc,KAAK,MAAM,MAAM,GAAG,WAAW;AAAA,EAC9F;AACA,SAAO,QAAQ,iBAAiB,SAAS,aAAa,KAAK,MAAM,MAAM,GAAG,WAAW;AACrF,SAAO,QAAQ,iBAAiB,eAAe,cAAc,KAAK,MAAM,MAAM,GAAG,KAAK;AAGtF,SAAO,iBAAiB,QAAQ,aAAa,KAAK,MAAM,MAAM,GAAG,KAAK;AAC1E;AAcA,SAAS,WAAW,QAAQ,SAAS,IAAI;AACrC,iBAAe,GAAG,MAAM,SAAS,QAAQ,EAAE;AAC3C,mBAAiB,SAAS,QAAQ,EAAE;AACxC;AAEA,SAAS,eAAe,QAAQ,SAAS,IAAI;AAEzC,MAAI,eAAe,IAAI;AACnB,QAAI,SAAS;AACT,UAAI,OAAO,SAAS,WAAW,KAAM;AACrC,aAAO,SAAS,SAAS,GAAG;AAAA,IAChC,OAAO;AACH,UAAI,OAAO,SAAS,WAAW,GAAG,UAAW;AAC7C,aAAO,SAAS,SAAS;AAAA,IAC7B;AAAA,EACJ;AACA,MAAI,SAAU,YAAY,KAAO,GAAG,SAAS,IAAK;AAClD,iBAAe,UAAU,QAAQ,SAAS,QAAQ,EAAE;AACpD,SAAO;AACX;AAEA,SAAS,cAAc,QAAQ,IAAI;AAE/B,MAAI,eAAe,MAAM,OAAO,SAAS,WAAW,MAAM;AACtD,QAAI,OAAO,SAAS,WAAW,GAAG,UAAW;AAAA,EACjD;AAEA,MAAIC,MAAK,GAAG,aAAa,GAAG,gBAAgB,GACxC,KAAK,GAAG,aAAa,GAAG,gBAAgB;AAC5C,SAAO,aAAa,MAAMA;AAC1B,SAAO,aAAa,MAAM;AAC9B;AAWA,SAAS,aAAa,QAAQ,IAAI;AAC9B,MAAIC,SAAQ;AACZ,UAAQ,GAAG,WAAW;AAAA,IAClB,KAAK;AAAG,MAAAA,SAAQ;AAAG;AAAA;AAAA,IACnB,KAAK;AAAG,MAAAA,SAAQ;AAAI;AAAA;AAAA,IACpB,KAAK;AAED,MAAAA,SAAQ,OAAO,QAAQ,gBAAgB,OAAO;AAC9C;AAAA,EACR;AAEA,SAAO,aAAa,YAAY,GAAG,UAAU,KAAKA;AAClD,SAAO,aAAa,YAAY,GAAG,UAAU,KAAKA;AAClD,SAAO,aAAa,YAAY,GAAG,UAAU,KAAKA;AACtD;AASA,SAAS,cAAc,QAAQ,IAAI;AAC/B,MAAI,CAAC,OAAO,kBAAkB;AAC1B,OAAG,eAAe;AAClB,WAAO;AAAA,EACX;AACJ;AAEA,SAAS,aAAa,QAAQ;AAI1B,WAAS,QAAQ,OAAO,YAAY;AAChC,QAAI,CAAC,OAAO,WAAW,IAAI,EAAG;AAC9B,QAAI,WAAW,KAAK,IAAI,EAAG;AAC3B,mBAAe,MAAM,OAAO,QAAQ;AAAA,MAChC;AAAA,MACA,MAAM;AAAA,MACN,gBAAgB,MAAM;AAAA,MAAE;AAAA,MACxB,iBAAiB,MAAM;AAAA,MAAE;AAAA,IAC7B,CAAC;AAAA,EACL;AACJ;AAcA,SAAS,eAAe,MAAM,SAAS,QAAQ,IAAI;AAC/C,MAAI,WAAW,OAAO,YAAY,IAAI;AACtC,MAAI,CAAC,SAAU;AAGf,MAAI,YAAY,OAAO,WAAW,IAAI;AACtC,MAAI,IAAI,WAAW,OAAO,GAAG;AACzB,WAAO,WAAW,IAAI,IAAI;AAC1B,aAAS,QAAQ,iBAAe;AAE5B,UAAI,QAAS,OAAO,eAChB,OAAO,aAAa,IAAI,WAAW,IAAI;AAC3C,UAAI,CAAC,MAAO;AAEZ,yBAAmB,aAAa,SAAS,QAAQ,EAAE;AAAA,IACvD,CAAC;AAAA,EACL;AAGA,MAAI,EAAE,YAAY,KAAK;AACnB,QAAI,OAAO,mBAAmB,CAAC,GAAG,kBAAkB;AAChD,SAAG,eAAe;AAAA,IACtB;AACA,QAAI,OAAO,gBAAiB,IAAG,gBAAgB;AAAA,EACnD;AAEJ;AAIA,SAAS,mBAAmB,aAAa,SAAS,QAAQ,IAAI;AAE1D,MAAI,UAAW,UAAW,OAAO,aAAa,OAAO;AACrD,UAAQ,WAAW,KAAK,QAAQ,WAAW,KAAK,KAAK;AAErD,MAAI,KAAK,OAAO,gBAAgB,WAAW,KAAK;AAChD,QAAM,UAAU,IAAI;AACpB,MAAI,KAAK,GAAG;AAAE,SAAK;AAAA,EAAE;AACrB,SAAO,gBAAgB,WAAW,IAAI;AAGtC,MAAI,YAAY,OAAO,MAAM,WAAW;AACxC,MAAI,IAAI,WAAW,EAAE,GAAG;AACpB,WAAO,MAAM,WAAW,IAAK,KAAK;AAClC,QAAI,UAAU,UAAU,OAAO,OAAO,OAAO;AAC7C,QAAI,CAAC,OAAO,SAAU,SAAQ,KAAK,aAAa,EAAE;AAAA,EACtD;AACJ;AAeA,SAAS,IAAIC,IAAG,GAAG;AACf,SAAOA,KAAI,CAAC,IAAI;AACpB;AAYA,SAAS,iBAAiBC,OAAM,QAAQ,IAAI;AACxC,MAAI,SAAS,QAAQ,KAAK,GAAG,IAAI;AACjC,MAAI,GAAG,WAAW,CAAC,UAAUA,OAAM;AAE/B,WAAO,mBAAmB,GAAG,IAAI,IAAI;AAAA,EACzC,WAAW,UAAU,CAACA,OAAM;AAExB,aAAS,QAAQ,OAAO,oBAAoB;AACxC,UAAI,CAAC,OAAO,WAAW,IAAI,EAAG;AAC9B,UAAI,WAAW,KAAK,IAAI,EAAG;AAC3B,qBAAe,MAAM,OAAO,QAAQ;AAAA,QAChC;AAAA,QACA,MAAM;AAAA,QACN,gBAAgB,MAAM;AAAA,QAAE;AAAA,QACxB,iBAAiB,MAAM;AAAA,QAAE;AAAA,MAC7B,CAAC;AAAA,IACL;AACA,WAAO,qBAAqB,CAAC;AAAA,EACjC;AACJ;;;AEhbA,IAAI,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,kBAAkB;AACtB;AAEA,IAAI,kBAAkB;AAAA,EAClB,WAAW,CAAC,QAAQ,SAAS;AAAA,EAC7B,YAAY,CAAC,QAAQ,WAAW;AAAA,EAChC,QAAQ,CAAC,QAAQ,WAAW;AAAA,EAC5B,SAAS,CAAC,QAAQ,YAAY;AAAA,EAC9B,QAAQ;AAAA,EACR,YAAY,CAAC,UAAU,MAAM;AAAA,EAC7B,YAAY,CAAC,UAAU,MAAM;AAAA,EAC7B,QAAQ;AACZ;AA2BO,IAAM,SAAN,cAAqB,WAAW;AAAA;AAAA,EAGnC,YAAY,KAAK,MAAM,SAAS;AAC5B,WAAO,OAAO,OAAO,CAAC,GAAG,gBAAgB,IAAI;AAC7C,UAAM,SAAS,IAAI;AAEnB,QAAI,IAAI,KAAK,YAAY;AACzB,aAAS,QAAQ,GAAG;AAChB,UAAI,OAAO,MAAM,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC;AACtD,WAAK,KAAK,MAAM,GAAG,IAAI;AAAA,IAC3B;AAAA,EACJ;AACJ;;;ACzDA,IAAAC,iBAA6B;;;ACUtB,IAAM,iBAAN,MAAqB;AAAA,EAExB,YAAY,aAAa,MAAM,WAAW,IAAI;AAG1C,SAAK,oBAAoB;AAEzB,SAAK,mBAAmB;AAGxB,SAAK,WAAW;AAEhB,SAAK,gBAAgB;AAErB,SAAK,cAAc;AAInB,SAAK,cAAc;AAEnB,SAAK,aAAa;AAMlB,SAAK,SAAS,SAAU,IAAI;AAAA,IAAE;AAQ9B,SAAK,WAAW,SAAU,IAAI,WAAW,SAAS;AAAA,IAAE;AAIpD,SAAK,SAAS,WAAY;AAAA,IAAE;AAE5B,SAAK,WAAW,WAAY;AAAA,IAAE;AAE9B,SAAK,uBAAuB,SAAU,QAAQ,OAAO;AAAA,IAAE;AAEvD,SAAK,sBAAsB,SAAU,QAAQ,OAAO;AAAA,IAAE;AAEtD,SAAK,qBAAqB,SAAU,KAAK;AAAA,IAAE;AAK3C,SAAK,QAAQ,IAAI,KAAK,QAAQ;AAG9B,aAAS,MAAM;AACX,kBAAY,IAAI;AAChB,sBAAgB,MAAM,UAAU;AAChC,WAAK,OAAO;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,KAAK,WAAW,IAAI;AACzB,OAAK,YAAY,eAAe;AAChC,OAAK,WAAW;AAChB,OAAK,cAAc;AACnB,OAAK,kBAAkB;AACvB,OAAK,mBAAmB;AACxB,OAAK,oBAAoB;AACzB,OAAK,cAAc;AACnB,OAAK,UAAU;AACf,OAAK,aAAa;AAClB,OAAK,aAAa;AACtB;AAeA,SAAS,YAAY,OAAO;AACxB,MAAI,MAAM,MAAM;AAChB,MAAI,MAAM,IAAI,UAAU,IAAI;AAC5B,MAAI,kBAAkB;AACtB,MAAI,mBAAmB;AACvB,MAAI,oBAAoB;AAExB,MAAI,UAAU,MAAM,aAAa,KAAK;AACtC,MAAI,aAAa,MAAM,gBAAgB,KAAK;AAC5C,wBAAsB,IAAI,OAAO;AAEjC,MAAI,IAAI,WAAW,GAAG;AAClB,QAAI,aAAa,YAAY,IAAI,YAAY,IAAI,QAAQ;AAAA,EAC7D;AACJ;AASA,SAAS,aAAa,OAAO;AACzB,MAAI,MAAM,MAAM;AAChB,wBAAsB,IAAI,OAAO;AAEjC,kBAAgB,KAAK;AAErB,MAAI,MAAM,IAAI,UAAU,IAAI;AAC5B,MAAI,KAAK,MAAM,IAAI;AACnB,MAAI,mBAAmB;AACvB,MAAI,MAAM,gBAAgB,GAAG;AACzB,QAAI,eAAe;AACnB,QAAI,WAAW,MAAO,MAAM;AAC5B,QAAI,IAAI,cAAc,SAAU;AAChC,QAAI,eAAe;AAEnB,QAAI,IAAI,cAAc,SAAU,KAAI,cAAc;AAAA,EACtD;AAEA,MAAI,WAAW,MAAM,IAAI;AACzB,MAAI,oBAAoB;AACxB,MAAI,UAAU,MAAO,MAAM;AAC3B,MAAI,aAAa,MAAM,IAAI,mBAAmB;AAC9C,MAAI,YAAY,EAAG,aAAY;AAG/B,QAAM,SAAS,UAAU,WAAW,OAAO;AAC3C,aAAW,iBAAiB,GAAG,OAAO,IAAI;AAC9C;AASA,SAAS,gBAAgB,OAAO,YAAY,OAAO;AAC/C,MAAI,MAAM,MAAM;AAChB,MAAI,MAAM,IAAI,UAAU,IAAI;AAE5B,MAAI,YAAY;AAChB,MAAI,UAAW,cAAa,IAAI;AAChC,MAAI,aAAa,MAAM,MAAM;AAC7B,MAAI,EAAE,aAAa,KAAM,cAAa,MAAM;AAC5C,MAAI,UAAU,MAAO,MAAM;AAG3B,SAAO,IAAI,kBAAkB,UAAU,WAAW;AAC9C,UAAM,OAAO,OAAO;AACpB,QAAI,mBAAmB;AACvB,QAAI,QAAQ,IAAI,UAAU,IAAI;AAC9B,QAAI,cAAc,eAAe,IAAI,aAAa,QAAQ,GAAG;AAG7D,UAAM;AACN,QAAI,MAAM,YAAY;AAClB,UAAI,kBAAkB;AACtB;AAAA,IACJ;AAAA,EACJ;AACJ;AAcA,SAAS,gBAAgB,OAAO,IAAI;AAChC,MAAI,CAAC,GAAI;AACT,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,MAAI,QAAQ,CAAC,SAAS;AAClB,YAAS,OAAO,SAAS;AACzB,QAAI,CAAC,CAAC,SAAS,MAAO;AACtB,QAAI,MAAM;AAEN,UAAI,MAAM,GAAG,mBAAmB;AAChC,UAAI,OAAO,IAAI,MAAO,KAAI,MAAM,SAAO;AAAA,MAEvC,CAAC;AAAA,IACL,OAAO;AACH,eAAS,gBAAgB;AAAA,IAC7B;AAAA,EACJ;AACA,MAAI,QAAQ,CAAC,SAAS;AAClB,YAAS,OAAO,SAAS;AACzB,QAAI,CAAC,CAAC,SAAS,MAAO;AACtB,QAAI,MAAM;AACN,UAAI,GAAG,mBAAmB;AACtB,WAAG,kBAAkB;AAAA,MACzB,WAAW,GAAG,yBAAyB;AACnC,WAAG,wBAAwB;AAAA,MAC/B;AAAA,IACJ,OAAO;AACH,UAAI,SAAS,gBAAgB;AACzB,iBAAS,eAAe;AAAA,MAC5B,WAAW,SAAS,sBAAsB,GAAG;AACzC,iBAAS,sBAAsB,EAAE;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,iBAAiB,qBAAqB,QAAM;AACjD,YAAS,OAAO,SAAS;AACzB,UAAM,qBAAqB,KAAK;AAAA,EACpC,CAAC;AACD,WAAS,iBAAiB,oBAAoB,QAAM;AAChD,YAAS,OAAO,SAAS;AACzB,UAAM,oBAAoB,KAAK;AAAA,EACnC,CAAC;AACD,WAAS,iBAAiB,oBAAoB,SAAO;AACjD,YAAS,OAAO,SAAS;AACzB,UAAM,mBAAmB,GAAG;AAAA,EAChC,CAAC;AAID,SAAO,eAAe,OAAO,eAAe;AAAA,IACxC,KAAK,MAAM;AAAA,IACX,KAAK;AAAA,EACT,CAAC;AACD,SAAO,eAAe,OAAO,cAAc;AAAA,IACvC,KAAK,MAAM;AAAA,IACX,KAAK;AAAA,EACT,CAAC;AAID,KAAG,iBAAiB,SAAS,QAAM;AAC/B,QAAI,MAAM,kBAAmB,OAAM,IAAI;AACvC,QAAI,MAAM,iBAAkB,OAAM,IAAI;AAAA,EAC1C,CAAC;AAID,MAAI,gBAAgB,MAAM,MAAM,SAAS;AACzC,MAAI,OAAO,gBAAgB;AACvB,QAAI,WAAW,IAAI,eAAe,aAAa;AAC/C,aAAS,QAAQ,EAAE;AAAA,EACvB,OAAO;AACH,WAAO,iBAAiB,UAAU,aAAa;AAAA,EACnD;AACJ;AAYA,SAAS,eAAe,KAAK,QAAQ;AAEjC,MAAI,SAAS,MAAM,EAAG,UAAS,MAAM;AACrC,MAAI,SAAS,MAAM,KAAM,UAAS,MAAM;AACxC,SAAO,MAAM,MAAM,MAAM;AAC7B;AAEA,SAAS,SAAS,IAAI;AAClB,MAAI,SAAS,eAAe,WAAW;AACnC,QAAI,UAAU,MAAM;AAChB,eAAS,oBAAoB,oBAAoB,OAAO;AACxD,SAAG;AAAA,IACP;AACA,aAAS,iBAAiB,oBAAoB,OAAO;AAAA,EACzD,OAAO;AACH,eAAW,IAAI,CAAC;AAAA,EACpB;AACJ;;;ADzRO,IAAM,YAAN,cAAwB,4BAAa;AAAA;AAAA,EAGxC,YAAY,KAAK,MAAM;AACnB,UAAM;AACN,WAAO,QAAQ,CAAC;AAMhB,SAAK,MAAM;AAGX,QAAI,QAAQ,KAAK,cAAc;AAC/B,QAAI,OAAO,UAAU,UAAU;AAC3B,cAAQ,SAAS,cAAc,KAAK;AAAA,IACxC;AACA,SAAK,UAAU,SAAS,mBAAmB;AAG3C,SAAK,SAAS,kBAAkB,KAAK,OAAO;AAC5C,mBAAe,KAAK,KAAK,MAAM;AAI/B,SAAK,sBAAsB;AAG3B,SAAK,gBAAgB;AAGrB,SAAK,YAAY,CAAC,CAAC,SAAS,SAAS;AAGrC,SAAK,iBAAiB;AAKtB,QAAI,WAAW;AAEf,SAAK,SAAS,IAAI,eAAe,KAAK,SAAS,QAAQ;AACvD,SAAK,OAAO,WAAW,KAAK;AAC5B,SAAK,OAAO,gBAAgB,KAAK;AACjC,SAAK,OAAO,oBAAoB,KAAK;AACrC,SAAK,OAAO,mBAAmB,KAAK;AACpC,SAAK,OAAO,cAAc;AAK1B,SAAK,OAAO,SAAS,IAAI,KAAK,KAAK,GAAG;AACtC,SAAK,OAAO,WAAW,IAAI,OAAO,KAAK,GAAG;AAG1C,SAAK,OAAO,uBAAuB,CAAC,UAAU;AAC1C,WAAK,iBAAiB;AACtB,WAAK,KAAM,QAAS,sBAAsB,iBAAiB;AAG3D,UAAI,MAAO,MAAK,gBAAgB;AAAA,IACpC;AAGA,SAAK,OAAO,SAAS,MAAM;AACvB,WAAK,OAAO,WAAW,IAAI,UAAU,OAAO,KAAK,IAAI,SAAS;AAE9D,wBAAkB,IAAI;AACtB,WAAK,QAAQ,iBAAiB,cAAc,MAAM;AAAE,aAAK,gBAAgB;AAAA,MAAK,CAAC;AAC/E,WAAK,QAAQ,iBAAiB,cAAc,MAAM;AAAE,aAAK,gBAAgB;AAAA,MAAM,CAAC;AAChF,aAAO,iBAAiB,SAAS,MAAM;AAAE,aAAK,YAAY;AAAA,MAAK,CAAC;AAChE,aAAO,iBAAiB,QAAQ,MAAM;AAAE,aAAK,YAAY;AAAA,MAAM,CAAC;AAEhE,UAAI,mBAAmB,MAAM;AACzB,aAAK,gBAAgB;AACrB,aAAK,YAAY;AACjB,aAAK,QAAQ,oBAAoB,aAAa,gBAAgB;AAAA,MAClE;AACA,WAAK,QAAQ,iBAAiB,aAAa,gBAAgB;AAE3D,WAAK,KAAK,UAAU;AAEpB,WAAK,OAAO,SAAS;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,SAAS,aAAa;AAClB,SAAK,QAAQ,YAAY,WAAW;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,OAAO,OAAO;AAEzB,SAAK,OAAO,cAAc,CAAC,CAAC;AAAA,EAChC;AACJ;AAaA,SAAS,qBAAqB;AAE1B,MAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,YAAU,WAAW;AACrB,YAAU,MAAM,WAAW;AAC3B,YAAU,MAAM,OAAO;AACvB,YAAU,MAAM,QAAQ;AACxB,YAAU,MAAM,MAAM;AACtB,YAAU,MAAM,SAAS;AACzB,YAAU,MAAM,SAAS;AACzB,YAAU,MAAM,WAAW;AAC3B,WAAS,KAAK,YAAY,SAAS;AACnC,WAAS,KAAK,MAAM,WAAW;AAC/B,WAAS,KAAK,MAAM,SAAS;AAC7B,YAAU,KAAK;AACf,SAAO;AACX;AAGA,SAAS,kBAAkB,IAAI;AAE3B,MAAI,SAAS,GAAG,cAAc,QAAQ;AACtC,MAAI,CAAC,QAAQ;AACT,aAAS,SAAS,cAAc,QAAQ;AACxC,WAAO,MAAM,WAAW;AACxB,WAAO,MAAM,OAAO;AACpB,WAAO,MAAM,MAAM;AACnB,WAAO,MAAM,SAAS;AACtB,WAAO,MAAM,QAAQ;AACrB,WAAO,KAAK;AACZ,OAAG,aAAa,QAAQ,GAAG,UAAU;AAAA,EACzC;AACA,SAAO;AACX;AAOA,SAAS,kBAAkB,MAAM;AAC7B,MAAI,oBACC,wBAAwB,YACxB,2BAA2B,YAC3B,8BAA8B;AACnC,MAAI,mBAAmB;AACnB,SAAK,sBAAsB;AAC3B,QAAI,WAAW,SAAU,GAAG;AACxB,WAAK,sBAAsB;AAC3B,eAAS,oBAAoB,EAAE,MAAM,QAAQ;AAAA,IACjD;AACA,aAAS,iBAAiB,aAAa,QAAQ;AAAA,EACnD;AACJ;AASA,SAAS,eAAe,KAAK,QAAQ;AACjC,MAAI,KAAK;AACT,MAAI,YAAY,MAAM;AAClB,QAAI,IAAI,OAAO;AACf,WAAO,QAAQ,IAAI;AACnB,WAAO,QAAQ;AACf,QAAI,OAAO,GAAI,KAAI,IAAI,gBAAgB,SAAS;AAAA,EACpD;AACA,MAAI,GAAG,gBAAgB,SAAS;AACpC;;;AEtNA,qBAAiB;;;ACKV,IAAI,UAAU;AACd,IAAI,aAAa,OAAO,iBAAiB,cAAc,eAAe;AACtE,IAAI,SAAS,KAAK;AASlB,SAAS,MAAMC,IAAG;AACvB,MAAIA,MAAK,EAAG,QAAO,KAAK,MAAMA,EAAC;AAC/B,SAAOA,KAAI,QAAQ,IAAI,KAAK,MAAMA,EAAC,IAAI,KAAK,MAAMA,EAAC;AACrD;AAUA,IAAI,SAAS,KAAK,KAAK;AACvB,IAAI,SAAS,MAAM,KAAK;;;ACnBjB,SAAS,SAAS;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AAAA,EACX;AACA,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,SAAO;AACT;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYO,SAASC,UAAS;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AAAA,EACX;AACA,SAAO;AACT;AAQO,SAAS,MAAMC,IAAG;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,SAAO;AACT;AAQO,SAAS,OAAOA,IAAG;AACxB,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,SAAO,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AACxC;AAUO,SAAS,WAAW,GAAG,GAAG,GAAG;AAClC,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,SAAO;AACT;AASO,SAAS,KAAK,KAAKA,IAAG;AAC3B,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,MAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,SAAO;AACT;AAWO,SAAS,IAAI,KAAK,GAAG,GAAG,GAAG;AAChC,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,SAAO;AACT;AAUO,SAAS,IAAI,KAAKA,IAAG,GAAG;AAC7B,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAUO,SAAS,SAAS,KAAKA,IAAG,GAAG;AAClC,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAUO,SAAS,SAAS,KAAKA,IAAG,GAAG;AAClC,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAUO,SAAS,OAAO,KAAKA,IAAG,GAAG;AAChC,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AASO,SAAS,KAAK,KAAKA,IAAG;AAC3B,MAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,MAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,MAAI,CAAC,IAAI,KAAK,KAAKA,GAAE,CAAC,CAAC;AACvB,SAAO;AACT;AASO,SAAS,MAAM,KAAKA,IAAG;AAC5B,MAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,MAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,MAAI,CAAC,IAAI,KAAK,MAAMA,GAAE,CAAC,CAAC;AACxB,SAAO;AACT;AAUO,SAAS,IAAI,KAAKA,IAAG,GAAG;AAC7B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,SAAO;AACT;AAUO,SAAS,IAAI,KAAKA,IAAG,GAAG;AAC7B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAI,KAAK,IAAIA,GAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC5B,SAAO;AACT;AASO,SAASC,OAAM,KAAKD,IAAG;AAC5B,MAAI,CAAC,IAAa,MAAMA,GAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAa,MAAMA,GAAE,CAAC,CAAC;AAC5B,MAAI,CAAC,IAAa,MAAMA,GAAE,CAAC,CAAC;AAC5B,SAAO;AACT;AAUO,SAAS,MAAM,KAAKA,IAAG,GAAG;AAC/B,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI;AAChB,SAAO;AACT;AAWO,SAAS,YAAY,KAAKA,IAAG,GAAGE,QAAO;AAC5C,MAAI,CAAC,IAAIF,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIE;AACvB,MAAI,CAAC,IAAIF,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIE;AACvB,MAAI,CAAC,IAAIF,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIE;AACvB,SAAO;AACT;AASO,SAAS,SAASF,IAAG,GAAG;AAC7B,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,SAAO,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AACxC;AASO,SAAS,gBAAgBA,IAAG,GAAG;AACpC,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,MAAI,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AAClB,SAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AAC7B;AAQO,SAAS,cAAcA,IAAG;AAC/B,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,SAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AAC7B;AASO,SAAS,OAAO,KAAKA,IAAG;AAC7B,MAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,MAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,MAAI,CAAC,IAAI,CAACA,GAAE,CAAC;AACb,SAAO;AACT;AASO,SAAS,QAAQ,KAAKA,IAAG;AAC9B,MAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,MAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,MAAI,CAAC,IAAI,IAAMA,GAAE,CAAC;AAClB,SAAO;AACT;AASO,SAAS,UAAU,KAAKA,IAAG;AAChC,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAIG,OAAM,IAAI,IAAI,IAAI,IAAI,IAAI;AAC9B,MAAIA,OAAM,GAAG;AAEX,IAAAA,OAAM,IAAI,KAAK,KAAKA,IAAG;AAAA,EACzB;AACA,MAAI,CAAC,IAAIH,GAAE,CAAC,IAAIG;AAChB,MAAI,CAAC,IAAIH,GAAE,CAAC,IAAIG;AAChB,MAAI,CAAC,IAAIH,GAAE,CAAC,IAAIG;AAChB,SAAO;AACT;AASO,SAAS,IAAIH,IAAG,GAAG;AACxB,SAAOA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAC/C;AAUO,SAAS,MAAM,KAAKA,IAAG,GAAG;AAC/B,MAAI,KAAKA,GAAE,CAAC,GACV,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC;AACV,MAAI,KAAK,EAAE,CAAC,GACV,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACV,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,SAAO;AACT;AAWO,SAAS,KAAK,KAAKA,IAAG,GAAG,GAAG;AACjC,MAAI,KAAKA,GAAE,CAAC;AACZ,MAAI,KAAKA,GAAE,CAAC;AACZ,MAAI,KAAKA,GAAE,CAAC;AACZ,MAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,MAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,MAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,SAAO;AACT;AAWO,SAAS,MAAM,KAAKA,IAAG,GAAG,GAAG;AAClC,MAAII,SAAQ,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAIJ,IAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D,MAAI,WAAW,KAAK,IAAII,MAAK;AAC7B,MAAI,SAAS,KAAK,KAAK,IAAI,KAAKA,MAAK,IAAI;AACzC,MAAI,SAAS,KAAK,IAAI,IAAIA,MAAK,IAAI;AACnC,MAAI,CAAC,IAAI,SAASJ,GAAE,CAAC,IAAI,SAAS,EAAE,CAAC;AACrC,MAAI,CAAC,IAAI,SAASA,GAAE,CAAC,IAAI,SAAS,EAAE,CAAC;AACrC,MAAI,CAAC,IAAI,SAASA,GAAE,CAAC,IAAI,SAAS,EAAE,CAAC;AACrC,SAAO;AACT;AAaO,SAAS,QAAQ,KAAKA,IAAG,GAAG,GAAG,GAAG,GAAG;AAC1C,MAAI,eAAe,IAAI;AACvB,MAAI,UAAU,gBAAgB,IAAI,IAAI,KAAK;AAC3C,MAAI,UAAU,gBAAgB,IAAI,KAAK;AACvC,MAAI,UAAU,gBAAgB,IAAI;AAClC,MAAI,UAAU,gBAAgB,IAAI,IAAI;AACtC,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,SAAO;AACT;AAaO,SAAS,OAAO,KAAKA,IAAG,GAAG,GAAG,GAAG,GAAG;AACzC,MAAI,gBAAgB,IAAI;AACxB,MAAI,wBAAwB,gBAAgB;AAC5C,MAAI,eAAe,IAAI;AACvB,MAAI,UAAU,wBAAwB;AACtC,MAAI,UAAU,IAAI,IAAI;AACtB,MAAI,UAAU,IAAI,eAAe;AACjC,MAAI,UAAU,eAAe;AAC7B,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,MAAI,CAAC,IAAIA,GAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI;AACnE,SAAO;AACT;AASO,SAAS,OAAO,KAAKE,QAAO;AACjC,EAAAA,SAAQA,WAAU,SAAY,IAAMA;AACpC,MAAI,IAAa,OAAO,IAAI,IAAM,KAAK;AACvC,MAAI,IAAa,OAAO,IAAI,IAAM;AAClC,MAAI,SAAS,KAAK,KAAK,IAAM,IAAI,CAAC,IAAIA;AACtC,MAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AACvB,MAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AACvB,MAAI,CAAC,IAAI,IAAIA;AACb,SAAO;AACT;AAWO,SAAS,cAAc,KAAKF,IAAG,GAAG;AACvC,MAAI,IAAIA,GAAE,CAAC,GACT,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC;AACT,MAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE;AAC9C,MAAI,KAAK;AACT,MAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK;AACpD,MAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK;AACpD,MAAI,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK;AACrD,SAAO;AACT;AAUO,SAAS,cAAc,KAAKA,IAAG,GAAG;AACvC,MAAI,IAAIA,GAAE,CAAC,GACT,IAAIA,GAAE,CAAC,GACP,IAAIA,GAAE,CAAC;AACT,MAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,MAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,MAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;AACtC,SAAO;AACT;AAWO,SAAS,cAAc,KAAKA,IAAG,GAAG;AAIvC,MAAI,KAAK,EAAE,CAAC,GACV,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACV,MAAI,KAAKA,GAAE,CAAC,GACV,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC;AAGV,MAAI,KAAK,KAAK,KAAK,KAAK;AACxB,MAAI,KAAK,KAAK,KAAK,KAAK;AACxB,MAAI,KAAK,KAAK,KAAK,KAAK;AAGxB,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AAGV,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACvC,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACvC,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACvC,SAAO;AACT;AAUO,SAAS,QAAQ,KAAKA,IAAG,GAAG,KAAK;AACtC,MAAI,IAAI,CAAC,GACP,IAAI,CAAC;AAEP,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAGjB,IAAE,CAAC,IAAI,EAAE,CAAC;AACV,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AACjD,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AAGjD,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAUO,SAAS,QAAQ,KAAKA,IAAG,GAAG,KAAK;AACtC,MAAI,IAAI,CAAC,GACP,IAAI,CAAC;AAEP,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAGjB,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AACjD,IAAE,CAAC,IAAI,EAAE,CAAC;AACV,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AAGjD,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAUO,SAAS,QAAQ,KAAKA,IAAG,GAAG,KAAK;AACtC,MAAI,IAAI,CAAC,GACP,IAAI,CAAC;AAEP,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AACjB,IAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAGjB,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AACjD,IAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG;AACjD,IAAE,CAAC,IAAI,EAAE,CAAC;AAGV,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,SAAO;AACT;AAQO,SAAS,MAAMA,IAAG,GAAG;AAC1B,MAAI,KAAKA,GAAE,CAAC,GACV,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAC7E,SAAS,OAAO,IAAIA,IAAG,CAAC,IAAI;AAC9B,SAAO,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,QAAQ,EAAE,GAAG,CAAC,CAAC;AACpD;AAQO,SAAS,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,SAAO;AACT;AAQO,SAAS,IAAIA,IAAG;AACrB,SAAO,UAAUA,GAAE,CAAC,IAAI,OAAOA,GAAE,CAAC,IAAI,OAAOA,GAAE,CAAC,IAAI;AACtD;AASO,SAAS,YAAYA,IAAG,GAAG;AAChC,SAAOA,GAAE,CAAC,MAAM,EAAE,CAAC,KAAKA,GAAE,CAAC,MAAM,EAAE,CAAC,KAAKA,GAAE,CAAC,MAAM,EAAE,CAAC;AACvD;AASO,SAAS,OAAOA,IAAG,GAAG;AAC3B,MAAI,KAAKA,GAAE,CAAC,GACV,KAAKA,GAAE,CAAC,GACRK,MAAKL,GAAE,CAAC;AACV,MAAI,KAAK,EAAE,CAAC,GACV,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACV,SAAO,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAIK,MAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAIA,GAAE,GAAG,KAAK,IAAI,EAAE,CAAC;AACnQ;AAMO,IAAI,MAAM;AAMV,IAAI,MAAM;AAMV,IAAI,MAAM;AAMV,IAAI,OAAO;AAMX,IAAI,UAAU;AAMd,IAAI,MAAM;AAMV,IAAI,SAAS;AAcb,IAAI,WAAU,WAAY;AAC/B,MAAI,MAAMN,QAAO;AACjB,SAAO,SAAUC,IAAG,QAAQ,QAAQ,OAAO,IAAI,KAAK;AAClD,QAAI,GAAG;AACP,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,OAAO;AACT,UAAI,KAAK,IAAI,QAAQ,SAAS,QAAQA,GAAE,MAAM;AAAA,IAChD,OAAO;AACL,UAAIA,GAAE;AAAA,IACR;AACA,SAAK,IAAI,QAAQ,IAAI,GAAG,KAAK,QAAQ;AACnC,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,SAAG,KAAK,KAAK,GAAG;AAChB,MAAAA,GAAE,CAAC,IAAI,IAAI,CAAC;AACZ,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAChB,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAClB;AACA,WAAOA;AAAA,EACT;AACF,GAAE;;;AChxBK,SAASM,UAAS;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AAAA,EACX;AACA,SAAO;AACT;AAiVO,SAASC,WAAU,KAAKC,IAAG;AAChC,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAI,IAAIA,GAAE,CAAC;AACX,MAAIC,OAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACtC,MAAIA,OAAM,GAAG;AACX,IAAAA,OAAM,IAAI,KAAK,KAAKA,IAAG;AAAA,EACzB;AACA,MAAI,CAAC,IAAI,IAAIA;AACb,MAAI,CAAC,IAAI,IAAIA;AACb,MAAI,CAAC,IAAI,IAAIA;AACb,MAAI,CAAC,IAAI,IAAIA;AACb,SAAO;AACT;AAmQO,IAAIC,YAAU,WAAY;AAC/B,MAAI,MAAMC,QAAO;AACjB,SAAO,SAAUC,IAAG,QAAQ,QAAQ,OAAO,IAAI,KAAK;AAClD,QAAI,GAAG;AACP,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,OAAO;AACT,UAAI,KAAK,IAAI,QAAQ,SAAS,QAAQA,GAAE,MAAM;AAAA,IAChD,OAAO;AACL,UAAIA,GAAE;AAAA,IACR;AACA,SAAK,IAAI,QAAQ,IAAI,GAAG,KAAK,QAAQ;AACnC,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,SAAG,KAAK,KAAK,GAAG;AAChB,MAAAA,GAAE,CAAC,IAAI,IAAI,CAAC;AACZ,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAChB,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAChB,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAClB;AACA,WAAOA;AAAA,EACT;AACF,GAAE;;;ACpoBK,SAASC,UAAS;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AAAA,EACX;AACA,MAAI,CAAC,IAAI;AACT,SAAO;AACT;AAyBO,SAAS,aAAa,KAAK,MAAM,KAAK;AAC3C,QAAM,MAAM;AACZ,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,CAAC,IAAI,IAAI,KAAK,CAAC;AACnB,MAAI,CAAC,IAAI,IAAI,KAAK,CAAC;AACnB,MAAI,CAAC,IAAI,IAAI,KAAK,CAAC;AACnB,MAAI,CAAC,IAAI,KAAK,IAAI,GAAG;AACrB,SAAO;AACT;AA+NO,SAASC,OAAM,KAAKC,IAAG,GAAG,GAAG;AAGlC,MAAI,KAAKA,GAAE,CAAC,GACV,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC,GACR,KAAKA,GAAE,CAAC;AACV,MAAI,KAAK,EAAE,CAAC,GACV,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACV,MAAI,OAAO,OAAO,OAAO,QAAQ;AAGjC,UAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAE3C,MAAI,QAAQ,GAAK;AACf,YAAQ,CAAC;AACT,SAAK,CAAC;AACN,SAAK,CAAC;AACN,SAAK,CAAC;AACN,SAAK,CAAC;AAAA,EACR;AAEA,MAAI,IAAM,QAAiB,SAAS;AAElC,YAAQ,KAAK,KAAK,KAAK;AACvB,YAAQ,KAAK,IAAI,KAAK;AACtB,aAAS,KAAK,KAAK,IAAM,KAAK,KAAK,IAAI;AACvC,aAAS,KAAK,IAAI,IAAI,KAAK,IAAI;AAAA,EACjC,OAAO;AAGL,aAAS,IAAM;AACf,aAAS;AAAA,EACX;AAEA,MAAI,CAAC,IAAI,SAAS,KAAK,SAAS;AAChC,MAAI,CAAC,IAAI,SAAS,KAAK,SAAS;AAChC,MAAI,CAAC,IAAI,SAAS,KAAK,SAAS;AAChC,MAAI,CAAC,IAAI,SAAS,KAAK,SAAS;AAChC,SAAO;AACT;AA0EO,SAAS,SAAS,KAAK,GAAG;AAG/B,MAAI,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAC9B,MAAI;AACJ,MAAI,SAAS,GAAK;AAEhB,YAAQ,KAAK,KAAK,SAAS,CAAG;AAC9B,QAAI,CAAC,IAAI,MAAM;AACf,YAAQ,MAAM;AACd,QAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AACzB,QAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AACzB,QAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AAAA,EAC3B,OAAO;AAEL,QAAI,IAAI;AACR,QAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAG,KAAI;AACrB,QAAI,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAG,KAAI;AAC7B,QAAI,KAAK,IAAI,KAAK;AAClB,QAAI,KAAK,IAAI,KAAK;AAClB,YAAQ,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAG;AAClE,QAAI,CAAC,IAAI,MAAM;AACf,YAAQ,MAAM;AACd,QAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK;AACzC,QAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK;AACzC,QAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK;AAAA,EAC3C;AACA,SAAO;AACT;AAiNO,IAAIC,aAAiBA;AAmCrB,IAAI,cAAa,WAAY;AAClC,MAAI,UAAeC,QAAO;AAC1B,MAAI,YAAiB,WAAW,GAAG,GAAG,CAAC;AACvC,MAAI,YAAiB,WAAW,GAAG,GAAG,CAAC;AACvC,SAAO,SAAU,KAAKC,IAAG,GAAG;AAC1B,QAAIC,OAAW,IAAID,IAAG,CAAC;AACvB,QAAIC,OAAM,WAAW;AACnB,MAAK,MAAM,SAAS,WAAWD,EAAC;AAChC,UAAS,IAAI,OAAO,IAAI,KAAU,CAAK,MAAM,SAAS,WAAWA,EAAC;AAClE,MAAK,UAAU,SAAS,OAAO;AAC/B,mBAAa,KAAK,SAAS,KAAK,EAAE;AAClC,aAAO;AAAA,IACT,WAAWC,OAAM,UAAU;AACzB,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,UAAI,CAAC,IAAI;AACT,aAAO;AAAA,IACT,OAAO;AACL,MAAK,MAAM,SAASD,IAAG,CAAC;AACxB,UAAI,CAAC,IAAI,QAAQ,CAAC;AAClB,UAAI,CAAC,IAAI,QAAQ,CAAC;AAClB,UAAI,CAAC,IAAI,QAAQ,CAAC;AAClB,UAAI,CAAC,IAAI,IAAIC;AACb,aAAOC,WAAU,KAAK,GAAG;AAAA,IAC3B;AAAA,EACF;AACF,GAAE;AAaK,IAAI,UAAS,WAAY;AAC9B,MAAI,QAAQH,QAAO;AACnB,MAAI,QAAQA,QAAO;AACnB,SAAO,SAAU,KAAKC,IAAG,GAAG,GAAG,GAAG,GAAG;AACnC,IAAAG,OAAM,OAAOH,IAAG,GAAG,CAAC;AACpB,IAAAG,OAAM,OAAO,GAAG,GAAG,CAAC;AACpB,IAAAA,OAAM,KAAK,OAAO,OAAO,IAAI,KAAK,IAAI,EAAE;AACxC,WAAO;AAAA,EACT;AACF,GAAE;AAYK,IAAI,WAAU,WAAY;AAC/B,MAAI,OAAY,OAAO;AACvB,SAAO,SAAU,KAAK,MAAM,OAAO,IAAI;AACrC,SAAK,CAAC,IAAI,MAAM,CAAC;AACjB,SAAK,CAAC,IAAI,MAAM,CAAC;AACjB,SAAK,CAAC,IAAI,MAAM,CAAC;AACjB,SAAK,CAAC,IAAI,GAAG,CAAC;AACd,SAAK,CAAC,IAAI,GAAG,CAAC;AACd,SAAK,CAAC,IAAI,GAAG,CAAC;AACd,SAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACjB,SAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACjB,SAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACjB,WAAOD,WAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC3C;AACF,GAAE;;;AC3tBK,SAASE,UAAS;AACvB,MAAI,MAAM,IAAa,WAAW,CAAC;AACnC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AAAA,EACX;AACA,SAAO;AACT;AAskBO,IAAIC,YAAU,WAAY;AAC/B,MAAI,MAAMC,QAAO;AACjB,SAAO,SAAUC,IAAG,QAAQ,QAAQ,OAAO,IAAI,KAAK;AAClD,QAAI,GAAG;AACP,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,CAAC,QAAQ;AACX,eAAS;AAAA,IACX;AACA,QAAI,OAAO;AACT,UAAI,KAAK,IAAI,QAAQ,SAAS,QAAQA,GAAE,MAAM;AAAA,IAChD,OAAO;AACL,UAAIA,GAAE;AAAA,IACR;AACA,SAAK,IAAI,QAAQ,IAAI,GAAG,KAAK,QAAQ;AACnC,UAAI,CAAC,IAAIA,GAAE,CAAC;AACZ,UAAI,CAAC,IAAIA,GAAE,IAAI,CAAC;AAChB,SAAG,KAAK,KAAK,GAAG;AAChB,MAAAA,GAAE,CAAC,IAAI,IAAI,CAAC;AACZ,MAAAA,GAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAClB;AACA,WAAOA;AAAA,EACT;AACF,GAAE;;;AC7mBF,IAAqB,OAArB,MAAqB,MAAI;EACd;EACA;EACA;EACA;EAET,YAAY,KAAmB,KAAiB;AAC9C,UAAM,OAAO,aAAK,OAAM;AACxB,iBAAK,IAAI,MAAM,KAAK,GAAG;AAEvB,SAAK,OAAO,aAAK,IAAI,aAAK,OAAM,GAAI,KAAK,IAAI;AAC7C,SAAK,MAAM,aAAK,MAAM,GAAG;AACzB,SAAK,MAAM,aAAK,IAAI,aAAK,OAAM,GAAI,KAAK,IAAI;AAE5C,SAAK,MAAM,aAAK,OAAO,KAAK,GAAG;EACjC;EAEA,QAAK;AACH,WAAO,KAAK,IAAI,CAAC;EACnB;EAEA,SAAM;AACJ,WAAO,KAAK,IAAI,CAAC;EACnB;EAEA,QAAK;AACH,WAAO,KAAK,IAAI,CAAC;EACnB;EAEA,KAAE;AACA,WAAO,KAAK,KAAK,CAAC;EACpB;EAEA,KAAE;AACA,WAAO,KAAK,KAAK,CAAC;EACpB;EAEA,KAAE;AACA,WAAO,KAAK,KAAK,CAAC;EACpB;EAEA,KAAE;AACA,WAAO,KAAK,IAAI,CAAC;EACnB;EAEA,KAAE;AACA,WAAO,KAAK,IAAI,CAAC;EACnB;EAEA,KAAE;AACA,WAAO,KAAK,IAAI,CAAC;EACnB;;;;EAKA,UAAU,IAAgB;AACxB,iBAAK,IAAI,KAAK,KAAK,KAAK,KAAK,EAAE;AAC/B,iBAAK,IAAI,KAAK,MAAM,KAAK,MAAM,EAAE;AACjC,WAAO;EACT;EAEA,YAAY,KAAiB;AAC3B,iBAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG;AAChC,iBAAK,KAAK,KAAK,MAAM,GAAG;AACxB,WAAO;EACT;;;;EAKA,OAAO,MAAU;AACf,UAAMC,OAAM,aAAK,OAAM;AACvB,UAAMC,OAAM,aAAK,OAAM;AAEvB,iBAAK,IAAID,MAAK,KAAK,KAAK,KAAK,GAAG;AAChC,iBAAK,IAAIC,MAAK,KAAK,MAAM,KAAK,IAAI;AAClC,iBAAK,SAASD,MAAKA,MAAKC,IAAG;AAE3B,WAAO,IAAI,MAAKA,MAAKD,IAAG;EAC1B;;;;EAKA,WAAW,MAAU;AACnB,QAAI,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AAAG,aAAO;AACvC,QAAI,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AAAG,aAAO;AACvC,QAAI,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AAAG,aAAO;AACvC,QAAI,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;AAAG,aAAO;AACvC,QAAI,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;AAAG,aAAO;AACvC,QAAI,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;AAAG,aAAO;AAEvC,WAAO;EACT;EAEA,QAAQ,MAAU;AAChB,UAAM,eAAe,KAAK,MAAM,IAAI;AAEpC,WAAQ,iBAAiB,SAChB,aAAa,MAAK,KAAM,KACzB,aAAa,OAAM,KAAM,KACzB,aAAa,MAAK,KAAM;EAClC;;;;;EAMA,MAAM,MAAU;AACd,QAAI,CAAC,KAAK,WAAW,IAAI;AAAG,aAAO;AAEnC,UAAM,SAAS,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC;AAClD,UAAM,SAAS,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC;AAClD,UAAM,SAAS,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC;AAClD,UAAM,QAAQ,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AAC/C,UAAM,QAAQ,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AAC/C,UAAM,QAAQ,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AAE/C,WAAO,IAAI,MAAK,CAAC,QAAQ,QAAQ,MAAM,GAAG,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,CAAC;EAC5F;;;;APzHF,8BAAkB;AAKlB,SAAS,iBAAiB;AACtB,OAAK,WAAW;AAChB,OAAK,WAAW;AAChB,OAAK,kBAAkB;AACvB,OAAK,oCAAoC;AACzC,OAAK,eAAe;AACpB,OAAK,eAAe;AACpB,OAAK,cAAc;AACnB,OAAK,YAAY;AACrB;AAIA,IAAI,cAAc;AAAA,EACd,eAAAE,QAAK,OAAO;AAAA,EACZ,eAAAA,QAAK,OAAO;AAAA,EACZ,eAAAA,QAAK,OAAO;AAChB;AACA,IAAI,eAAe,eAAAA,QAAK,OAAO;AAqBxB,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhB,YAAY,KAAK,MAAM;AACnB,WAAO,OAAO,OAAO,CAAC,GAAG,IAAI,kBAAgB,IAAI;AACjD,SAAK,MAAM;AAGX,SAAK,eAAe,CAAC,KAAK;AAG1B,SAAK,eAAe,CAAC,KAAK;AAG1B,SAAK,WAAW,CAAC,CAAC,KAAK;AAGvB,SAAK,WAAW,CAAC,CAAC,KAAK;AAMvB,SAAK,kBAAkB,KAAK;AAO5B,SAAK,oCAAoC,KAAK;AAS9C,SAAK,UAAU;AAUf,SAAK,QAAQ;AAqBb,SAAK,eAAe,KAAK,IAAI,KAAK,aAAa,CAAC,UAAU,CAAC;AAG3D,QAAI,YAAY,MAAM,IAAI,KAAK,gBAAgB,IAAI,YAAY,EAAE;AACjE,QAAI,KAAK,aAAa,KAAK,cAAc,iBAAiB;AAAA,MACtD,QAAQ,IAAI;AAAA,MACZ,QAAQ,CAAC,GAAG,WAAW,CAAC;AAAA,IAC5B,CAAC;AAGD,SAAK,eAAe,KAAK;AAGzB,SAAK,YAAY,KAAK;AAQtB,SAAK,cAAc,KAAK;AAGxB,SAAK,aAAa,eAAAA,QAAK,WAAW,GAAG,GAAG,CAAC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,0BAA0B;AACtB,QAAI,OAAO,KAAK,IAAI,KAAK,gBAAgB,KAAK,YAAY;AAC1D,QAAI,MAAM,YAAY,CAAC;AACvB,WAAO,eAAAA,QAAK,KAAK,KAAK,KAAK,eAAe;AAAA,EAC9C;AAAA;AAAA,EAEA,oBAAoB;AAChB,QAAI,MAAM,KAAK,wBAAwB;AACvC,QAAI,KAAK,gBAAgB,EAAG,QAAO;AACnC,WAAO,eAAAA,QAAK,YAAY,KAAK,KAAK,KAAK,YAAY,CAAC,KAAK,WAAW;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,oBAAoB;AAChB,QAAI,MAAM,KAAK,wBAAwB;AACvC,QAAI,eAAe,YAAY,CAAC;AAChC,WAAO,KAAK,IAAI,cAAc,KAAK,YAAY;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc;AACV,QAAI,MAAM,KAAK,kBAAkB;AACjC,QAAI,eAAe,YAAY,CAAC;AAChC,WAAO,KAAK,IAAI,cAAc,KAAK,YAAY;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe;AACX,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBA,sBAAsB;AAGlB,QAAI,YAAY,KAAK;AACrB,QAAI,KAAK,IAAI,UAAU,qBAAqB;AACxC,UAAI,CAAC,KAAK,IAAI,UAAU,gBAAgB;AACpC,qBAAa,KAAK;AAAA,MACtB;AAAA,IACJ;AACA,QAAI,cAAc,EAAG;AAGrB,QAAI,eAAe,KAAK,IAAI,OAAO;AACnC,WAAO,YAAY;AAGnB,QAAI,OAAO,QAAS,KAAK,KAAK;AAC9B,QAAIC,MAAK,aAAa,KAAK,KAAK,eAAe,YAAY;AAC3D,QAAI,KAAK,aAAa,KAAK,KAAK,eAAe,YAAY;AAC3D,QAAI,KAAK,SAAU,CAAAA,MAAK,CAACA;AACzB,QAAI,KAAK,SAAU,MAAK,CAAC;AAGzB,QAAI,QAAQ,IAAI,KAAK;AACrB,SAAK,WAAYA,MAAK,IAAKA,MAAK,QAAQA;AACxC,QAAI,KAAK,UAAU,MAAO,MAAK,WAAW;AAC1C,QAAI,WAAW,KAAK,KAAK,IAAI;AAC7B,SAAK,QAAQ,KAAK,IAAI,CAAC,UAAU,KAAK,IAAI,UAAU,KAAK,QAAQ,EAAE,CAAC;AAEpE,mBAAAD,QAAK,IAAI,KAAK,YAAY,GAAG,GAAG,CAAC;AACjC,QAAI,MAAM,KAAK;AACf,QAAI,SAAS;AACb,mBAAAA,QAAK,QAAQ,KAAK,KAAK,QAAQ,KAAK,KAAK;AACzC,mBAAAA,QAAK,QAAQ,KAAK,KAAK,QAAQ,KAAK,OAAO;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,kCAAkC;AAE9B,SAAK,gBAAgB,KAAK,eAAe,KAAK,eAAe,KAAK;AAAA,EACtE;AAAA;AAAA,EAGA,iCAAiC;AAE7B,QAAI,UAAU,0BAA0B,IAAI;AAC5C,QAAI,KAAK,cAAc,QAAS,MAAK,cAAc;AAAA,EACvD;AAEJ;AASA,SAAS,0BAA0B,MAAM;AACrC,MAAI,CAAC,KAAK,WAAW;AACjB,SAAK,YAAY,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC;AACpD,SAAK,iBAAiB,KAAK,IAAI,MAAM,iBAAiB,KAAK,KAAK,IAAI,KAAK;AACzE,SAAK,YAAY,eAAAA,QAAK,OAAO;AAC7B,SAAK,YAAY,MAAM;AAAA,EAC3B;AACA,MAAI,MAAM,eAAAA,QAAK,KAAK,KAAK,WAAW,KAAK,wBAAwB,CAAC;AAClE,iBAAAA,QAAK,IAAI,KAAK,KAAK,KAAK,IAAI,iBAAiB;AAC7C,WAAS,IAAI,GAAG,IAAI,GAAG,IAAK,KAAI,CAAC,KAAK;AACtC,OAAK,UAAU,YAAY,GAAG;AAC9B,MAAIE,QAAO,KAAK,IAAI,KAAK,cAAc,KAAK,WAAW,IAAI;AAC3D,iBAAAF,QAAK,MAAM,KAAK,WAAW,KAAK,aAAa,GAAG,CAACE,KAAI;AACrD,aAAO,wBAAAC,SAAM,KAAK,gBAAgB,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,IAAI;AAC1F;AAUA,SAAS,OAAO,cAAc;AAC1B,MAAIF,MAAK,aAAa;AACtB,MAAI,KAAK,aAAa;AACtB,MAAI,OAAQ,KAAK,IAAIA,GAAE,IAAI,OAAO,KAAK,IAAIA,MAAK,KAAK,IAAI;AACzD,MAAI,OAAQ,KAAK,IAAI,EAAE,IAAI,OAAO,KAAK,IAAI,KAAK,KAAK,IAAI;AACzD,MAAI,QAAQ,MAAM;AACd,iBAAa,KAAK;AAClB,iBAAa,KAAK;AAClB,aAAS,QAAQA,OAAM;AACvB,aAAS,QAAQ,MAAM;AAAA,EAC3B,OAAO;AACH,YAAQA,OAAM;AACd,YAAQ,MAAM;AAAA,EAClB;AACJ;AAEA,IAAI,QAAQ;AACZ,IAAI,QAAQ;;;AQ3UZ,sBAAgB;AAChB,IAAAG,kBAAiB;;;ACGjB,IAAAC,kBAAiB;AAKV,IAAM,gBAAN,MAAoB;AAAA,EACvB,cAAc;AAGV,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,SAAS;AAId,SAAK,iBAAiB;AAItB,SAAK,kBAAkB;AAIvB,SAAK,WAAW;AAAA,EACpB;AACJ;AAee,SAAR,iBAAkB,KAAK;AAE1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO,IAAI;AAAA,IAEX,OAAO,SAAU,KAAK,OAAO;AAEzB,UAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,UAAI,MAAM,SAAU,iBAAAC,QAAK,KAAK,KAAK,MAAM,QAAQ;AACjD,YAAM,WAAW;AAEjB,YAAM,iBAAiB,gBAAAA,QAAK,OAAO;AACnC,YAAM,kBAAkB,gBAAAA,QAAK,OAAO;AACpC,YAAM,WAAW,IAAI,aAAa,CAAC;AAGnC,UAAI,cAAc,MAAM,UAAU,MAAM,MAAM,cAAc;AAC5D,sBAAAA,QAAK,KAAK,MAAM,iBAAiB,MAAM,cAAc;AACrD,4BAAsB,KAAK;AAAA,IAC/B;AAAA,IAEA,UAAU;AAAA,IAIV,QAAQ,SAAU,IAAI,QAAQ;AAC1B,UAAI,MAAM,IAAI;AACd,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,wBAAAA,QAAK,IAAI,MAAM,UAAU,MAAM,gBAAgB,GAAG;AAClD,8BAAsB,KAAK;AAAA,MAC/B;AAAA,IACJ;AAAA,EAGJ;AACJ;AAKO,SAAS,sBAAsB,OAAO;AACzC,MAAI,KAAK,MAAM,QAAQ;AACvB,MAAI,OAAO,MAAM;AACjB,MAAI,MAAM,MAAM;AAChB,MAAI,CAAC,IAAI,KAAK,CAAC,IAAI;AACnB,MAAI,CAAC,IAAI,KAAK,CAAC;AACf,MAAI,CAAC,IAAI,KAAK,CAAC,IAAI;AACnB,MAAI,CAAC,IAAI,KAAK,CAAC,IAAI;AACnB,MAAI,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,KAAK,CAAC,IAAI;AACvB;;;AChGA,IAAAC,kBAAiB;AAGV,IAAM,eAAN,MAAmB;AAAA,EACtB,cAAc;AAEV,SAAK,OAAO;AAAA,EAChB;AACJ;AAQe,SAAR,gBAAkB,KAAK;AAE1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO,IAAI;AAAA,IAEX,OAAO,SAAU,OAAO,OAAO;AAC3B,YAAM,OAAO,IAAI,QAAQ,QAAQ;AAEjC,UAAI,SAAS,IAAI,KAAK,gBAAgB,MAAM,IAAI;AAChD,6BAAuB,OAAO,MAAM;AAAA,IACxC;AAAA,IAGA,UAAU,SAAU,OAAO,OAAO;AAI9B,UAAI,IAAI,KAAK,YAAY,MAAM,IAAI,GAAG;AAClC,YAAI,OAAO,IAAI,KAAK,gBAAgB,MAAM,IAAI;AAC9C,+BAAuB,OAAO,IAAI;AAClC,2BAAmB,OAAO,MAAM,GAAG,KAAK;AAAA,MAC5C;AACA,UAAI,QAAQ,WAAW,MAAM,IAAI;AAAA,IACrC;AAAA,IAGA,QAAQ,SAAU,IAAI,QAAQ;AAC1B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,OAAO,IAAI,KAAK,gBAAgB,MAAM,IAAI;AAC9C,+BAAuB,OAAO,IAAI;AAAA,MACtC;AAAA,IACJ;AAAA,IAGA,cAAc,SAAU,IAAI,QAAQ;AAEhC,UAAI,UAAU,IAAI;AAClB,UAAI,WAAW,MAAO,IAAI,UAAU,OAAO;AAC3C,kBAAY,IAAI;AAChB,UAAI,SAAS,UAAU;AASvB,UAAI,gBAAgB,SAAS,YAAY;AACzC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,KAAK,MAAM;AACf,YAAI,OAAO,IAAI,KAAK,gBAAgB,EAAE;AACtC,YAAI,WAAW,IAAI,KAAK,eAAe,EAAE;AACzC,2BAAmB,OAAO,MAAM,cAAc,QAAQ;AAAA,MAC1D;AAAA,IACJ;AAAA,EAEJ;AAEJ;AAKA,IAAI,QAAQ,gBAAAC,QAAK,OAAO;AAEjB,SAAS,uBAAuB,WAAW,UAAU;AACxD,MAAI,MAAM,UAAU,KAAK;AACzB,MAAI,MAAM,SAAS;AACnB,kBAAAA,QAAK,KAAK,IAAI,MAAM,GAAG;AACvB,kBAAAA,QAAK,IAAI,IAAI,KAAK,SAAS,OAAO,SAAS,QAAQ,SAAS,KAAK;AACjE,kBAAAA,QAAK,IAAI,IAAI,KAAK,IAAI,MAAM,IAAI,GAAG;AACvC;AAGA,SAAS,uBAAuB,WAAW,UAAU;AACjD,MAAI,OAAO,UAAU,KAAK,KAAK;AAC/B,MAAI,KAAK,SAAS,QAAQ;AAC1B,kBAAAA,QAAK,IAAI,SAAS,gBAAgB,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE;AACzE;AAGA,SAAS,mBAAmB,WAAW,UAAU,cAAc,UAAU;AAErE,MAAI,MAAM,UAAU,KAAK;AACzB,kBAAAA,QAAK,YAAY,OAAO,SAAS,gBAAgB,KAAK,YAAY;AAIlE,MAAI,SAAU,iBAAAA,QAAK,KAAK,OAAO,SAAS,iBAAiB,OAAO,GAAG;AAGnE,kBAAAA,QAAK,KAAK,SAAS,iBAAiB,KAAK;AAC7C;;;ACxHA,2BAAyB;AAuBV,SAAR,wBAAkB,KAAK;AAE1B,MAAI,YAAY,CAAC;AAEjB,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,UAAU;AAAA,MACV,aAAa,IAAI;AAAA,MACjB,aAAa,IAAI;AAAA,MACjB,UAAU;AAAA,IACd;AAAA,IAEA,OAAO;AAAA,IAEP,UAAU;AAAA,IAGV,QAAQ,SAAS,eAAe,IAAI,QAAQ;AACxC,UAAI,OAAO,IAAI;AAIf,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,KAAK,OAAO,CAAC,EAAE;AACnB,YAAI,MAAM,KAAK,gBAAgB,EAAE;AACjC,kBAAU,CAAC,IAAI,IAAI;AAAA,MACvB;AACA,gBAAU,SAAS,OAAO;AAG1B,+BAAAC,SAAa,WAAW,SAAUC,IAAG,GAAG;AACpC,YAAI,SAAS,OAAOA,EAAC;AACrB,YAAI,SAAS,OAAO,CAAC;AACrB,YAAI,CAAC,UAAU,CAAC,OAAQ;AACxB,YAAI,YAAY,UAAUA,EAAC;AAC3B,YAAI,YAAY,UAAU,CAAC;AAC3B,YAAI,mBAAmB,QAAQ,QAAQ,WAAW,SAAS,GAAG;AAC1D,0BAAgB,KAAK,QAAQ,MAAM;AAAA,QACvC;AAAA,MACJ,CAAC;AAAA,IAEL;AAAA,EACJ;AAWA,WAAS,gBAAgBC,MAAK,QAAQ,QAAQ;AAC1C,QAAI,MAAM,OAAO;AACjB,QAAI,MAAM,OAAO;AAGjB,QAAI,OAAO,cAAc,OAAO,aAAa;AACzC,UAAI,OAAO,SAAU,QAAO,SAAS,GAAG;AAAA,IAC5C;AACA,QAAI,OAAO,cAAc,OAAO,aAAa;AACzC,UAAI,OAAO,SAAU,QAAO,SAAS,GAAG;AAAA,IAC5C;AAGA,IAAAA,KAAI,KAAK,0BAA0B,KAAK,GAAG;AAAA,EAC/C;AAOA,WAAS,mBAAmB,QAAQ,QAAQ,WAAW,WAAW;AAC9D,QAAI,OAAO,UAAU;AACjB,UAAI,OAAO,UAAU;AACjB,eAAO,qBAAqB,WAAW,SAAS;AAAA,MACpD,OAAO;AACH,eAAO,gBAAgB,WAAW,SAAS;AAAA,MAC/C;AAAA,IACJ,WAAW,OAAO,UAAU;AACxB,aAAO,gBAAgB,WAAW,SAAS;AAAA,IAC/C;AACA,WAAO;AAAA,EACX;AAQA,WAAS,qBAAqBD,IAAG,GAAG;AAEhC,QAAI,QAAQA,GAAE,CAAC,IAAIA,GAAE,CAAC,KAAK;AAC3B,QAAI,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AAC3B,QAAIE,MAAKF,GAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI;AAC/B,QAAI,KAAKA,GAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI;AAE/B,QAAI,SAASE,MAAKA,MAAK,KAAK;AAC5B,QAAI,SAAS,OAAO;AACpB,WAAQ,UAAU,SAAS;AAAA,EAC/B;AAQA,WAAS,gBAAgB,KAAK,MAAM;AAEhC,QAAI,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK;AAC9B,QAAI,KAAK,IAAI,CAAC,IAAI;AAClB,QAAI,KAAK,IAAI,CAAC,IAAI;AAElB,QAAI,KAAK,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACnC,QAAI,KAAK,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAEnC,QAAIA,MAAK,KAAK;AACd,QAAI,KAAK,KAAK;AACd,QAAI,SAASA,MAAKA,MAAK,KAAK;AAC5B,WAAQ,UAAU,MAAM;AAAA,EAC5B;AAEA,WAAS,MAAM,KAAK,IAAI,IAAI;AACxB,WAAQ,MAAM,KAAM,KAAM,MAAM,KAAM,KAAK;AAAA,EAC/C;AAKJ;;;AChKe,SAAR,uBAAkB,KAAK;AAC1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,UAAU;AAAA,IACd;AAAA,IAEA,OAAO,SAAU,KAAK,OAAO;AAEzB,UAAI,OAAO,IAAI;AACf,UAAI,KAAK,WAAW,GAAG,GAAG;AACtB,YAAI,OAAO,KAAK,WAAW,GAAG,EAAE;AAChC,aAAK,YAAY,SAAS,cAAc,SAAS;AAC7C,cAAI,KAAK,IAAI,KAAK,kBAAkB,GAAG,EAAE;AACzC,cAAI,GAAI,IAAG,SAAS,GAAG;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,UAAU,SAAU,KAAK,OAAO;AAC5B,UAAI,OAAO,IAAI;AACf,UAAI,KAAK,WAAW,GAAG,GAAG;AACtB,aAAK,WAAW,GAAG,EAAE,KAAK,YAAY;AAAA,MAC1C;AAAA,IACJ;AAAA,EAIJ;AACJ;;;AC7Be,SAAR,mBAAkB,KAAK;AAC1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,QAAQ;AAAA,IACZ;AAAA,IAEA,OAAO;AAAA,IAEP,UAAU;AAAA,IAEV,QAAQ,SAAS,eAAe,IAAI,QAAQ;AACxC,UAAI,OAAO,IAAI,OAAO;AACtB,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,kBAAU,OAAO,CAAC,GAAG,MAAM,GAAG;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;AACJ;AAGA,SAAS,UAAU,OAAO,MAAM,KAAK;AACjC,MAAI,CAAC,IAAI,KAAK,QAAQ,MAAM,IAAI,EAAG;AACnC,MAAI,OAAO,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE;AAC5C,MAAI,CAAC,KAAK,SAAU;AACpB,MAAI,aAAc,OAAO,MAAM;AAC/B,MAAI,UAAU,kBAAkB,MAAM,CAAC,UAAU;AACrD;;;ACpCA,IAAAC,kBAAiB;AAQF,SAAR,sBAAkB,KAAK;AAE1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,QAAQ,IAAI;AAAA,MACZ,QAAQ;AAAA,MACR,iBAAiB;AAAA,IACrB;AAAA,IAEA,OAAO,SAAU,KAAK,OAAO;AACzB,UAAI,MAAM,gBAAAC,QAAK,OAAO;AACtB,YAAM,SAAU,MAAM,SAAU,gBAAAA,QAAK,KAAK,KAAK,MAAM,MAAM,IAAI;AAC/D,qBAAe,KAAK;AACpB,2BAAqB,KAAK;AAAA,IAC9B;AAAA,IAEA,UAAU;AAAA;AAAA,IAIV,QAAQ,SAAS,aAAa,IAAI,QAAQ;AACtC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,uBAAe,OAAO,CAAC,CAAC;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA,IAIA,cAAc,SAAS,iBAAiB,IAAI,QAAQ;AAChD,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,6BAAqB,OAAO,CAAC,CAAC;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;AAIA,WAAS,eAAe,OAAO;AAC3B,QAAI,KAAK,MAAM;AACf,QAAI,OAAO,IAAI,KAAK,gBAAgB,EAAE;AACtC,QAAI,QAAQ,IAAI,KAAK,gBAAgB,MAAM,MAAM;AACjD,QAAI,CAAC,OAAO;AACR,UAAI,MAAM,gBAAiB,OAAM,gBAAgB,EAAE;AACnD,UAAI,KAAK,gBAAgB,IAAI,IAAI,KAAK,MAAM,aAAa;AAAA,IAC7D,OAAO;AACH,sBAAAA,QAAK,IAAI,KAAK,gBAAgB,MAAM,gBAAgB,MAAM,MAAM;AAAA,IACpE;AAAA,EACJ;AAEA,WAAS,qBAAqB,OAAO;AACjC,QAAI,KAAK,MAAM;AACf,QAAI,OAAO,IAAI,KAAK,gBAAgB,EAAE;AACtC,QAAI,QAAQ,IAAI,KAAK,gBAAgB,MAAM,MAAM;AACjD,QAAI,OAAO;AACP,sBAAAA,QAAK,IAAI,KAAK,iBAAiB,MAAM,iBAAiB,MAAM,MAAM;AAAA,IACtE;AAAA,EACJ;AAEJ;;;ACvEA,IAAAC,kBAAiB;AAGF,SAAR,aAAkB,KAAK;AAC1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,MAAM;AAAA,MACN,QAAQ;AAAA,IACZ;AAAA,IAGA,OAAO,SAAU,KAAK,OAAO;AAEzB,UAAI,SAAS,IAAI,KAAK,gBAAgB,GAAG;AACzC,UAAI,MAAM,MAAM;AACZ,YAAI,UAAU,eAAe,MAAM,MAAM,OAAO,OAAO,QAAQ;AAAA,MACnE,OAAO;AACH,cAAM,IAAI,MAAM,uDAAuD;AAAA,MAC3E;AACA,UAAI,CAAC,MAAM,OAAQ,OAAM,SAAS,gBAAAC,QAAK,OAAO;AAG9C,UAAI,OAAO,OAAO;AAClB,YAAM,KAAK,SAAS;AAAA,QAChB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,QACxB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,QACxB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,MAAC;AAAA,IACjC;AAAA,IAGA,UAAU,SAAU,KAAK,OAAO;AAC5B,YAAM,KAAK,QAAQ;AAAA,IACvB;AAAA,IAIA,cAAc,SAAU,IAAI,QAAQ;AAGhC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,KAAK,MAAM;AAEf,YAAI,OAAO,IAAI,KAAK,gBAAgB,EAAE,EAAE;AACxC,cAAM,KAAK,SAAS;AAAA,UAChB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,UACxB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,UACxB,KAAK,CAAC,IAAI,MAAM,OAAO,CAAC;AAAA,QAAC;AAAA,MACjC;AAAA,IACJ;AAAA,EAGJ;AACJ;;;AC1DA,IAAAC,kBAAiB;AAWV,SAAS,gBAAgB;AAC5B,OAAK,UAAU;AACf,OAAK,UAAU;AACf,OAAK,UAAU;AAGf,OAAK,WAAW;AAChB,OAAK,YAAY;AACjB,OAAK,iBAAiB;AACtB,OAAK,kBAAkB;AACvB,OAAK,mBAAmB;AAGxB,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,OAAK,YAAY;AACjB,OAAK,WAAW;AAChB,OAAK,WAAW;AAGhB,OAAK,aAAa;AAClB,OAAK,gBAAgB;AACrB,OAAK,aAAa;AACtB;AAce,SAAR,iBAAkB,KAAK;AAC1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO,IAAI,cAAc;AAAA,IAEzB,OAAO;AAAA,IAEP,UAAU;AAAA,IAGV,QAAQ,SAAS,kBAAkB,IAAI,QAAQ;AAC3C,UAAI,OAAO,IAAI;AACf,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,OAAO,KAAK,WAAW,MAAM,IAAI;AACrC,YAAI,KAAM,sBAAqB,IAAI,OAAO,KAAK,IAAI;AAAA,MACvD;AAAA,IACJ;AAAA,EAGJ;AACJ;AAGA,IAAI,UAAU,gBAAAC,QAAK,OAAO;AAC1B,IAAI,WAAW,gBAAAA,QAAK,OAAO;AAC3B,IAAI,UAAU,gBAAAA,QAAK,OAAO;AAS1B,SAAS,qBAAqB,IAAI,OAAO,MAAM;AAM3C,MAAI,WAAY,KAAK,QAAQ,IAAI;AACjC,MAAI,UAAW,YAAY,MAAM,aAAa,MAAM;AACpD,MAAI,UAAU;AACV,UAAM,aAAa;AACnB,UAAM,aAAa;AAAA,EACvB;AAGA,MAAI,MAAM,SAAS;AACf,QAAI,MAAM,YAAY;AAClB,UAAI,MAAM,gBAAgB,GAAG;AACzB,YAAI,KAAK,MAAM;AACf,YAAI,MAAM,gBAAgB,GAAI,OAAM,MAAM,gBAAgB;AAC1D,aAAK,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1B,cAAM,iBAAiB;AAAA,MAC3B;AAAA,IACJ,WAAW,SAAS;AAChB,YAAM,aAAa;AACnB,UAAI,CAAC,SAAU,OAAM;AACrB,YAAM,gBAAgB,MAAM;AAC5B,WAAK,aAAa,CAAC,GAAG,MAAM,aAAa,CAAC,CAAC;AAE3C,UAAI,CAAC,YAAY,KAAK,SAAS,CAAC,IAAI,EAAG,MAAK,SAAS,CAAC,IAAI;AAAA,IAC9D;AAAA,EACJ,OAAO;AACH,UAAM,aAAa;AAAA,EACvB;AAGA,MAAI,IAAI;AACR,MAAI,OAAO;AACX,MAAI,MAAM,SAAS;AAEf,QAAI,QAAQ,MAAM;AAIlB,oBAAAA,QAAK,IAAI,GAAG,GAAG,GAAG,KAAK;AAGvB,oBAAAA,QAAK,QAAQ,GAAG,GAAG,SAAS,MAAM,OAAO;AAKzC,oBAAAA,QAAK,SAAS,MAAM,GAAG,KAAK,QAAQ;AACpC,SAAK,CAAC,IAAI;AACV,QAAI,UAAU,gBAAAA,QAAK,OAAO,IAAI;AAC9B,oBAAAA,QAAK,UAAU,MAAM,IAAI;AAEzB,QAAI,UAAU,GAAG;AAEb,UAAI,UAAU,MAAM;AACpB,UAAI,CAAC,SAAU,YAAW,MAAM;AAGhC,UAAI,UAAU,MAAM,iBAAiB;AACrC,UAAI,UAAU,QAAS,WAAU;AAEjC,sBAAAA,QAAK,MAAM,MAAM,MAAM,OAAO;AAC9B,WAAK,WAAW,IAAI;AAAA,IACxB;AAIA,SAAK,WAAW,MAAM;AAAA,EAC1B,OAAO;AACH,SAAK,WAAW,MAAM;AAAA,EAC1B;AACJ;;;AC1Je,SAAR,uBAAkB,KAAK;AAC1B,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO,CAAC;AAAA,IAER,OAAO;AAAA,IAEP,UAAU;AAAA,IAEV,QAAQ,SAAS,eAAe,IAAI,QAAQ;AACxC,UAAI,OAAO,IAAI;AACf,UAAI,aAAa,IAAI,OAAO;AAC5B,UAAI,aAAa,IAAI,OAAO;AAE5B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,YAAY,KAAK,YAAY,MAAM,IAAI;AAC3C,yBAAiB,WAAW,YAAY,UAAU;AAAA,MACtD;AAAA,IACJ;AAAA,EAEJ;AACJ;AAUA,SAAS,iBAAiB,OAAO,QAAQ,YAAY;AACjD,QAAM,UAAU,CAAC,CAAC,OAAO;AAEzB,MAAI,KAAK,OAAO,UAAW,OAAO,WAAW,IAAI,IAAM,OAAO,WAAW,KAAK;AAC9E,MAAI,KAAK,OAAO,QAAS,OAAO,OAAO,IAAI,IAAM,OAAO,OAAO,KAAK;AAEpE,OAAK,KAAK,QAAQ,GAAG;AACjB,UAAM,UAAU;AAAA,EACpB,OAAO;AACH,UAAM,UAAU;AAChB,QAAI,IAAI;AACJ,UAAI,MAAM,GAAI,eAAc,KAAK;AACjC,UAAI,IAAI;AACJ,sBAAc,KAAK,KAAK,IAAI,KAAK;AAAA,MACrC;AAAA,IACJ,OAAO;AACH,oBAAc,KAAK,KAAK,KAAK;AAAA,IACjC;AACA,UAAM,UAAU;AAAA,EACpB;AAEJ;;;ACjEA,IAAAC,kBAAiB;AAQF,SAAR,eAAkB,KAAKC,YAAW,IAAI;AAEzC,MAAI,aAAaA;AAGjB,MAAI,QAAQ,IAAI,UAAU,SAAS;AACnC,MAAI,OAAO,WAAW,UAAU,EAAE,QAAQ,MAAM,cAAc,GAAG,GAAG,KAAK;AACzE,OAAK,SAAS,IAAI,KAAK,KAAK;AAC5B,MAAI,MAAM,IAAI,UAAU,qBAAqB,sBAAsB;AACnE,MAAI,aAAa,IAAI,GAAG,GAAG,CAAC;AAC5B,MAAI,aAAa,IAAI,GAAG,GAAG,CAAC;AAC5B,MAAI,QAAQ;AACZ,OAAK,WAAW;AAChB,MAAI,OAAO;AAGX,MAAI,UAAU,kBAAkB,MAAM,KAAK;AAG3C,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,IAGA,OAAO,SAAU,KAAK,OAAO;AACzB,UAAI,OAAO,KAAK,eAAe,iBAAiB;AAChD,UAAI,UAAU,eAAe,IAAI;AACjC,WAAK,WAAW,KAAK;AACrB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAGA,UAAU,SAAU,KAAK,OAAO;AAC5B,YAAM,MAAM,QAAQ;AACpB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAGA,QAAQ,SAAS,aAAa,IAAI,QAAQ;AACtC,UAAI,OAAO,IAAI,OAAO,kBAAkB;AACxC,UAAIC,QAAO;AACX,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,WAAW,IAAI,KAAK,gBAAgB,MAAM,IAAI;AAClD,YAAI,YAAY,IAAI,KAAK,WAAW,MAAM,IAAI;AAC9C,2BAAmB,KAAK,UAAU,WAAW,MAAM,OAAO,MAAM,MAAMA,OAAM,IAAI;AAAA,MACpF;AAAA,IACJ;AAAA,IAGA,cAAc,SAAU,IAAI,QAAQ;AAEhC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,YAAI,OAAO,IAAI,KAAK,gBAAgB,MAAM,IAAI,EAAE;AAChD,YAAI,OAAO,MAAM,MAAM;AACvB,aAAK,IAAI,KAAK,CAAC;AACf,aAAK,IAAI,KAAK,CAAC;AAAA,MACnB;AAAA,IACJ;AAAA,EAKJ;AACJ;AAEA,IAAI,YAAY,gBAAAC,QAAK,WAAW,GAAG,GAAG,CAAC;AACvC,IAAI,OAAO,gBAAAA,QAAK,WAAW,GAAG,IAAI,CAAC;AAEnC,SAAS,mBAAmB,KAAK,QAAQ,SAAS,MAAM,MAAM,YAAY,QAAQ;AAG9E,MAAI;AACJ,MAAI,WAAW,QAAQ,KAAK,QAAQ,CAAC,IAAI,GAAG;AACxC,aAAS,OAAO,eAAe,CAAC;AAAA,EACpC,OAAO;AACH,QAAI,MAAM,IAAI,WAAW,OAAO,gBAAgB,MAAM,UAAU;AAChE,QAAI,CAAC,KAAK;AACN,WAAK,WAAW,KAAK;AACrB;AAAA,IACJ;AACA,aAAS,IAAI,SAAS,CAAC,IAAI,IAAI,kBAAkB,CAAC;AAAA,EACtD;AAGA,WAAS,KAAK,MAAM,MAAM;AAC1B,kBAAAA,QAAK,KAAK,WAAW,OAAO,cAAc;AAC1C,YAAU,CAAC,IAAI;AACf,MAAI,SAAS,gBAAAA,QAAK,gBAAgB,QAAQ,SAAS;AAEnD,MAAI,SAAS,OAAO,OAAO,SAAS;AACpC,MAAI,SAAS,IAAK,UAAS;AAC3B,OAAK,SAAS,IAAI,SAAS;AAE3B,MAAID,QAAO,OAAO,eAAe,CAAC,IAAI;AACtC,MAAIE,SAAQ,OAAO,OAAO,IAAIF,QAAO;AACrC,OAAK,QAAQ,eAAeE,QAAOA,QAAOA,MAAK;AAC/C,OAAK,WAAW,IAAI;AACxB;;;ACjHe,SAAR,qBAAkB,KAAK;AAE1B,MAAI,WAAW;AAEf,SAAO;AAAA,IAEH,MAAM;AAAA,IAEN,OAAO;AAAA,IAEP,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IAEA,OAAO;AAAA,IAEP,UAAU;AAAA,IAEV,QAAQ,SAAU,IAAI,QAAQ;AAE1B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,QAAQ,OAAO,CAAC;AACpB,cAAM,QAAQ;AACd,YAAI,MAAM,OAAO,EAAG,KAAI,KAAK,gBAAgB,MAAM,MAAM,QAAQ;AAAA,MACrE;AAAA,IACJ;AAAA,EAEJ;AACJ;;;AXRA,IAAIC,kBAAiB;AAAA,EACjB,gBAAgB;AACpB;AAuBO,IAAM,WAAN,cAAuB,gBAAAC,QAAI;AAAA;AAAA,EAI9B,YAAY,KAAK,MAAM;AACnB,UAAM;AACN,WAAO,OAAO,OAAO,CAAC,GAAGD,iBAAgB,IAAI;AAE7C,QAAI,gBAAgB;AAAA,MAChB,UAAU,KAAK;AAAA,IACnB;AAMA,SAAK,MAAM;AAKX,SAAK,QAAQ,CAAC;AAKd,QAAI,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,cAAc;AAAA,IAClB;AAEA,WAAO,KAAK,QAAQ,EAAE,QAAQ,cAAY;AACtC,UAAI,MAAM,cAAc,QAAQ,KAAK;AACrC,UAAI,SAAS,SAAS,QAAQ;AAC9B,UAAI,UAAU,OAAO,KAAK,GAAG;AAC7B,WAAK,MAAM,QAAQ,IAAI,KAAK,gBAAgB,OAAO;AAAA,IACvD,CAAC;AAkBD,SAAK,iBAAiB,KAAK,qBAAqB,KAAK,MAAM,YAAY;AAOvE,SAAK,aAAa,KAAK,qBAAqB,KAAK,MAAM,OAAO;AAM9D,SAAK,cAAc,KAAK,qBAAqB,KAAK,MAAM,QAAQ;AAMhE,SAAK,kBAAkB,KAAK,iBAAiB,KAAK,MAAM,QAAQ;AAMhE,SAAK,cAAc,CAAC,OAAO;AACvB,UAAI,QAAQ,KAAK,gBAAgB,EAAE;AACnC,aAAQ,QAAS,MAAM,WAAW;AAAA,IACtC;AAMA,SAAK,aAAa,KAAK,iBAAiB,KAAK,MAAM,OAAO;AAO1D,SAAK,iBAAiB,CAAC,OAAO;AAC1B,UAAI,QAAQ,KAAK,WAAW,EAAE;AAC9B,aAAQ,QAAS,MAAM,OAAO;AAAA,IAClC;AAMA,SAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,IAAI;AAMxD,SAAK,cAAc,KAAK,iBAAiB,KAAK,MAAM,IAAI;AAMxD,SAAK,cAAc,KAAK,iBAAiB,KAAK,MAAM,QAAQ;AAM5D,SAAK,oBAAoB,KAAK,iBAAiB,KAAK,MAAM,cAAc;AAQxE,SAAK,qBAAqB,KAAK,iBAAiB,KAAK,MAAM,eAAe;AAQ1E,SAAK,4BAA4B,SAAU,KAAK,KAAK;AAAA,IAAE;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BA,YAAY,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG;AAC/B,QAAI,OAAO,QAAQ,SAAU,OAAM,CAAC,KAAK,GAAG,CAAC;AAE7C,QAAI,MAAM,KAAK,IAAI,cAAc,KAAK,MAAM,CAAC,CAAC;AAC9C,SAAK,kBAAkB,IAAI,GAAG;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,IAAI,IAAI,IAAI,IAAI;AAC1B,QAAI,SAAS,KAAK,gBAAgB,EAAE;AACpC,WAAO,SAAS,KAAK,MAAM;AAC3B,WAAO,SAAS;AAChB,SAAK,2BAA2B,IAAI,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,OAAO;AACjB,aAAS,SAAS,KAAK,cAAc,KAAK,MAAM,QAAQ,GAAG;AACvD,UAAI,SAAS,MAAM;AACnB,UAAI,KAAK,MAAM,QAAQ;AACvB,oBAAc,QAAQ,GAAG,CAAC,IAAI,IAAI,MAAM,IAAI;AAC5C,oBAAc,QAAQ,GAAG,GAAG,MAAM,QAAQ,MAAM,IAAI;AACpD,oBAAc,QAAQ,GAAG,CAAC,IAAI,IAAI,MAAM,IAAI;AAC5C,sBAAAE,QAAK,SAAS,QAAQ,QAAQ,KAAK;AACnC,WAAK,2BAA2B,MAAM,MAAM,KAAK;AAAA,IACrD;AAAA,EACJ;AAAA;AAAA,EAGA,kBAAkB,IAAI;AAClB,WAAO,KAAK,gBAAgB,EAAE,EAAE;AAAA,EACpC;AAAA;AAAA,EAGA,kBAAkB,IAAI,KAAK;AACvB,QAAI,SAAS,KAAK,gBAAgB,EAAE;AACpC,oBAAAA,QAAK,KAAK,OAAO,gBAAgB,GAAG;AACpC,SAAK,2BAA2B,IAAI,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,2BAA2B,IAAI,QAAQ;AACnC,oBAAAA,QAAK,KAAK,OAAO,iBAAiB,OAAO,cAAc;AACvD,QAAI,SAAS,KAAK,IAAI;AACtB,oBAAAA,QAAK,IAAI,OAAO,UAAU,OAAO,gBAAgB,MAAM;AACvD,0BAAsB,MAAM;AAC5B,QAAI,UAAU,KAAK,WAAW,EAAE;AAChC,QAAI,QAAS,wBAAuB,SAAS,MAAM;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,kBAAkB,IAAI,MAAM,OAAO;AAE/B,QAAI,KAAK,aAAa,IAAI,IAAI,EAAG,MAAK,gBAAgB,IAAI,IAAI;AAC9D,SAAK,aAAa,IAAI,MAAM,KAAK;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,GAAG,GAAG,GAAG;AAEtB,QAAI,MAAM,KAAK,IAAI;AACnB,QAAI,SAAS,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC;AAClC,QAAI,SAAS,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC;AAClC,QAAI,SAAS,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC;AAClC,QAAI,WAAW;AAAA,MACX,SAAS;AAAA,MAAO,SAAS;AAAA,MAAO,SAAS;AAAA,MACzC,SAAS;AAAA,MAAO,SAAS;AAAA,MAAO,SAAS;AAAA,IAC7C;AACA,QAAI,OAAO,KAAK,cAAc,KAAK,MAAM,cAAc;AACvD,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAI,KAAK,KAAK,CAAC,EAAE;AACjB,UAAI,MAAM,KAAK,gBAAgB,EAAE,EAAE;AACnC,UAAI,eAAe,UAAU,GAAG,EAAG,QAAO;AAAA,IAC9C;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,KAAK,eAAe;AAElC,QAAI,MAAM,KAAK,IAAI;AACnB,QAAI,cAAc;AAAA,MACd,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;AAAA,MAAG,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;AAAA,MAAG,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;AAAA,MAC/D,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,MAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,MAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAChE;AAEA,QAAI;AACJ,QAAI,eAAe;AACf,kBAAY,CAAC;AACb,eAAS,aAAa,KAAK,cAAc,aAAa,GAAG;AACrD,YAAI,OAAO,KAAK,gBAAgB,UAAU,IAAI;AAC9C,YAAI,KAAM,WAAU,KAAK,IAAI;AAAA,MACjC;AAAA,IACJ,OAAO;AACH,kBAAY,KAAK,cAAc,KAAK,MAAM,QAAQ;AAAA,IACtD;AAGA,QAAI,OAAO,CAAC;AACZ,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,UAAI,QAAQ,UAAU,CAAC;AACvB,UAAI,eAAe,aAAa,MAAM,QAAQ,GAAG;AAC7C,aAAK,KAAK,MAAM,IAAI;AAAA,MACxB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,WAAW,MAAM,QAAQ,GAAG,SAAS,GACrC,OAAO,MAAM,aAAa,MAAM,YAAY,OAAO,SAAS,OAAO;AAEnE,QAAI,OAAO;AAGX,QAAI,MAAM,KAAK,aAAa;AAG5B,SAAK,aAAa,KAAK,KAAK,MAAM,UAAU;AAAA,MACxC,UAAU,YAAY,gBAAAA,QAAK,OAAO;AAAA,MAClC;AAAA,MACA;AAAA,IACJ,CAAC;AAGD,QAAI,WAAW;AAEX,WAAK,aAAa,KAAK,KAAK,MAAM,OAAO;AACzC,UAAI,OAAO,KAAK,WAAW,GAAG,EAAE;AAGhC,UAAI,aAAa,KAAK,MAAM;AAC5B,WAAK,SAAS,WAAY;AACtB,aAAK,kBAAkB,KAAK,UAAU;AAAA,MAC1C;AAAA,IACJ;AAGA,QAAI,MAAM;AACN,UAAI,CAAC,WAAY,cAAa,gBAAAA,QAAK,OAAO;AAC1C,WAAK,aAAa,KAAK,KAAK,MAAM,MAAM;AAAA,QACpC;AAAA,QACA,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAGA,QAAI,QAAQ;AACR,WAAK,aAAa,KAAK,KAAK,MAAM,QAAQ,EAAE,MAAM,MAAM,CAAC;AAAA,IAC7D;AAEA,WAAO;AAAA,EACX;AACJ;AAeA,SAAS,cAAc,KAAK,OAAO,MAAM,MAAM,IAAI;AAC/C,MAAIC,OAAM,IAAI,KAAK,IAAI;AACvB,MAAIC,OAAM,IAAI,KAAK,IAAI;AACvB,MAAI,KAAK,IAAID,OAAM,KAAK,MAAMA,IAAG,CAAC,IAAI,KAAO,KAAI,KAAK,KAAK;AAC3D,MAAI,KAAK,IAAIC,OAAM,KAAK,MAAMA,IAAG,CAAC,IAAI,KAAO,KAAI,KAAK,KAAK;AAC/D;AAGA,SAAS,eAAe,MAAM,MAAM;AAChC,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,MAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAG,QAAO;AAC9B,SAAO;AACX;;;AY7bO,SAAS,wBAAwB,MAAM,MAAM;AAChD,MAAI,IAAI,KAAK,QAAQ,IAAI;AACzB,MAAI,IAAI,EAAG;AACX,MAAI,MAAM,KAAK,SAAS,GAAG;AACvB,SAAK,IAAI;AAAA,EACb,OAAO;AACH,SAAK,CAAC,IAAI,KAAK,IAAI;AAAA,EACvB;AACJ;AA+GO,SAAS,eAAe,GAAG,GAAG,GAAG;AACpC,SAAQ,IAAI,QACJ,IAAI,SAAS,MACb,IAAI,SAAS;AACzB;AAYO,IAAM,eAAN,MAAmB;AAAA,EACtB,cAAc;AACV,SAAK,OAAO,CAAC;AAAA,EACjB;AAAA;AAAA,EAGA,kBAAkB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACnC,WAAO,KAAK,KAAK,eAAe,GAAG,GAAG,CAAC,CAAC,KAAK;AAAA,EACjD;AAAA;AAAA,EAEA,oBAAoB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO;AAC5C,SAAK,KAAK,eAAe,GAAG,GAAG,CAAC,CAAC,IAAI;AAAA,EACzC;AAAA,EACA,qBAAqB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACtC,WAAO,KAAK,KAAK,eAAe,GAAG,GAAG,CAAC,CAAC;AAAA,EAC5C;AACJ;AAgBO,IAAM,gBAAN,MAAoB;AAAA,EACvB,cAAc;AACV,SAAK,MAAM,CAAC;AACZ,SAAK,OAAO,CAAC;AAAA,EACjB;AAAA,EACA,QAAQ,IAAI,SAAS;AACjB,SAAK,IAAI,QAAQ,IAAI,OAAO;AAAA,EAChC;AAAA,EACA,SAAS,GAAG,GAAG,GAAG;AACd,QAAI,KAAK,eAAe,GAAG,GAAG,CAAC;AAC/B,WAAO,CAAC,CAAC,KAAK,KAAK,EAAE;AAAA,EACzB;AAAA,EACA,IAAI,GAAG,GAAG,GAAG,UAAU,OAAO;AAC1B,QAAI,KAAK,eAAe,GAAG,GAAG,CAAC;AAC/B,QAAI,KAAK,KAAK,EAAE,EAAG;AACnB,QAAI,SAAS;AACT,WAAK,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAAA,IAClC,OAAO;AACH,WAAK,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAAA,IAC/B;AACA,SAAK,KAAK,EAAE,IAAI;AAAA,EACpB;AAAA,EACA,cAAc,IAAI;AACd,QAAI,KAAK,KAAK,IAAI,EAAE;AACpB,WAAO,KAAK,KAAK,GAAG,CAAC,CAAC;AACtB,SAAK,IAAI,OAAO,IAAI,CAAC;AAAA,EACzB;AAAA,EACA,OAAO,GAAG,GAAG,GAAG;AACZ,QAAI,KAAK,eAAe,GAAG,GAAG,CAAC;AAC/B,QAAI,CAAC,KAAK,KAAK,EAAE,EAAG;AACpB,WAAO,KAAK,KAAK,EAAE;AACnB,aAAS,KAAK,GAAG,KAAK,KAAK,IAAI,QAAQ,MAAM;AACzC,UAAI,OAAO,KAAK,IAAI,EAAE,EAAE,CAAC,GAAG;AACxB,aAAK,IAAI,OAAO,IAAI,CAAC;AACrB;AAAA,MACJ;AAAA,IACJ;AACA,UAAM;AAAA,EACV;AAAA,EACA,QAAQ;AAAE,WAAO,KAAK,IAAI;AAAA,EAAO;AAAA,EACjC,UAAU;AAAE,WAAQ,KAAK,IAAI,WAAW;AAAA,EAAG;AAAA,EAC3C,QAAQ;AACJ,SAAK,MAAM,CAAC;AACZ,SAAK,OAAO,CAAC;AAAA,EACjB;AAAA,EACA,MAAM;AACF,QAAI,KAAK,KAAK,IAAI,IAAI;AACtB,WAAO,KAAK,KAAK,GAAG,CAAC,CAAC;AACtB,WAAO;AAAA,EACX;AAAA,EACA,SAAS,OAAO;AACZ,SAAK,MAAM,MAAM,IAAI,MAAM;AAC3B,SAAK,OAAO,CAAC;AACb,aAAS,OAAO,MAAM,KAAM,MAAK,KAAK,GAAG,IAAI;AAAA,EACjD;AAAA,EACA,eAAe,WAAW,UAAU,OAAO;AACvC,8BAA0B,KAAK,KAAK,WAAW,OAAO;AAAA,EAC1D;AACJ;AAGA,SAAS,0BAA0B,KAAK,QAAQ,SAAS;AACrD,MAAI,OAAO,CAAC;AACZ,WAAS,OAAO,KAAK;AACjB,SAAK,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,EAChD;AACA,MAAI,SAAS;AACT,QAAI,KAAK,CAACC,IAAG,MAAM,KAAKA,GAAE,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;AAAA,EAC9C,OAAO;AACH,QAAI,KAAK,CAACA,IAAG,MAAM,KAAK,EAAE,CAAC,CAAC,IAAI,KAAKA,GAAE,CAAC,CAAC,CAAC;AAAA,EAC9C;AACA,SAAO;AACX;AAaO,SAAS,gBAAgB,OAAO,QAAQ,IAAI,QAAQ;AACvD,MAAI,EAAE,QAAQ,GAAI,QAAO,MAAM;AAAA,EAAE;AACjC,MAAI,QAAQ,CAAC;AACb,MAAI,UAAU,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ;AAE7C,MAAI,QAAQ,MAAM;AACd,cAAU,OAAO,YAAY,IAAI;AACjC;AAAA,EACJ;AACA,MAAIC,OAAM,CAAC,SAAS;AAChB,QAAI,IAAI,YAAY,IAAI;AACxB,UAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI;AACxC,WAAO;AAAA,EACX;AACA,MAAI,SAAS,MAAM;AACf,aAAS,YAAY,IAAI,IAAI;AAC7B,QAAI,OAAO,MAAO;AAClB,QAAI,MAAM,GAAG,KAAK,MAAM,QAAQ,OAAO,QAAQ,CAAC,CAAC;AACjD,WAAO,OAAO,KAAK,KAAK,EAAE,IAAI,UAAQ;AAClC,UAAI,UAAW,MAAM,IAAI,IAAI,QAAS,KAAM,QAAO;AACnD,aAAO,GAAG,IAAI,MAAM,MAAM,IAAI,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,IACtD,CAAC,EAAE,KAAK,IAAI;AACZ,YAAQ,IAAI,MAAM,iBAAiB,KAAK,QAAQ;AAChD,YAAQ,CAAC;AACT,WAAO,QAAQ;AAAA,EACnB;AACA,SAAO,CAAC,UAAU;AACd,QAAI,UAAU,QAAS,OAAM;AAAA,aACpB,UAAU,MAAO,QAAO;AAAA,QAC5B,CAAAA,KAAI,KAAK;AAAA,EAClB;AACJ;;;AC1RA,IAAI,UAAU;AAqBP,SAAS,aAAa,KAAK;AAG9B,OAAK,WAAW,IAAI,cAAc,kBAAkB,IAAI,UAAU,KAAK;AAGvE,MAAI,eAAe,CAAC,GAAG,GAAG,CAAC;AAG3B,MAAI,kBAAkB;AAGtB,MAAI,eAAe,IAAI,cAAc,EAAE;AAGvC,OAAK,gBAAgB,CAAC;AAKtB,MAAI,WAAW,CAAC;AAChB,MAAI,aAAa,CAAC,OAAO;AACrB,QAAI,SAAS,EAAE,EAAG,QAAO,SAAS,EAAE;AACpC,QAAI,OAAO,IAAI,SAAS,iBAAiB,EAAE;AAC3C,aAAS,OAAO,UAAU;AACtB,UAAI,OAAO,SAAS,GAAG,EAAE;AACzB,UAAI,SAAS,QAAS,KAAK,aAAa,KAAK,UAAW;AACpD,eAAO,SAAS,EAAE,IAAI,SAAS,GAAG;AAAA,MACtC;AAAA,IACJ;AACA,SAAK,cAAc,KAAK,IAAI;AAC5B,QAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AACrC,SAAK,SAAS,cAAc,IAAI;AAChC,WAAO,SAAS,EAAE,IAAI,IAAI,gBAAgB,KAAK,IAAI;AAAA,EACvD;AACA,MAAI,iBAAiB;AAYrB,OAAK,YAAY,SAAU,OAAO;AAC9B,UAAM,gBAAgB,CAAC;AAAA,EAC3B;AAIA,OAAK,iBAAiB,SAAU,OAAO,SAAS,GAAG,GAAG,GAAG;AACrD,QAAI,IAAI,MAAM,IAAI;AAClB,QAAI,IAAI,MAAM,IAAI;AAClB,QAAI,IAAI,MAAM,IAAI;AAClB,QAAI,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AAExB,QAAI,QAAQ,MAAM,cAAc,GAAG,KAAK;AACxC,QAAI,UAAU,QAAS;AACvB,QAAI,QAAQ,GAAG;AACX,UAAI,SAAS,WAAW,KAAK;AAC7B,aAAO,eAAe,OAAO,GAAG;AAAA,IACpC;AAEA,QAAI,UAAU,GAAG;AAGb,UAAI,WAAW,IAAI,SAAS,oBAAoB,OAAO;AACvD,UAAI,WAAW,YAAY,SAAS;AACpC,UAAI,UAAU;AACV,qBAAa,SAAS,eAAe,KAAK,GAAG,GAAG;AAChD,qBAAa,QAAQ,OAAO,CAAC;AAC7B,qBAAa,SAAS,OAAO,CAAC;AAC9B,iBAAS,cAAc,GAAG,GAAG,CAAC;AAAA,MAClC;AACA,UAAI,MAAM,WAAW,OAAO;AAC5B,UAAI,QAAS,WAAY,eAAe;AACxC,UAAI,YAAY,OAAO,KAAK,GAAG,GAAG,GAAG,OAAO,YAAY;AAAA,IAC5D;AAEA,QAAI,QAAQ,KAAK,CAAC,QAAS,QAAO,MAAM,cAAc,GAAG;AACzD,QAAI,UAAU,EAAG,OAAM,cAAc,GAAG,IAAI;AAAA,EAChD;AAKA,OAAK,oBAAoB,WAAY;AACjC,iBAAa,OAAO;AAEpB,aAAS,MAAM,UAAU;AACrB,UAAI,MAAM,SAAS,EAAE;AACrB,UAAI,aAAa;AACjB,UAAI,IAAI,UAAU,EAAG,KAAI,QAAQ;AACjC,UAAI,IAAI,SAAU,QAAO,SAAS,EAAE;AAAA,IACxC;AAEA,iBAAa,SAAS;AACtB,iBAAa,KAAK;AAAA,EACtB;AAKA,OAAK,eAAe,SAAU,OAAO;AACjC,aAAS,OAAO,MAAM,eAAe;AACjC,UAAI,KAAK,MAAM,cAAc,GAAG;AAChC,UAAI,KAAK,GAAG;AACR,YAAI,MAAM,WAAW,EAAE;AACvB,YAAI,eAAe,OAAO,GAAG;AAAA,MACjC;AAAA,IACJ;AACA,UAAM,gBAAgB;AAGtB,sBAAkB;AAAA,EACtB;AAKA,OAAK,OAAO,WAAY;AACpB,QAAI,iBAAiB;AACjB,WAAK,kBAAkB;AACvB,wBAAkB;AAAA,IACtB;AAAA,EACJ;AAKA,OAAK,gBAAgB,SAAU,OAAO;AAClC,iBAAa,CAAC,KAAK,MAAM,CAAC;AAC1B,iBAAa,CAAC,KAAK,MAAM,CAAC;AAC1B,iBAAa,CAAC,KAAK,MAAM,CAAC;AAE1B,aAAS,OAAO,SAAU,UAAS,GAAG,EAAE,UAAU;AAClD,aAAS,OAAO,UAAU;AACtB,UAAI,MAAM,SAAS,GAAG;AACtB,UAAI,IAAI,QAAS;AACjB,eAAS,IAAI,GAAG,IAAI,IAAI,OAAO,KAAK;AAChC,YAAI,KAAK,KAAK;AACd,YAAI,OAAO,KAAK,EAAE,KAAK,MAAM,CAAC;AAC9B,YAAI,OAAO,KAAK,EAAE,KAAK,MAAM,CAAC;AAC9B,YAAI,OAAO,KAAK,EAAE,KAAK,MAAM,CAAC;AAAA,MAClC;AACA,UAAI,UAAU;AACd,UAAI,QAAQ;AAAA,IAChB;AACA,sBAAkB;AAAA,EACtB;AAEJ;AAyBA,SAAS,gBAAgB,KAAK,MAAM;AAChC,OAAK,MAAM;AACX,OAAK,OAAO;AACZ,OAAK,SAAS;AACd,OAAK,WAAW;AAChB,OAAK,QAAQ;AACb,OAAK,QAAQ;AACb,OAAK,UAAU;AACf,OAAK,WAAW;AAEhB,OAAK,aAAa,CAAC;AACnB,OAAK,WAAW,CAAC;AAEjB,OAAK,KAAK,SAAS,OAAO,CAAC;AAC3B,OAAK,KAAK,SAAS,IAAI,cAAc;AACrC,OAAK,IAAI,UAAU,eAAe,KAAK,MAAM,KAAK;AAClD,OAAK,IAAI,KAAK,qBAAqB,KAAK,IAAI;AAC5C,OAAK,KAAK,aAAa;AACvB,OAAK,KAAK,wBAAwB;AAClC,OAAK,KAAK,2BAA2B;AACzC;AAIA,gBAAgB,UAAU,UAAU,WAAY;AAC5C,MAAI,KAAK,SAAU;AACnB,OAAK,KAAK,oBAAoB;AAC9B,OAAK,YAAY,CAAC;AAClB,OAAK,IAAI,KAAK,uBAAuB,KAAK,IAAI;AAC9C,OAAK,IAAI,UAAU,kBAAkB,KAAK,MAAM,KAAK;AACrD,OAAK,OAAO;AACZ,OAAK,aAAa;AAClB,OAAK,WAAW;AAChB,OAAK,WAAW;AACpB;AAGA,gBAAgB,UAAU,cAAc,SAAU,OAAO,KAAK,GAAG,GAAG,GAAG,WAAW,WAAW;AACzF,oBAAkB,IAAI;AACtB,MAAI,KAAK,KAAK,SAAS;AACvB,OAAK,SAAS,KAAK,KAAK,IAAI;AAC5B,OAAK,WAAW,GAAG,IAAI;AACvB,MAAI,WAAW;AACX,cAAU,SAAS,KAAM,MAAM,IAAI,UAAU,CAAC,IAAK;AACnD,cAAU,SAAS,KAAM,MAAM,IAAI,UAAU,CAAC,IAAK;AACnD,cAAU,SAAS,KAAM,MAAM,IAAI,UAAU,CAAC,IAAK;AACnD,cAAU,mBAAmB,IAAI;AACjC,QAAI,WAAW,UAAU,aAAa;AACtC,mBAAe,UAAU,GAAG,KAAK,QAAQ,EAAE;AAAA,EAC/C,OAAO;AACH,QAAI,WAAW;AACf,aAAS,EAAE,IAAK,MAAM,IAAI,UAAU,CAAC,IAAK,IAAI;AAC9C,aAAS,EAAE,IAAK,MAAM,IAAI,UAAU,CAAC,IAAK;AAC1C,aAAS,EAAE,IAAK,MAAM,IAAI,UAAU,CAAC,IAAK,IAAI;AAC9C,mBAAe,UAAU,GAAG,KAAK,QAAQ,EAAE;AAAA,EAC/C;AACA,OAAK;AACL,OAAK,QAAQ;AACjB;AAGA,gBAAgB,UAAU,iBAAiB,SAAU,OAAO,KAAK;AAC7D,MAAI,WAAW,KAAK,WAAW,GAAG;AAClC,MAAI,EAAE,YAAY,GAAI,OAAM;AAC5B,SAAO,KAAK,WAAW,GAAG;AAC1B,MAAI,SAAS,YAAY;AAEzB,MAAI,UAAU,KAAK,QAAQ;AAC3B,MAAI,WAAW,SAAS;AACpB,QAAI,YAAY,WAAW;AAC3B,mBAAe,KAAK,QAAQ,WAAW,KAAK,QAAQ,QAAQ;AAE5D,QAAI,UAAU,KAAK,SAAS,OAAO;AACnC,SAAK,WAAW,OAAO,IAAI;AAC3B,SAAK,SAAS,MAAM,IAAI;AAAA,EAC5B;AACA,OAAK;AACL,OAAK,QAAQ;AACb,sBAAoB,IAAI;AAC5B;AAGA,gBAAgB,UAAU,eAAe,WAAY;AACjD,MAAI,CAAC,KAAK,MAAO;AACjB,OAAK,KAAK,oBAAoB,KAAK;AACnC,OAAK,KAAK,0BAA0B,QAAQ;AAC5C,OAAK,KAAK,YAAa,KAAK,QAAQ;AACpC,OAAK,QAAQ;AACjB;AAIA,gBAAgB,UAAU,cAAc,SAAU,OAAO,GAAG;AACxD,OAAK,WAAW;AAChB,MAAI,SAAS,GAAG;AACZ,SAAK,SAAS;AAAA,EAClB,OAAO;AACH,QAAI,UAAU,IAAI,aAAa,KAAK,WAAW,EAAE;AACjD,QAAI,KAAK,QAAQ;AACb,UAAIC,OAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,QAAQ,MAAM;AACrD,eAAS,IAAI,GAAG,IAAIA,MAAK,IAAK,SAAQ,CAAC,IAAI,KAAK,OAAO,CAAC;AAAA,IAC5D;AACA,SAAK,SAAS;AAAA,EAClB;AACA,OAAK,KAAK,sBAAsB,UAAU,KAAK,MAAM;AACrD,OAAK,aAAa;AACtB;AAGA,SAAS,kBAAkB,KAAK;AAC5B,MAAI,IAAI,QAAQ,IAAI,SAAU;AAC9B,MAAI,OAAO,KAAK,IAAI,GAAG,IAAI,WAAW,CAAC;AACvC,MAAI,YAAY,IAAI;AACxB;AAEA,SAAS,oBAAoB,KAAK;AAC9B,MAAI,IAAI,QAAQ,IAAI,WAAW,IAAK;AACpC,MAAI,IAAI,WAAW,IAAK;AACxB,MAAI,YAAY,KAAK,MAAM,IAAI,WAAW,CAAC,CAAC;AAC5C,MAAI,SAAS,SAAS,KAAK,IAAI,IAAI,SAAS,QAAQ,IAAI,QAAQ;AACpE;AAMA,IAAI,kBAAkB;AAAA,EAClB;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EACf;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EACf;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EACf;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AACnB;AAEA,SAAS,eAAe,KAAK,QAAQ,MAAM,SAAS;AAChD,WAAS,IAAI,GAAG,IAAI,IAAI,IAAK,MAAK,UAAU,CAAC,IAAI,IAAI,SAAS,CAAC;AACnE;AAaA,IAAI,eAAgB,UAChB,gBAAgB,SAAS,gBAAgB,IAAI,MAAM;AAAE;;;AClWzD,qBAAoB;;;ACgBb,IAAM,oBAAN,MAAwB;AAAA;AAAA,EAG3B,YAAY,KAAK;AAEb,SAAK,cAAc,IAAI,UAAU,qBAAqB,cAAc;AACpE,SAAK,YAAY,OAAO;AAExB,SAAK,eAAe,CAAC,KAAK,WAAW;AAGrC,SAAK,MAAM;AACX,SAAK,aAAa;AAClB,SAAK,yBAAyB,CAAC;AAC/B,SAAK,wBAAwB,CAAC;AAC9B,SAAK,qBAAqB,CAAC;AAC3B,SAAK,wBAAwB,oBAAI,IAAI;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,gBAAgB,YAAY;AAExB,QAAI,cAAc,KAAK,wBAAwB;AAC3C,aAAO,KAAK,uBAAuB,UAAU;AAAA,IACjD;AAEA,QAAI,SAAS,mBAAmB,MAAM,UAAU;AAEhD,QAAI,EAAE,UAAU,KAAK,wBAAwB;AACzC,UAAI,MAAM,iBAAiB,MAAM,UAAU;AAC3C,WAAK,aAAa,KAAK,GAAG;AAC1B,WAAK,sBAAsB,MAAM,IAAI;AAAA,IACzC;AAEA,SAAK,uBAAuB,UAAU,IAAI;AAC1C,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,eAAe,GAAG;AAC1B,WAAO,KAAK,sBAAsB,YAAY;AAAA,EAClD;AAMJ;AAiBA,SAAS,mBAAmB,MAAM,aAAa,GAAG;AAC9C,MAAI,UAAU,KAAK,IAAI,SAAS,gBAAgB,UAAU;AAG1D,MAAI,QAAQ,WAAW;AACnB,QAAI,MAAM,QAAQ;AAClB,QAAI,CAAC,KAAK,sBAAsB,IAAI,GAAG,GAAG;AACtC,WAAK,sBAAsB,IAAI,KAAK,KAAK,YAAY;AAAA,IACzD;AACA,WAAO,KAAK,sBAAsB,IAAI,GAAG;AAAA,EAC7C;AAGA,MAAI,QAAQ,SAAS;AACjB,QAAI,MAAM,QAAQ;AAClB,QAAI,EAAE,OAAO,KAAK,qBAAqB;AACnC,WAAK,mBAAmB,GAAG,IAAI,KAAK;AAAA,IACxC;AACA,WAAO,KAAK,mBAAmB,GAAG;AAAA,EACtC;AAGA,MAAI,QAAQ,QAAQ;AACpB,MAAI,QAAQ,KAAK,QAAQ,EAAG,QAAO,KAAK,KAAK,MAAM,QAAQ,GAAG;AAG9D,SAAO;AACX;AAOA,SAAS,iBAAiB,MAAM,aAAa,GAAG;AAC5C,MAAI,UAAU,KAAK,IAAI,SAAS,gBAAgB,UAAU;AAG1D,MAAI,QAAQ,UAAW,QAAO,QAAQ;AAGtC,MAAI,CAAC,QAAQ,SAAS;AAClB,QAAI,aAAc,QAAQ,QAAQ,KAAK,QAAQ,QAAQ;AACvD,QAAI,CAAC,WAAY,QAAO,KAAK;AAC7B,QAAI,UAAU,mBAAmB;AACjC,QAAI,WAAW,KAAK,IAAI,UAAU,qBAAqB,OAAO;AAC9D,aAAS,QAAQ,QAAQ;AACzB,aAAS,OAAO;AAChB,WAAO;AAAA,EACX;AAGA,MAAI,QAAQ,KAAK,IAAI,UAAU,SAAS;AACxC,MAAI,MAAM,KAAK,IAAI,UAAU,qBAAqB,sBAAsB,UAAU;AAClF,MAAI,SAAS,QAAQ;AACrB,MAAI,WAAW,QAAQ;AACvB,MAAI,MAAM,IAAI,QAAQ,QAAQ,OAAO,MAAM,OAAO,QAAQ;AAC1D,MAAI,QAAQ,YAAa,KAAI,WAAW;AACxC,MAAI,iBAAiB;AAIrB,MAAI,QAAQ,cAAc,GAAG;AACzB,QAAI,sBAAsB,KAAK,GAAG;AAClC,QAAI,KAAK,IAAI,SAAS,mBAAmB,QAAQ,OAAO,GAAG;AACvD,UAAI,WAAW;AAAA,IACnB;AAAA,EACJ;AAEA,MAAI,OAAO;AACX,SAAO;AACX;AAmBA,IAAM,wBAAN,cAAoC,mBAAmB;AAAA,EACnD,YAAY,UAAU,SAAS;AAC3B,QAAI,WAAW;AACf,QAAI,UAAU,EAAE,0BAA0B,MAAM;AAChD,UAAM,UAAU,cAAc,UAAU,OAAO;AAC/C,SAAK,QAAQ,IAAI;AACjB,SAAK,qBAAqB;AAE1B,YAAQ,iBAAiB,IAAI,CAAC,QAAQ;AAClC,WAAK,oBAAoB,GAAG;AAAA,IAChC,CAAC;AAAA,EACL;AAAA,EAEA,oBAAoB,SAAS;AACzB,QAAI,EAAE,OAAO,OAAO,IAAI,QAAQ,QAAQ;AACxC,QAAI,YAAY,KAAK,MAAM,SAAS,KAAK;AACzC,aAAS;AACT,QAAI,OAAO,QAAQ,gBAAgB;AAEnC,QAAI,SAAS,OAAO;AACpB,QAAI,aAAa;AACjB,QAAI,UAAU;AACd,QAAI,OAAO,QAAQ;AACnB,QAAI,QAAQ,QAAQ,SAAS;AAE7B,SAAK,qBAAqB,IAAI;AAAA,MAC1B;AAAA,MAAM;AAAA,MAAO;AAAA,MAAQ;AAAA,MACrB;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAY;AAAA,MAAS;AAAA,IACxC;AAAA,EACJ;AAAA,EAEA,eAAe,SAAS,OAAO,MAAM;AACjC,YAAQ,wBAAwB,IAAI;AAAA,EACxC;AAAA,EAEA,eAAe;AACX,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,UAAU;AAClB,aAAS,KAAK,cAAc;AAAA,EAChC;AAAA,EAEA,cAAc,YAAY;AACtB,eAAW,KAAK,iBAAiB;AAAA,EACrC;AAAA,EAEA,cAAc;AACV,WAAO,EAAE,KAAK,CAAC,EAAE;AAAA,EACrB;AAAA,EAEA,eAAe,eAAe,OAAO,QAAQ,SAAS;AAClD,QAAI,KAAK,oBAAoB;AACzB,oBAAc,WAAW,gBAAgB,KAAK,kBAAkB;AAAA,IACpE;AAAA,EACJ;AAAA,EAEA,cAAc,YAAY;AACtB,QAAI,eAAe,SAAU,QAAO;AAAA,MAChC,4BAA4B;AAAA;AAAA;AAAA,MAG5B,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA,IAKjC;AACA,QAAI,eAAe,WAAY,QAAO;AAAA,MAClC,qEACI;AAAA,MACJ,+BAA+B;AAAA;AAAA;AAAA;AAAA,IAInC;AACA,WAAO;AAAA,EACX;AACJ;;;AD5PA,IAAI,gBAAgB;AAwBb,SAAS,cAAc,KAAK;AAG/B,MAAI,oBAAoB,IAAI,kBAAkB,GAAG;AACjD,OAAK,sBAAsB,kBAAkB;AAG7C,OAAK,mBAAmB,kBAAkB;AAG1C,MAAI,eAAe,IAAI,aAAa,KAAK,iBAAiB;AAC1D,MAAI,cAAc,IAAI,YAAY,KAAK,iBAAiB;AAUxD,OAAK,YAAY,SAAU,OAAO;AAC9B,UAAM,eAAe,SAAS;AAAA,EAClC;AAEA,OAAK,eAAe,SAAU,OAAO;AACjC,UAAM,eAAe,QAAQ,UAAQ;AACjC,UAAI,KAAK,uBAAuB,IAAI;AACpC,WAAK,QAAQ;AAAA,IACjB,CAAC;AACD,UAAM,eAAe,SAAS;AAAA,EAClC;AAOA,OAAK,YAAY,SAAU,OAAO,kBAAkB,OAAO;AACvD,IAAAC,cAAa,OAAO;AAGpB,SAAK,aAAa,KAAK;AACvB,IAAAA,cAAa,SAAS;AAGtB,QAAI,cAAc,aAAa,KAAK,OAAO,eAAe;AAC1D,IAAAA,cAAa,MAAM;AAGnB,QAAI,SAAS,YAAY,UAAU,OAAO,aAAa,eAAe;AACtE,IAAAA,cAAa,OAAO;AAEpB,IAAAA,cAAa,KAAK;AAGlB,WAAO,QAAQ,CAAC,SAAS;AACrB,WAAK,kBAAkB,KAAK;AAC5B,UAAI,UAAU,eAAe,MAAM,MAAM,MAAM,KAAK,IAAI;AACxD,UAAI,KAAK,qBAAqB,IAAI;AAClC,WAAK,cAAc;AACnB,WAAK,kBAAkB;AACvB,YAAM,eAAe,KAAK,IAAI;AAC9B,UAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AACrC,WAAK,SAAS,eAAe,IAAI;AAAA,IACrC,CAAC;AAAA,EACL;AACA,MAAI,kBAAkB;AAE1B;AAwBA,SAAS,iBAAiB;AACtB,OAAK,YAAY;AACjB,OAAK,WAAW;AAEhB,OAAK,SAAS,CAAC;AACf,OAAK,OAAO,CAAC;AACb,OAAK,KAAK,CAAC;AACX,OAAK,KAAK,CAAC;AACX,OAAK,KAAK,CAAC;AACX,OAAK,OAAO,CAAC;AACb,OAAK,MAAM,CAAC;AACZ,OAAK,WAAW,CAAC;AACrB;AAqCA,SAAS,aAAa,KAAK,mBAAmB;AAG1C,MAAI,YAAY,IAAI,WAAW,EAAE;AACjC,MAAI,cAAc,IAAI,WAAW,EAAE;AAGnC,MAAI,mBAAmB,kBAAkB,gBAAgB,KAAK,iBAAiB;AAC/E,MAAI,mBAAmB,CAAC,UAAU;AAClC,MAAI,kBAAkB;AAYtB,OAAK,OAAO,SAAU,OAAO,iBAAiB;AAC1C,QAAI,KAAK,MAAM;AACf,sBAAmB,kBAAmB,mBAAmB;AAGzD,QAAI,YAAa,MAAM,YAAY,MAAM;AAGzC,QAAI,cAAc,CAAC;AACnB,iBAAa,MAAM;AAGnB,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,UAAI,IAAK,MAAM,IAAK,IAAI;AACxB,UAAI,IAAK,MAAM,IAAK,IAAI;AAGxB,UAAI,eAAe,MAAM,WAAW,KAAK,IAAI,OAAK;AAC9C,YAAI,KAAK,EAAE,OAAQ,QAAO,EAAE,OAAO,UAAU,GAAG,GAAG,CAAC;AACpD,eAAO;AAAA,MACX,CAAC;AAGD,UAAI,iBAAa,eAAAC,SAAQ,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,EAC3C,GAAG,GAAG,GAAG,CAAC,EACV,UAAU,GAAG,GAAG,CAAC;AAGtB,UAAI,UAAU,SAAS,KAAK,IAAI;AAC5B,oBAAY,IAAI,WAAW,KAAK,EAAE;AAClC,sBAAc,IAAI,WAAW,KAAK,EAAE;AAAA,MACxC;AAGA,4BAAsB,YAAY,EAAE;AAOpC,UAAI,OAAO,WAAW,IAAI,IAAI,GAAG,CAAC;AAClC,UAAI,OAAO,WAAW,IAAI,GAAG,GAAG,CAAC;AACjC,UAAI,MAAM;AAEN,YAAI,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC;AAC9B,YAAI,SAAS,kBAAkB,GAAG,SAAS,IAAI,MAAM,CAAC;AAEtD,YAAI,SAAS,GAAG;AACZ,qCAA2B,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,QAAQ,WAAW;AAAA,QACtE;AAAA,MACJ;AAGA,UAAI,UAAW;AAMf,eAAS,IAAI,GAAG,IAAI,KAAK,GAAG,KAAK;AAG7B,YAAI,MAAM,GAAG;AACT,cAAI,KAAK,MAAM,iBAAiB,CAAC;AACjC,cAAI,MAAM,KAAK,OAAO,MAAM,iBAAiB,IAAI,CAAC,GAAG;AACjD;AAAA,UACJ;AAAA,QACJ;AAGA,YAAI,cAAe,MAAM,IAAK,OAAO,MAAM;AAE3C,YAAI,KAAK,kBAAkB,GAAG,MAAM,GAAG,MAAM,IAAI,GAAG,WAAW;AAC/D,YAAI,KAAK,GAAG;AACR,qCAA2B,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,WAAW;AAAA,QACtE;AAAA,MACJ;AAAA,IAGJ;AAGA,WAAO;AAAA,EACX;AAYA,WAAS,sBAAsB,YAAY,MAAM;AAC7C,QAAI,8BAA8B,MAAM;AACpC,kCAA4B;AAC5B,0BAAoB,IAAI,SAAS;AAEjC,eAAS,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK;AAChC,YAAI,MAAO,IAAI,IAAK,IAAK,IAAI,OAAQ,IAAI;AACzC,mBAAW,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG;AACjC,wBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,EAAE,GAAG;AAC7C,2BAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG;AAAA,MACpD;AAAA,IACJ;AAEA,QAAI,cAAc,WAAW,IAAI,GAAG,GAAG,CAAC;AACxC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,cAAI,KAAK,IAAI,IAAI,IAAI,IAAI;AACzB,cAAI,MAAM,WAAW,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAC5C,cAAI,OAAO;AACX,cAAI,CAAC,IAAK,QAAO;AACjB,cAAI,QAAQ,YAAa,QAAO;AAChC,wBAAc,EAAE,IAAI;AACpB,oBAAU,EAAE,IAAI,OAAO;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,4BAA4B;AAChC,MAAI,oBAAoB,CAAC,OAAO,IAAI;AACpC,MAAI,YAAY,MAAM,EAAE,EAAE,KAAK,IAAI;AACnC,MAAI,gBAAgB,MAAM,EAAE,EAAE,KAAK,CAAC;AACpC,MAAI,aAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrC,MAAI,kBAAkB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACvC,MAAI,qBAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAG1C,WAAS,aAAa,GAAG,GAAG,GAAG;AAC3B,QAAI,KAAK,WAAW,IAAI,CAAC;AACzB,QAAI,KAAK,WAAW,IAAI,CAAC;AACzB,QAAI,KAAK,WAAW,IAAI,CAAC;AACzB,QAAI,KAAK,KAAK,IAAI,KAAK,IAAI;AAC3B,QAAI,WAAW,UAAU,EAAE;AAC3B,QAAI,OAAO,cAAc,EAAE;AAC3B,QAAI,SAAS,GAAG;AACZ,aAAO,kBAAkB,SAAS,IAAI,GAAG,GAAG,CAAC,CAAC;AAAA,IAClD;AACA,QAAI,SAAS,CAAC,iBAAiB,kBAAkB,EAAE,IAAI;AACvD,QAAI,KAAK,OAAO,IAAI,CAAC;AACrB,QAAI,KAAK,OAAO,IAAI,CAAC;AACrB,QAAI,KAAK,OAAO,IAAI,CAAC;AACrB,WAAO,kBAAkB,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC;AAAA,EACrD;AAoBA,WAAS,kBAAkB,GAAG,MAAM,IAAI,MAAM,IAAI,kBAAkB,MAAM;AACtE,QAAIC,OAAM,KAAK,MAAM,CAAC;AACtB,QAAI,OAAO;AACX,QAAI,SAAS;AACb,QAAI,OAAO,IAAI,UAAU;AACzB,QAAI,YAAa,IAAI,UAAU,aAAa,IAAI,UAAU,OAAO,CAAC;AAElE,QAAI,gBAAgB,IAAI,SAAS;AACjC,QAAI,cAAc,IAAI,SAAS;AAC/B,QAAI,cAAc,IAAI;AAItB,QAAI,IAAI;AAGR,QAAI,SAAS,KAAK,MAAM,IAAI,GAAG,CAAC;AAChC,QAAI,WAAW,KAAK,OAAO,CAAC;AAC5B,QAAI,WAAW,KAAK,OAAO,CAAC;AAC5B,QAAI,SAAS,KAAK,MAAM,IAAI,GAAG,CAAC;AAChC,QAAI,WAAW,KAAK,OAAO,CAAC;AAC5B,QAAI,WAAW,KAAK,OAAO,CAAC;AAE5B,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,IAAIA,MAAK,EAAE,GAAG;AAC1B,UAAI,KAAK;AACT,UAAI,KAAK;AACT,gBAAU;AACV,gBAAU;AAGV,UAAI,mBAAmB,gBAAgB,CAAC,KAAK,GAAG;AAC5C,aAAKA;AACL;AAAA,MACJ;AAEA,eAAS,IAAI,GAAG,IAAIA,MAAK,KAAK,KAAK,MAAM,UAAU,MAAM,UAAU;AAS/D,YAAI,MAAM,KAAK,KAAK,EAAE;AACtB,YAAI,MAAM,KAAK,KAAK,EAAE;AAItB,YAAI,QAAQ,IAAK;AAGjB,YAAI,MAAM,cAAc,GAAG;AAC3B,YAAI,MAAM,cAAc,GAAG;AAC3B,YAAI,OAAO,IAAK;AAGhB,YAAI,KAAK,YAAY,KAAK,WAAW;AACrC,YAAI,KAAK,YAAY,KAAK,cAAc,CAAC;AACzC,YAAI,OAAO,GAAI;AAKf,YAAI,OAAO,OAAO,GAAG;AACjB,eAAK,CAAC,IAAI;AACV,cAAI,KAAM,QAAO,CAAC,IAAI,WAAW,cAAc,IAAI,IAAI,GAAG,GAAG,SAAS;AACtE;AAAA,QACJ,WAAW,OAAO,OAAO,GAAG;AACxB,eAAK,CAAC,IAAI,CAAC;AACX,cAAI,KAAM,QAAO,CAAC,IAAI,WAAW,cAAc,IAAI,IAAI,GAAG,GAAG,SAAS;AACtE;AAAA,QACJ,OAAO;AAAA,QAGP;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAYA,WAAS,2BAA2B,GAAG,GAAG,GAAG,GAAG,MAAM,MAAM,UAAU,aAAa;AAC/E,QAAI,OAAO,IAAI,UAAU;AACzB,QAAI,OAAO;AACX,QAAI,SAAS;AAEb,QAAI,IAAI;AACR,QAAI,cAAc,IAAI;AACtB,QAAI,IAAI,CAAC,GAAG,GAAG,CAAC;AAChB,MAAE,CAAC,IAAI;AAEP,QAAI,iBAAkB,OAAQ,cAAc;AAE5C,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,UAAI,IAAI;AACR,UAAI,IAAI;AACR,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK,GAAG,KAAK,GAAG;AAEtC,YAAI,UAAU,KAAK,CAAC,IAAI;AACxB,YAAI,CAAC,SAAS;AACV,cAAI;AACJ;AAAA,QACJ;AAEA,YAAI,KAAK,OAAO,CAAC,IAAI;AAGrB,aAAK,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG;AAC3B,cAAI,CAAC,eAAe,IAAI,GAAG,MAAM,SAAS,QAAQ,EAAE,EAAG;AAAA,QAC3D;AAEA;AACA,eAAK,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG;AAC3B,qBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,kBAAI,KAAK,IAAI,IAAI,IAAI;AACrB,kBAAI,CAAC,eAAe,IAAI,MAAM,SAAS,QAAQ,EAAE,EAAG,OAAM;AAAA,YAC9D;AAAA,UACJ;AAMA,YAAI,QAAQ,KAAK,IAAI,OAAO;AAC5B,YAAI,YAAY,gBAAgB,KAAK;AAIrC,YAAI,EAAE,aAAa,cAAc;AAC7B,cAAI,aAAa,aAAa,IAAI;AAClC,qBAAW,WAAW;AACtB,qBAAW,YAAY;AACvB,sBAAY,SAAS,IAAI;AAAA,QAC7B;AAIA,YAAI,WAAW,YAAY,SAAS;AACpC,YAAI,KAAK,SAAS;AAClB,iBAAS;AAET,iBAAS,OAAO,EAAE,IAAI;AACtB,UAAE,CAAC,IAAI;AACP,UAAE,CAAC,IAAI;AACP,iBAAS,GAAG,EAAE,IAAI,EAAE,CAAC;AACrB,iBAAS,GAAG,EAAE,IAAI,EAAE,CAAC;AACrB,iBAAS,GAAG,EAAE,IAAI,EAAE,CAAC;AACrB,iBAAS,KAAK,EAAE,IAAI;AACpB,iBAAS,IAAI,EAAE,IAAI;AACnB,iBAAS,SAAS,EAAE,IAAI;AACxB,iBAAS,KAAK,EAAE,IAAK,UAAU,IAAK,cAAc,cAAc;AAIhE,iBAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC3B,mBAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC3B,iBAAK,IAAI,KAAK,KAAK,IAAI,IAAI;AAAA,UAC/B;AAAA,QACJ;AAGA,oBAAY,IAAI;AAChB,YAAI,aAAa,EAAG;AAAA,MACxB;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,YAAY,OAAO,MAAM,SAAS,QAAQ,OAAO;AACtD,QAAI,YAAY,KAAK,KAAK,EAAG,QAAO;AACpC,QAAI,UAAU,OAAO,KAAK,EAAG,QAAO;AACpC,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,OAAO,MAAM,SAAS,QAAQ,OAAO;AAC3D,QAAI,YAAY,KAAK,KAAK,EAAG,QAAO;AACpC,WAAO;AAAA,EACX;AAEJ;AAMA,IAAI,eAAgB,uBAAM;AACtB,MAAI,MAAM,CAAC,GAAG,KAAK;AACnB,MAAI,MAAM,MAAM;AACZ,QAAI,MAAM,IAAI,OAAQ,KAAI,KAAK,IAAI,gBAAc;AACjD;AACA,WAAO,IAAI,KAAK,CAAC;AAAA,EACrB;AACA,MAAI,QAAQ,MAAM;AAAE,SAAK;AAAA,EAAE;AAC3B,SAAO,EAAE,KAAK,MAAM;AACxB,GAAG;AAgCH,SAAS,YAAY,KAAK,mBAAmB;AAOzC,OAAK,YAAY,SAAU,OAAO,aAAa,iBAAiB;AAC5D,QAAI,QAAQ,IAAI,UAAU,SAAS;AAEnC,QAAI,OAAO,IAAI,UAAU;AACzB,QAAI,SAAS,IAAI,UAAU;AAC3B,QAAI,WAAW,IAAI,UAAU;AAE7B,QAAI,mBAAmB,IAAI,SAAS;AACpC,QAAI,iBAAiB,IAAI,SAAS;AAClC,QAAI,QAAQ,CAAC,GAAG,GAAG,CAAC;AAOpB,QAAI,SAAS,CAAC;AACd,aAAS,OAAO,aAAa;AACzB,UAAI,WAAW,YAAY,GAAG;AAC9B,UAAI,YAAY,SAAS;AAGzB,UAAI,YAAY;AAChB,UAAI,CAAC,iBAAiB;AAClB,YAAI,UAAU,iBAAiB,SAAS,OAAO,CAAC,CAAC;AACjD,oBAAa,WAAW;AAAA,MAC5B;AAGA,UAAI,KAAK,SAAS;AAClB,UAAI,UAAU,IAAI,YAAY,KAAK,CAAC;AACpC,UAAI,YAAY,IAAI,aAAa,KAAK,EAAE;AACxC,UAAI,UAAU,IAAI,aAAa,KAAK,EAAE;AACtC,UAAI,SAAS,IAAI,aAAa,KAAK,EAAE;AACrC,UAAI,MAAM,IAAI,aAAa,KAAK,CAAC;AACjC,UAAI;AACJ,UAAI,UAAW,gBAAe,IAAI,aAAa,KAAK,CAAC;AAGrD,eAAS,IAAI,GAAG,IAAI,SAAS,UAAU,KAAK;AAGxC,YAAI,QAAQ,SAAS,OAAO,CAAC;AAC7B,YAAI,cAAc,SAAS,KAAK,CAAC;AAEjC,YAAI,IAAI,SAAS,GAAG,CAAC;AACrB,YAAI,IAAI,SAAS,GAAG,CAAC;AACrB,YAAI,IAAI,SAAS,GAAG,CAAC;AACrB,YAAI,IAAI,SAAS,KAAK,CAAC;AACvB,YAAI,IAAI,SAAS,IAAI,CAAC;AACtB,YAAI,OAAQ,cAAc,IAAK;AAC/B,YAAI,MAAO,cAAc,IAAK,KAAK;AAGnC,0BAAkB,WAAW,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,CAAC;AACnD,eAAO,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG;AAE9B,YAAI,QAAQ,CAAC,GAAG,GAAG,CAAC;AACpB,cAAM,IAAI,IAAI;AACd,wBAAgB,SAAS,GAAG,KAAK;AAEjC,YAAI,KAAK,SAAS,SAAS,CAAC;AAC5B,YAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,aAAa,EAAE;AAClC,YAAI,SAAS,aAAa,GAAG,GAAG,GAAG,CAAC;AAEpC,uBAAe,SAAS,GAAG,MAAM,KAAK,MAAM;AAE5C,YAAI,WAAW;AACX,cAAI,aAAa,iBAAiB,KAAK;AACvC,0BAAgB,cAAc,GAAG,UAAU;AAAA,QAC/C;AAEA,YAAI,WAAW,eAAe,KAAK,KAAK;AACxC,YAAI,MAAM;AACN,yBAAe,QAAQ,GAAG,UAAU,QAAQ,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,QACpE,OAAO;AACH,8BAAoB,QAAQ,GAAG,QAAQ;AAAA,QAC3C;AAAA,MACJ;AAKA,UAAI,OAAO,SAAS,MAAM,SAAS,IAAI,SAAS;AAChD,UAAI,OAAO,IAAI,KAAK,MAAM,KAAK;AAC/B,UAAI,OAAO,IAAI,WAAW;AAG1B,WAAK,YAAY;AACjB,WAAK,UAAU;AACf,WAAK,UAAU;AACf,WAAK,SAAS;AACd,WAAK,MAAM;AACX,WAAK,YAAY,IAAI;AAGrB,UAAI,WAAW;AACX,aAAK,gBAAgB,mBAAmB,cAAc,OAAO,CAAC;AAAA,MAClE;AAGA,WAAK,aAAa;AAClB,WAAK,wBAAwB;AAC7B,WAAK,uBAAuB,MAAM;AAGlC,UAAI,CAAC,iBAAiB;AAClB,aAAK,WAAW,kBAAkB,YAAY,SAAS;AAAA,MAC3D;AAGA,aAAO,KAAK,IAAI;AAAA,IACpB;AAEA,WAAO;AAAA,EACX;AAOA,WAAS,kBAAkB,QAAQ,SAAS,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG;AAC7D,QAAI,SAAS,UAAU;AAEvB,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,QAAI,KAAK,CAAC,GAAG,GAAG,CAAC;AACjB,QAAIC,MAAK,CAAC,GAAG,GAAG,CAAC;AACjB,OAAI,SAAS,IAAK,IAAI,CAAC,IAAI;AAC3B,IAAAA,IAAI,SAAS,IAAK,IAAI,CAAC,IAAI;AAE3B,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC3B,aAAO,SAAS,EAAE,IAAI,IAAI,EAAE;AAC5B,aAAO,SAAS,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE;AACzC,aAAO,SAAS,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,IAAIA,IAAG,EAAE;AAClD,aAAO,SAAS,IAAI,EAAE,IAAI,IAAI,EAAE,IAAIA,IAAG,EAAE;AAAA,IAC7C;AAAA,EACJ;AAIA,WAAS,OAAO,OAAO,SAAS,GAAG,GAAG,GAAG,KAAK;AAC1C,QAAI,SAAS,UAAU;AACvB,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAI,GAAG,IAAK,OAAM,SAAS,CAAC,IAAI;AAChD,QAAI,MAAM,GAAG;AACT,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,IAAI;AAC5C,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,MAAM;AAAA,IAClD,WAAW,MAAM,GAAG;AAChB,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,IAAI;AAC5C,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,MAAM;AAAA,IAClD,OAAO;AACH,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,IAAI;AAC5C,YAAM,SAAS,CAAC,IAAI,MAAM,SAAS,CAAC,IAAI,CAAC,MAAM;AAAA,IACnD;AAAA,EACJ;AAEA,WAAS,gBAAgB,SAAS,SAAS,OAAO;AAC9C,QAAI,SAAS,UAAU;AACvB,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAQ,SAAS,CAAC,IAAI,MAAM,IAAI,CAAC;AAAA,IACrC;AAAA,EACJ;AAEA,WAAS,eAAe,QAAQ,SAAS,MAAM,KAAK,QAAQ;AACxD,QAAI,SAAS,UAAU;AACvB,QAAI,YAAY,UAAU;AAC1B,QAAI,SAAS,EAAG,OAAM,CAAC;AACvB,QAAI,KAAM,MAAM,IAAK,IAAI;AACzB,QAAI,CAAC,OAAQ,OAAM;AACnB,QAAI,YAAY,WAAW,EAAE;AAC7B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,aAAO,SAAS,CAAC,IAAI,YAAY,UAAU,CAAC;AAAA,IAChD;AAAA,EACJ;AACA,MAAI,aAAa;AAAA,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA;AAAA,IACjB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA;AAAA,IACjB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA;AAAA,IACjB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA;AAAA,EACrB;AAKA,WAAS,gBAAgB,QAAQ,SAAS,YAAY;AAClD,QAAI,SAAS,UAAU;AACvB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,aAAO,SAAS,CAAC,IAAI;AAAA,IACzB;AAAA,EACJ;AAEA,WAAS,aAAa,GAAG,GAAG,GAAG,GAAG;AAG9B,QAAI,MAAM,GAAG;AACT,aAAQ,MAAM,IAAM,MAAM,IAAK;AAAA,IACnC,OAAO;AACH,aAAQ,MAAM,IAAK,QAAS,IAAI,IAAI,IAAI;AAAA,IAC5C;AAAA,EACJ;AAEA,WAAS,oBAAoB,QAAQ,SAAS,KAAK;AAC/C,QAAI,SAAS,UAAU;AACvB,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC5B,aAAO,SAAS,CAAC,IAAI,IAAI,CAAC;AAC1B,aAAO,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC;AAC9B,aAAO,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC;AAC9B,aAAO,SAAS,IAAI,CAAC,IAAI;AAAA,IAC7B;AAAA,EACJ;AAEA,WAAS,eAAe,QAAQ,SAAS,KAAK,QAAQ,OAAO,GAAG,GAAG,GAAG,GAAG;AACrE,QAAI,SAAS,UAAU;AACvB,gBAAY,QAAQ,QAAQ,KAAK,GAAG,QAAQ,KAAK;AACjD,gBAAY,QAAQ,SAAS,GAAG,KAAK,GAAG,QAAQ,KAAK;AACrD,gBAAY,QAAQ,SAAS,GAAG,KAAK,GAAG,QAAQ,KAAK;AACrD,gBAAY,QAAQ,SAAS,IAAI,KAAK,GAAG,QAAQ,KAAK;AAAA,EAC1D;AAIA,WAAS,YAAY,QAAQ,IAAI,SAAS,IAAI,QAAQ,UAAU;AAC5D,QAAI,OAAQ,OAAO,IAAK,WAAW,OAAO,KAAK,CAAC;AAChD,WAAO,EAAE,IAAI,QAAQ,CAAC,IAAI;AAC1B,WAAO,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI;AAC9B,WAAO,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI;AAC9B,WAAO,KAAK,CAAC,IAAI;AAAA,EACrB;AAEJ;AA6CA,SAAS,WAAW,SAAS,MAAM,MAAM,GAAG,GAAG,cAAc,OAAO;AAChE,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AAGR,MAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,GAAG;AAAE,MAAE;AAAG,MAAE;AAAA,EAAE;AACxC,MAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,GAAG;AAAE,MAAE;AAAG,MAAE;AAAA,EAAE;AACxC,MAAI,QAAQ,MAAM,GAAG,IAAI,CAAC,GAAG;AAAE,MAAE;AAAG,MAAE;AAAA,EAAE;AACxC,MAAI,QAAQ,MAAM,GAAG,IAAI,CAAC,GAAG;AAAE,MAAE;AAAG,MAAE;AAAA,EAAE;AAGxC,MAAI,cAAc,QAAQ,MAAM,GAAG,CAAC;AACpC,MAAI,aAAa;AAEb,QAAK,MAAM,KAAK,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAK,IAAI;AACnD,QAAK,MAAM,KAAK,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAK,IAAI;AACnD,QAAK,MAAM,KAAK,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAK,IAAI;AACnD,QAAK,MAAM,KAAK,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAK,IAAI;AACnD,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AAAA,EACtC;AAGA,MAAI,aAAa;AAEb,QAAI,MAAM,KAAM,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAAE,UAAI;AAAA,IAAE;AACtD,QAAI,MAAM,KAAM,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAAE,UAAI;AAAA,IAAE;AACtD,QAAI,MAAM,KAAM,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAAE,UAAI;AAAA,IAAE;AACtD,QAAI,MAAM,KAAM,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAAE,UAAI;AAAA,IAAE;AACtD,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AAAA,EACtC;AAGA,MAAI,MAAM,GAAG;AACT,QAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG;AAC7B,UAAI;AAAA,IACR,WAAW,CAAE,QAAQ,MAAM,GAAG,IAAI,CAAC,KAC/B,CAAE,QAAQ,MAAM,IAAI,GAAG,CAAC,KACxB,CAAE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAChC,UAAI;AAAA,IACR;AAAA,EACJ;AAEA,MAAI,MAAM,GAAG;AACT,QAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG;AAC7B,UAAI;AAAA,IACR,WAAW,CAAE,QAAQ,MAAM,GAAG,IAAI,CAAC,KAC/B,CAAE,QAAQ,MAAM,IAAI,GAAG,CAAC,KACxB,CAAE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAChC,UAAI;AAAA,IACR;AAAA,EACJ;AAEA,MAAI,MAAM,GAAG;AACT,QAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG;AAC7B,UAAI;AAAA,IACR,WAAW,CAAE,QAAQ,MAAM,GAAG,IAAI,CAAC,KAC/B,CAAE,QAAQ,MAAM,IAAI,GAAG,CAAC,KACxB,CAAE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAChC,UAAI;AAAA,IACR;AAAA,EACJ;AAEA,MAAI,MAAM,GAAG;AACT,QAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG;AAC7B,UAAI;AAAA,IACR,WAAW,CAAE,QAAQ,MAAM,GAAG,IAAI,CAAC,KAC/B,CAAE,QAAQ,MAAM,IAAI,GAAG,CAAC,KACxB,CAAE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAI;AAChC,UAAI;AAAA,IACR;AAAA,EACJ;AAEA,SAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACtC;AASA,SAAS,aAAa,QAAQ;AAC1B,MAAI,IAAI,SAAS;AACjB,MAAI,IAAK,UAAU,IAAK;AACxB,MAAI,IAAK,UAAU,IAAK;AACxB,MAAI,IAAK,UAAU,IAAK;AACxB,SAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB;AASA,IAAIH,gBAAgB,gBAChB,gBAAgB,eAAe,SAAS,IAAI,MAAM;AAAE;;;AEv9BxD,IAAI,WAAW;AAAA,EACX,aAAa;AACjB;AAGA,IAAI,gBAAgB,KAAK,MAAM;AAoBxB,IAAM,WAAN,MAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlB,YAAY,KAAK,MAAM;AACnB,WAAO,OAAO,OAAO,CAAC,GAAG,UAAU,IAAI;AAEvC,SAAK,MAAM;AAGX,SAAK,eAAe,KAAK;AAIzB,QAAI,SAAS,CAAC;AAId,QAAI,gBAAgB,CAAC,KAAK;AAC1B,QAAI,eAAe,CAAC,KAAK;AACzB,QAAI,eAAe,CAAC,KAAK;AACzB,QAAI,gBAAgB,CAAC,KAAK;AAC1B,QAAI,aAAa,CAAC,IAAI;AACtB,QAAI,cAAc,CAAC,IAAI;AACvB,QAAI,gBAAgB,CAAC,IAAI;AACzB,QAAI,eAAe,CAAC,KAAK;AAGzB,QAAI,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAGjC,QAAI,iBAAiB,CAAC,IAAI;AAC1B,QAAI,sBAAsB,CAAC,EAAE;AAa7B,QAAI,UAAU,CAAC;AAqBf,SAAK,gBAAgB,SAAU,KAAK,GAAG,UAAU,MAAM;AACnD,UAAII,YAAW,IAAI,aAAa,WAAW,QAAQ,KAAK;AACxD,UAAIC,QAAO,OAAO,OAAO,CAAC,GAAGD,WAAU,WAAW,CAAC,CAAC;AAGpD,UAAI,KAAK,KAAK,KAAK,aAAc,OAAM,4BAA4B;AAInE,aAAO,KAAK,cAAc,QAAQ;AAC9B,aAAK,cAAc,cAAc,QAAQ,CAAC,CAAC;AAAA,MAC/C;AAGA,oBAAc,EAAE,IAAI,CAAC,CAACC,MAAK;AAC3B,mBAAa,EAAE,IAAI,CAAC,CAACA,MAAK;AAC1B,mBAAa,EAAE,IAAI,CAAC,CAACA,MAAK;AAG1B,oBAAc,EAAE,IAAI,CAAC,CAACA,MAAK;AAC3B,kBAAY,EAAE,IAAIA,MAAK,aAAa;AAIpC,UAAI,MAAMA,MAAK,YAAY;AAC3B,UAAI;AACJ,UAAI,CAAC,KAAK;AACN,eAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,MAC9C,WAAW,OAAO,OAAO,UAAU;AAC/B,eAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,MACxC,WAAW,IAAI,UAAU,IAAI,UAAU,GAAG;AAEtC,eAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,MAC1D,WAAW,IAAI,UAAU,IAAI,UAAU,GAAG;AAEtC,eAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,MAC1D,WAAW,IAAI,UAAU,IAAI,UAAU,GAAG;AAEtC,eAAO;AAAA,MACX,MAAO,OAAM,iCAAiC;AAG9C,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,kBAAU,KAAK,IAAI,CAAC,IAAI,cAAc,MAAM,QAAQ,KAAK,CAAC,GAAG,IAAI;AAAA,MACrE;AAGA,iBAAW,EAAE,IAAI,CAAC;AAGlB,UAAI,aAAa,EAAE,GAAG;AAClB,mBAAW,EAAE,EAAE,eAAeA,MAAK;AACnC,mBAAW,EAAE,EAAE,YAAYA,MAAK;AAAA,MACpC;AAGA,UAAI,aAAaA,MAAK,UAAUA,MAAK,YAAYA,MAAK,SAASA,MAAK,WAAWA,MAAK;AACpF,oBAAc,EAAE,IAAK,aAAc,IAAI,oBAAoBA,KAAI,IAAI;AAInE,UAAI,UAAU,cAAc,EAAE,KAAK,aAAa,EAAE,KAC3C,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,cAAc,EAAE;AAC5D,mBAAa,EAAE,IAAI;AAEnB,aAAO;AAAA,IACX;AAYA,SAAK,mBAAmB,SAAU,OAAO,KAAK,UAAU,MAAM;AAE1D,UAAI,MAAM,QAAQ,OAAO,GAAG;AACxB,cAAM;AAAA,MACV;AAEA,UAAIA,QAAO,OAAO,OAAO,IAAI,gBAAgB,GAAG,WAAW,CAAC,CAAC;AAC7D,UAAI,QAAQ,OAAO,IAAI,KAAK,QAAQ;AACpC,aAAO,IAAI,IAAI;AAEf,UAAI,SAASA,MAAK,aAAa,KAAK,eAAeA,MAAK,aAAa;AACrE,UAAI,QAAQ;AACZ,UAAI,QAAQA,MAAK,SAAS,CAAC,GAAK,GAAK,CAAG;AACxC,UAAI,MAAM,WAAW,EAAG,SAAQ,MAAM,IAAI;AAC1C,UAAI,OAAQ,SAAQ;AAGpB,qBAAe,KAAK,IAAI;AACxB,0BAAoB,KAAK,IAAIA,MAAK;AAElC,cAAQ,KAAK,IAAI;AAAA,QACb;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT,aAAa,CAAC,CAACA,MAAK;AAAA,QACpB,YAAYA,MAAK;AAAA,QACjB,WAAWA,MAAK;AAAA,MACpB;AACA,aAAO;AAAA,IACX;AAYA,SAAK,mBAAmB,SAAU,IAAI;AAClC,aAAO,cAAc,EAAE;AAAA,IAC3B;AAOA,SAAK,kBAAkB,SAAU,IAAI;AACjC,aAAO,aAAa,EAAE;AAAA,IAC1B;AAMA,SAAK,mBAAmB,SAAU,IAAI;AAClC,aAAO,aAAa,EAAE;AAAA,IAC1B;AAMA,SAAK,gBAAgB,SAAU,IAAI;AAC/B,aAAO,WAAW,EAAE;AAAA,IACxB;AAIA,SAAK,uBAAuB,SAAU,SAAS,KAAK;AAChD,aAAO,UAAU,UAAU,IAAI,GAAG;AAAA,IACtC;AAQA,SAAK,kBAAkB,SAAU,OAAO;AACpC,aAAO,QAAQ,KAAK;AAAA,IACxB;AASA,SAAK,qBAAqB,SAAU,MAAM,IAAI;AAC1C,aAAO,QAAQ,KAAK,SAAO;AACvB,YAAI,IAAI,YAAY,IAAK,QAAO;AAChC,eAAO,IAAI;AAAA,MACf,CAAC;AAAA,IACL;AAeA,SAAK,kBAAkB;AAEvB,SAAK,iBAAiB;AAEtB,SAAK,kBAAkB;AAEvB,SAAK,gBAAgB;AAErB,SAAK,mBAAmB;AAExB,SAAK,sBAAsB;AAE3B,SAAK,sBAAsB;AAE3B,SAAK,uBAAuB;AAE5B,SAAK,uBAAuB;AAY5B,SAAK,iBAAiB,QAAQ,EAAE,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;AACtD,SAAK,cAAc,GAAG,EAAE,UAAU,OAAO,CAAC;AAAA,EAE9C;AAEJ;AAYA,SAAS,cAAc,KAAK,QAAQ,MAAM,UAAU;AAChD,MAAI,CAAC,KAAM,QAAO;AAClB,MAAI,KAAK,OAAO,IAAI;AACpB,MAAI,OAAO,UAAa,SAAU,MAAK,IAAI,iBAAiB,IAAI;AAChE,SAAO;AACX;AAKA,SAAS,oBAAoB,MAAM;AAC/B,OAAK,SAAS,KAAK,UAAU;AAC7B,OAAK,WAAW,KAAK,YAAY;AACjC,OAAK,QAAQ,KAAK,SAAS;AAC3B,OAAK,UAAU,KAAK,WAAW;AAC/B,OAAK,qBAAqB,KAAK,sBAAsB;AACzD;AAQA,SAAS,aAAa,UAAU,OAAO;AAEnC,OAAK,QAAS,UAAW,QAAQ;AAEjC,OAAK,SAAU,UAAW,QAAQ;AAElC,OAAK,QAAQ;AAQb,OAAK,WAAW;AAEhB,OAAK,YAAY;AAEjB,OAAK,eAAe;AAEpB,OAAK,YAAY;AAEjB,OAAK,SAAS;AAEd,OAAK,WAAW;AAEhB,OAAK,QAAQ;AAEb,OAAK,UAAU;AAEf,OAAK,qBAAqB;AAC9B;AAQA,SAAS,kBAAkB;AAIvB,OAAK,QAAQ;AAIb,OAAK,aAAa;AAElB,OAAK,cAAc;AAEnB,OAAK,aAAa;AAKlB,OAAK,iBAAiB;AAC1B;;;AC5ZA,IAAAC,kBAAmB;;;ACmBZ,IAAM,qBAAN,MAAyB;AAAA;AAAA,EAG5B,YAAY,WAAW,WAAW;AAC9B,QAAI,QAAQ,UAAU;AACtB,UAAM,cAAc,IAAI,qBAAqB,KAAK,CAAC;AAGnD,QAAI,cAAc;AAClB,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AAGpB,QAAI,SAAS,IAAI,OAAO,GAAG;AAC3B,UAAM,mBAAmB;AACzB,WAAO,SAAS,CAAC;AACjB,QAAI,gBAAgB,CAAC;AASrB,SAAK,SAAS,CAAC,WAAW;AAAE,0BAAoB,QAAQ,MAAM;AAAA,IAAE;AAEhE,SAAK,UAAU,CAAC,MAAM,UAAU,KAAK,UAAU;AAC3C,UAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AAGrC,UAAI,CAAC,UAAU;AACX,YAAI,KAAK,SAAS,aAAa,EAAG;AAClC,eAAO,eAAe,KAAK,IAAI;AAC/B,aAAK,SAAS,aAAa,IAAI;AAC/B;AAAA,MACJ;AAGA,UAAI,KAAK,KAAK,MAAM,IAAI,CAAC,IAAI,EAAE;AAC/B,UAAI,KAAK,KAAK,MAAM,IAAI,CAAC,IAAI,EAAE;AAC/B,UAAI,KAAK,KAAK,MAAM,IAAI,CAAC,IAAI,EAAE;AAC/B,UAAI,SAAS,eAAe,IAAI,IAAI,EAAE;AAGtC,UAAI,QAAQ,cAAc,MAAM;AAChC,UAAI,CAAC,OAAO;AAER,YAAI,OAAO,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AACrC,YAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,kBAAU,IAAI,cAAc,MAAM,MAAM,GAAG;AAE3C,gBAAQ,gBAAgB,KAAK,EAAE;AAC/B,eAAO,OAAO,KAAK,KAAK;AACxB,sBAAc,MAAM,IAAI;AACxB,cAAM,aAAa;AAAA,MACvB;AAGA,YAAM,QAAQ,KAAK,IAAI;AACvB,WAAK,SAAS,WAAW,IAAI;AAC7B,WAAK,SAAS,aAAa,IAAI;AAG/B,WAAK,2BAA2B;AAAA,IACpC;AAIA,SAAK,aAAa,CAAC,SAAS;AACxB,UAAI,CAAC,KAAK,SAAU;AAEpB,UAAI,KAAK,SAAS,aAAa,GAAG;AAC9B,gCAAwB,OAAO,gBAAgB,IAAI;AACnD,aAAK,SAAS,aAAa,IAAI;AAAA,MACnC;AACA,UAAI,KAAK,SAAS,aAAa,GAAG;AAC9B,YAAI,QAAQ,KAAK,SAAS,WAAW;AACrC,YAAI,SAAS,MAAM,SAAS;AACxB,kCAAwB,MAAM,SAAS,IAAI;AAC3C,cAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,mBAAO,cAAc,MAAM,UAAU;AACrC,oCAAwB,OAAO,QAAQ,KAAK;AAAA,UAChD;AAAA,QACJ;AACA,aAAK,SAAS,WAAW,IAAI;AAC7B,aAAK,SAAS,aAAa,IAAI;AAAA,MACnC;AAAA,IACJ;AAKA,SAAK,oBAAoB,CAAC,MAAM,UAAU,UAAU;AAChD,UAAI,KAAK,SAAS,WAAW,GAAG;AAE5B,YAAI,KAAK,SAAS,aAAa,MAAM,QAAS;AAC9C,YAAI,QAAQ,KAAK,SAAS,WAAW;AACrC,YAAI,SAAS,MAAM,SAAS;AACxB,cAAI,SAAS;AACT,kBAAM,QAAQ,KAAK,IAAI;AAAA,UAC3B,OAAO;AACH,oCAAwB,MAAM,SAAS,IAAI;AAAA,UAC/C;AAAA,QACJ;AACA,aAAK,SAAS,aAAa,IAAI;AAAA,MACnC,OAAO;AAEH,YAAI,KAAK,SAAS,aAAa,MAAM,QAAS;AAC9C,YAAI,SAAS;AACT,iBAAO,eAAe,KAAK,IAAI;AAAA,QACnC,OAAO;AACH,kCAAwB,OAAO,gBAAgB,IAAI;AAAA,QACvD;AACA,aAAK,SAAS,aAAa,IAAI;AAAA,MACnC;AAAA,IACJ;AAQA,QAAI,MAAM,MAAM;AAAA,IAAE;AAClB,QAAI,KAAK,YAAY,UAAU,IAAI,MAAM;AAEzC,QAAI,sBAAsB,CAAC,QAAQ,WAAW;AAC1C,aAAO,OAAO,QAAQ,WAAS;AAC3B,cAAM,SAAS,gBAAgB,MAAM;AACrC,cAAM,SAAS,gBAAgB,MAAM;AACrC,cAAM,iBAAiB,QAAQ,OAAK,EAAE,gBAAgB,MAAM,CAAC;AAC7D,YAAI,MAAM,OAAQ,qBAAoB,OAAO,MAAM;AAAA,MACvD,CAAC;AAAA,IACL;AAEA,QAAI,kBAAkB,CAAC,OAAO,SAAS;AACnC,UAAIC,OAAM,IAAI,QAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAClD,UAAIC,OAAM,IAAI,QAAQ,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC,IAAI,IAAI;AACvE,aAAO,IAAI,YAAYD,MAAKC,MAAK,QAAW,QAAW,QAAW,GAAG;AAAA,IACzE;AAAA,EAEJ;AAEJ;;;AD/IA,IAAIC,WAAU;AAId,IAAIC,YAAW;AAAA,EACX,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY,CAAC,KAAK,KAAK,CAAC;AAAA,EACxB,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,EAC5B,cAAc,CAAC,GAAG,GAAG,CAAC;AAAA,EACtB,eAAe,CAAC,GAAG,GAAG,CAAC;AAAA,EACvB,aAAa,CAAC,GAAG,IAAI,GAAG;AAAA,EACxB,OAAO;AAAA,EACP,eAAe,CAAC,MAAM,KAAK,GAAG;AAAA,EAC9B,qBAAqB;AAAA,EACrB,uBAAuB;AAAA,EACvB,iBAAiB;AAAA,EACjB,gBAAgB;AACpB;AA6BO,IAAM,YAAN,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnB,YAAY,KAAK,MAAM,QAAQ;AAC3B,WAAO,OAAO,OAAO,CAAC,GAAGA,WAAU,IAAI;AAEvC,SAAK,MAAM;AAIX,SAAK,iBAAiB,CAAC,CAAC,KAAK;AAI7B,SAAK,QAAQ,CAAC,CAAC,KAAK;AAEpB,SAAK,SAAS,KAAK;AAEnB,SAAK,WAAW,KAAK;AAErB,SAAK,oBAAoB;AAGzB,SAAK,SAAS;AAEd,SAAK,QAAQ;AAEb,SAAK,QAAQ;AAEb,SAAK,SAAS;AAGd,SAAK,WAAW,QAAQ,IAAI;AAG5B,QAAI,KAAK,QAAS,UAAS;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,QAAQ,MAAM;AAGrB,SAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,WAAW;AAAA,MAC7C,uBAAuB,KAAK;AAAA,IAChC,CAAC;AACD,QAAI,QAAQ,IAAI,MAAM,KAAK,MAAM;AACjC,SAAK,QAAQ;AAEb,UAAM,cAAc;AAGpB,UAAM,sBAAsB,yBAAyB;AACrD,UAAM,YAAY;AAGlB,QAAI,YAAY,KAAK,MAAM,KAAK,eAAe;AAE/C,SAAK,iBAAiB,IAAI,mBAAmB,MAAM,SAAS;AAI5D,SAAK,gBAAgB,IAAI,cAAc,aAAa,KAAK;AACzD,SAAK,SAAS,IAAI,WAAW,UAAU,IAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,KAAK;AAClE,SAAK,OAAO,SAAS,KAAK;AAC1B,SAAK,OAAO,OAAO;AAInB,SAAK,aAAa,YAAY,aAAa,EAAE,MAAM,GAAG,GAAG,KAAK;AAC9D,SAAK,eAAe,KAAK,UAAU;AACnC,SAAK,WAAW,SAAS,IAAI;AAC7B,SAAK,WAAW,SAAS,KAAK;AAE9B,SAAK,gBAAgB,KAAK,qBAAqB,mBAAmB;AAClE,SAAK,WAAW,WAAW,KAAK;AAChC,SAAK,WAAW,WAAW,KAAK;AAChC,SAAK,cAAc,OAAO;AAE1B,SAAK,eAAe;AAGpB,UAAM,aAAa,OAAO,UAAU,KAAK,UAAU;AACnD,UAAM,eAAe,OAAO,UAAU,KAAK,YAAY;AAEvD,QAAI,WAAW,QAAQ,UAAU,KAAK,WAAW;AACjD,SAAK,QAAQ,IAAI,iBAAiB,SAAS,UAAU,KAAK;AAC1D,SAAK,MAAM,UAAU,OAAO,UAAU,KAAK,YAAY;AACvD,SAAK,MAAM,WAAW,OAAO,UAAU,KAAK,aAAa;AAGzD,UAAM,yBAAyB;AAAA,EACnC;AACJ;AAUA,UAAU,UAAU,WAAW,WAAY;AACvC,SAAO,KAAK;AAChB;AAIA,UAAU,UAAU,OAAO,SAAU,IAAI;AAEzC;AAMA,UAAU,UAAU,SAAS,WAAY;AACrC,EAAAC,cAAa,OAAO;AACpB,wBAAsB,IAAI;AAC1B,EAAAA,cAAa,cAAc;AAC3B,OAAK,OAAO,WAAW;AACvB,EAAAA,cAAa,YAAY;AACzB,OAAK,MAAM,OAAO;AAClB,EAAAA,cAAa,QAAQ;AACrB,WAAS;AACT,OAAK,OAAO,SAAS;AACrB,EAAAA,cAAa,UAAU;AACvB,EAAAA,cAAa,KAAK;AACtB;AAIA,UAAU,UAAU,aAAa,WAAY;AAE7C;AAIA,UAAU,UAAU,SAAS,WAAY;AACrC,OAAK,OAAO,OAAO;AACnB,MAAI,KAAK,IAAI,WAAW,KAAK,gBAAgB;AACzC,SAAK,MAAM,OAAO;AAAA,EACtB;AACJ;AAIA,UAAU,UAAU,qBAAqB,SAAU,MAAM,QAAQ,SAAS;AACtE,MAAI,IAAI,iBAAiB,IAAI;AAC7B,MAAI,MAAM;AAEN,SAAK,IAAI,cAAc,QAAQ,MAAM,KAAK;AAE1C,QAAIC,QAAO,gBAAAC,QAAO,KAAK,KAAK,IAAI,OAAO,kBAAkB,GAAG,KAAK;AACjE,QAAI,OAAO,OAAQ,OAAQD;AAC3B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,UAAI,QAAQ,CAAC,MAAM,GAAG;AAClB,cAAM,CAAC,KAAK;AAAA,MAChB,OAAO;AACH,cAAM,CAAC,KAAM,QAAQ,CAAC,IAAI,IAAK,IAAI,OAAO,CAAC;AAAA,MAC/C;AAAA,IACJ;AACA,MAAE,SAAS,eAAe,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AACtD,MAAE,SAAS,IAAK,QAAQ,CAAC,IAAK,KAAK,KAAK,IAAI;AAC5C,MAAE,SAAS,IAAK,QAAQ,CAAC,IAAK,KAAK,KAAK,IAAI;AAAA,EAChD;AACA,IAAE,WAAW,IAAI;AACrB;AACA,IAAI,QAAQ,CAAC;AAab,UAAU,UAAU,iBAAiB,SAAU,MAAM,WAAW,OAAO,MAAM,MAAM,kBAAkB,MAAM;AACvG,MAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AAGrC,MAAI,KAAK,SAAS,gBAAgB,GAAG;AACjC,SAAK,eAAe,kBAAkB,MAAM,IAAI;AAChD;AAAA,EACJ;AACA,OAAK,SAAS,gBAAgB,IAAI;AAGlC,MAAI,CAAC,KAAK,QAAQ;AACd,QAAI,CAAC,IAAK,OAAM,KAAK,SAAS,QAAQ;AACtC,QAAI,OAAO,KAAK,IAAI,cAAc,KAAK,MAAM,CAAC,CAAC;AAC/C,SAAK,SAAS,UAAU,IAAI;AAAA,EAChC;AAGA,OAAK,eAAe,QAAQ,MAAM,UAAU,KAAK,eAAe;AAChE,OAAK,oBAAoB,IAAI,MAAM;AAC/B,SAAK,eAAe,WAAW,IAAI;AACnC,SAAK,SAAS,gBAAgB,IAAI;AAAA,EACtC,CAAC;AACL;AACA,IAAI,mBAAmB;AAYvB,UAAU,UAAU,oBAAoB,SAAU,MAAM,UAAU,OAAO;AACrE,MAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AACrC,MAAI,KAAK,SAAS,gBAAgB,GAAG;AACjC,SAAK,eAAe,kBAAkB,MAAM,OAAO;AAAA,EACvD,OAAO;AACH,QAAI,QAAS,MAAK,eAAe,IAAI;AAAA,EACzC;AACJ;AAcA,UAAU,UAAU,uBAAuB,SAAU,MAAM;AACvD,MAAI,MAAM,IAAI,iBAAiB,MAAM,KAAK,KAAK;AAC/C,MAAI,cAAc,eAAe,GAAG,GAAG,CAAC;AACxC,MAAI,aAAa,eAAe,GAAG,GAAG,CAAC;AACvC,MAAI,aAAa,eAAe,GAAG,GAAG,CAAC;AACvC,SAAO;AACX;AA0BA,UAAU,UAAU,2BAA2B,SAAU,OAAO;AAEhE;AAGA,UAAU,UAAU,2BAA2B,SAAU,OAAO;AAEhE;AASA,UAAU,UAAU,gBAAgB,SAAU,OAAO;AACjD,MAAI,OAAO,IAAI,QAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAEnD,OAAK,MAAM,OAAO,QAAQ,UAAQ;AAE9B,QAAI,KAAK,OAAQ;AAGjB,SAAK,SAAS,gBAAgB,IAAI;AAElC,QAAI,KAAK,qBAAqB;AAE1B,WAAK,kBAAkB;AAAA,IAC3B;AAAA,EACJ,CAAC;AAGD,OAAK,eAAe,OAAO,IAAI;AACnC;AAQA,SAAS,sBAAsB,MAAM;AACjC,MAAI,MAAM,KAAK,IAAI;AACnB,MAAI,SAAS,IAAI,wBAAwB;AACzC,OAAK,cAAc,SAAS,eAAe,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AAC1E,OAAK,cAAc,SAAS,IAAI,IAAI;AACpC,OAAK,cAAc,SAAS,IAAI,IAAI;AACpC,OAAK,OAAO,SAAS,IAAI,CAAC,IAAI;AAG9B,MAAI,OAAO,IAAI,kBAAkB;AACjC,MAAI,MAAM,KAAK,IAAI;AACnB,MAAI,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AACpC,MAAI,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AACpC,MAAI,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AACpC,MAAI,KAAK,KAAK,IAAI,SAAS,IAAI,IAAI,EAAE;AACrC,oBAAkB,MAAM,EAAE;AAC9B;AAMA,SAAS,kBAAkB,MAAM,IAAI;AACjC,MAAI,OAAO,KAAK,aAAc;AAC9B,MAAI,OAAO,GAAG;AACV,SAAK,WAAW,WAAW,KAAK;AAAA,EACpC,OAAO;AACH,QAAI,QAAQ,KAAK,IAAI,SAAS,qBAAqB,IAAI,CAAC;AACxD,QAAI,OAAO;AACP,UAAI,UAAU,KAAK,IAAI,SAAS,gBAAgB,KAAK;AACrD,UAAI,MAAM,QAAQ;AAClB,UAAI,QAAQ,QAAQ;AACpB,UAAI,OAAO,SAAS,QAAQ,GAAG;AAC3B,aAAK,cAAc,aAAa,IAAI,GAAG,GAAG,CAAC;AAC3C,aAAK,cAAc,aAAa,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1D,aAAK,cAAc,QAAQ;AAC3B,aAAK,WAAW,WAAW,IAAI;AAAA,MACnC;AAAA,IACJ;AAAA,EACJ;AACA,OAAK,eAAe;AACxB;AAQA,SAAS,iBAAiB,WAAW;AACjC,MAAI,OAAO,UAAU;AACrB,MAAI,CAAC,MAAM;AACP,WAAO,YAAY,aAAa,EAAE,MAAM,EAAI,GAAG,UAAU,KAAK;AAC9D,QAAI,MAAM,UAAU,qBAAqB,qBAAqB;AAC9D,QAAI,kBAAkB;AACtB,QAAI,gBAAgB,IAAI,OAAO,GAAG,GAAG,CAAC;AACtC,QAAI,QAAQ;AACZ,QAAI,OAAO;AACX,SAAK,WAAW;AAGhB,QAAI,IAAI;AACR,QAAI,QAAQ,YAAY,mBAAmB;AAAA,MACvC,QAAQ;AAAA,QACJ,IAAI,QAAQ,GAAG,GAAG,CAAC;AAAA,QACnB,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC;AAAA,QACpB,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;AAAA,QACrB,IAAI,QAAQ,CAAC,GAAG,GAAG,CAAC;AAAA,QACpB,IAAI,QAAQ,GAAG,GAAG,CAAC;AAAA,MACvB;AAAA,IACJ,GAAG,UAAU,KAAK;AAClB,UAAM,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC;AAChC,UAAM,SAAS;AAEf,cAAU,eAAe,IAAI;AAC7B,cAAU,eAAe,KAAK;AAC9B,cAAU,iBAAiB;AAAA,EAC/B;AACA,SAAO;AACX;AAiBA,UAAU,UAAU,mBAAmB,WAAY;AAC/C,MAAI,SAAS,KAAK,MAAM;AACxB,MAAI,SAAS,KAAK,MAAM;AACxB,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,CAAC;AACZ,MAAI,UAAU;AACd,MAAI,UAAU;AACd,MAAI,OAAO,KAAK,MAAM;AACtB,MAAI,UAAU,CAAC;AACf,OAAK,QAAQ,SAAO;AAEhB,QAAI,IAAI,aAAc,KAAI,aAAa,QAAQ,CAAAE,SAAO,QAAQ,KAAKA,IAAG,CAAC;AAAA,QAClE,SAAQ,KAAK,GAAG;AAAA,EACzB,CAAC;AACD,SAAO,OAAO,QAAQ,SAAU,OAAO;AACnC;AACA,UAAM,QAAQ,QAAQ,OAAK,KAAK,KAAK,CAAC,CAAC;AAAA,EAC3C,CAAC;AACD,SAAO,QAAQ,SAAU,GAAG;AACxB,QAAI,EAAE,WAAW,EAAG,MAAK,GAAG,wBAAwB;AACpD,QAAI,MAAM,CAAC,EAAG;AACd,QAAI,QAAQ,GAAG,MAAM,IAAI,EAAG,MAAK,GAAG,oCAAoC;AACxE,QAAI,CAAC,EAAE,UAAU;AAAE,WAAK,GAAG,uCAAuC;AAAG;AAAA,IAAO;AAC5E,eAAY,EAAE,YAAa,EAAE,UAAU,SAAS;AAEhD,QAAIC,QAAO,EAAE,SAAS,gBAAgB,CAAC,EAAE,QAAQ;AACjD,IAAAA,MAAK,QAAQ,SAAU,KAAK;AACxB,UAAI,QAAQ,KAAKA,KAAI,EAAG,MAAK,KAAK,4BAA4B;AAAA,IAClE,CAAC;AAAA,EACL,CAAC;AACD,MAAI,aAAa,CAAC;AAClB,UAAQ,QAAQ,SAAO;AACnB,QAAI,OAAO;AACX,WAAO,QAAQ,UAAQ;AACnB,UAAI,KAAK,aAAa,IAAK,QAAO;AAClC,UAAI,CAAC,KAAK,SAAU;AAEpB,UAAIA,QAAO,KAAK,SAAS,gBAAgB,CAAC,KAAK,QAAQ;AACvD,UAAIA,MAAK,SAAS,GAAG,EAAG,QAAO;AAAA,IACnC,CAAC;AACD,QAAI,CAAC,KAAM,YAAW,KAAK,IAAI,IAAI;AAAA,EACvC,CAAC;AACD,MAAI,WAAW,QAAQ;AACnB,YAAQ,KAAK,kCAAkC,WAAW,KAAK,IAAI,CAAC;AAAA,EACxE;AACA,OAAK,QAAQ,SAAU,GAAG;AACtB,QAAI,QAAQ,GAAG,MAAM,EAAG,MAAK,GAAG,kCAAkC;AAAA,EACtE,CAAC;AACD,OAAK,QAAQ,SAAU,GAAG;AACtB,QAAI,QAAQ,GAAG,MAAM,EAAG,MAAK,GAAG,gCAAgC;AAAA,EACpE,CAAC;AACD,MAAI,YAAY,KAAK,MAAM,KAAK,KAAK,SAAS,OAAO,IAAI;AACzD,UAAQ;AAAA,IAAI;AAAA,IAAoB,KAAK;AAAA,IAAQ;AAAA,IAAc,KAAK;AAAA,IAC5D;AAAA,IAAiB;AAAA,IACjB;AAAA,IAA8B;AAAA,EAAS;AAE3C,WAAS,KAAK,KAAK,KAAK;AAAE,YAAQ,KAAK,IAAI,OAAO,UAAU,GAAG;AAAA,EAAE;AAEjE,WAAS,MAAM,MAAM;AAAE,WAAQ,KAAK,WAAW,EAAE,WAAW;AAAA,EAAG;AAE/D,WAAS,QAAQ,KAAK,OAAO,OAAO;AAChC,QAAI,CAAC,IAAK,QAAO;AACjB,QAAI,MAAM,SAAS,GAAG,EAAG,QAAO;AAChC,QAAI,SAAS,MAAM,SAAS,GAAG,EAAG,QAAO;AACzC,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAIA,UAAU,UAAU,kBAAkB,WAAY;AAC9C,MAAI,KAAK,CAAC;AACV,OAAK,MAAM,OAAO,QAAQ,OAAK;AAC3B,QAAI,IAAI,EAAE,QAAQ;AAClB,QAAI,EAAE,QAAQ,UAAU,GAAG;AAC3B,QAAI,EAAE,QAAQ,SAAS,GAAG;AAC1B,QAAI,EAAE,QAAQ,mCAAmC,eAAe;AAChE,QAAI,EAAE,QAAQ,mBAAmB,eAAe;AAChD,OAAG,CAAC,IAAI,GAAG,CAAC,KAAK;AACjB,OAAG,CAAC;AAAA,EACR,CAAC;AACD,WAAS,KAAK,GAAI,SAAQ,IAAI,SAAS,GAAG,CAAC,IAAI,WAAW,OAAO,GAAG,CAAC,IAAI,CAAC;AAC9E;AAQA,IAAIJ,gBAAgBF,WAChB,gBAAgB,KAAK,kBAAkB,IAAI,MAAM;AAAE;AAIvD,IAAI,WAAW,WAAY;AAAE;AAE7B,SAAS,WAAW;AAChB,MAAIO,OAAM,SAAS,cAAc,KAAK;AACtC,EAAAA,KAAI,KAAK;AACT,EAAAA,KAAI,MAAM,WAAW;AACrB,EAAAA,KAAI,MAAM,MAAM;AAChB,EAAAA,KAAI,MAAM,QAAQ;AAClB,EAAAA,KAAI,MAAM,SAAS;AACnB,EAAAA,KAAI,MAAM,QAAQ;AAClB,EAAAA,KAAI,MAAM,kBAAkB;AAC5B,EAAAA,KAAI,MAAM,OAAO;AACjB,EAAAA,KAAI,MAAM,YAAY;AACtB,EAAAA,KAAI,MAAM,WAAW;AACrB,EAAAA,KAAI,MAAM,SAAS;AACnB,WAAS,KAAK,YAAYA,IAAG;AAC7B,MAAI,QAAQ;AACZ,MAAI,KAAK;AACT,MAAI,UAAU;AACd,MAAI,QAAQ,YAAY,IAAI;AAC5B,MAAI,OAAO;AACX,aAAW,WAAY;AACnB;AACA,QAAI,KAAK,YAAY,IAAI;AACzB,QAAI,KAAK,OAAO,QAAS,WAAU,KAAK;AACxC,WAAO;AACP,QAAI,KAAK,QAAQ,MAAO;AACxB,QAAI,MAAM,KAAK,MAAM,MAAM,KAAK,SAAS,GAAI;AAC7C,QAAIC,OAAM,KAAK,MAAM,IAAI,UAAU,GAAI;AACvC,IAAAD,KAAI,YAAY,MAAM,SAASC;AAC/B,SAAK;AACL,cAAU;AACV,YAAQ;AAAA,EACZ;AACJ;;;AErmBA,IAAAC,mBAAiB;AACjB,IAAAC,2BAAkB;;;ACDlB,IAAAC,mBAAiB;AAEjB,IAAI,QAAQ;AASL,IAAM,YAAN,MAAgB;AAAA,EACnB,YAAY,OAAO,MAAM,UAAU,aAAa,UAAU,WAAW,UAAU;AAC3E,SAAK,OAAO,IAAI,KAAK,MAAM,MAAM,MAAM,GAAG;AAC1C,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,cAAc;AACnB,SAAK,oBAAoB;AACzB,SAAK,YAAY;AACjB,SAAK,WAAW,CAAC,CAAC;AAClB,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,SAAS;AAGd,SAAK,WAAW,iBAAAC,QAAK,OAAO;AAC5B,SAAK,UAAU,CAAC,GAAG,GAAG,CAAC;AACvB,SAAK,UAAU;AAIf,SAAK,gBAAgB;AAErB,SAAK,UAAU,iBAAAA,QAAK,OAAO;AAE3B,SAAK,YAAY,iBAAAA,QAAK,OAAO;AAE7B,SAAK,mBAAmB,KAAK;AAAA,EACjC;AAAA,EAEA,YAAY,GAAG;AACX,gBAAY,CAAC;AACb,qBAAAA,QAAK,SAAS,GAAG,GAAG,KAAK,KAAK,IAAI;AAClC,SAAK,KAAK,UAAU,CAAC;AACrB,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,cAAc;AACV,WAAO,iBAAAA,QAAK,MAAM,KAAK,KAAK,IAAI;AAAA,EACpC;AAAA,EACA,WAAW,GAAG;AACV,gBAAY,CAAC;AACb,qBAAAA,QAAK,IAAI,KAAK,SAAS,KAAK,SAAS,CAAC;AACtC,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,aAAa,GAAG;AACZ,gBAAY,CAAC;AACb,qBAAAA,QAAK,IAAI,KAAK,WAAW,KAAK,WAAW,CAAC;AAC1C,SAAK,YAAY;AAAA,EACrB;AAAA;AAAA,EAGA,cAAc;AACV,SAAK,mBAAmB,KAAK;AAAA,EACjC;AAAA;AAAA,EAKA,UAAU;AAAE,WAAO,KAAK,QAAQ,CAAC;AAAA,EAAE;AAAA,EACnC,UAAU;AAAE,WAAO,KAAK,QAAQ,CAAC;AAAA,EAAE;AAAA,EACnC,UAAU;AAAE,WAAO,KAAK,QAAQ,CAAC;AAAA,EAAE;AACvC;AAKA,IAAI,cAAc,CAAC,MAAM;AAAE;AAC3B,IAAI,MAAO,eAAc,CAAC,MAAM;AAC5B,MAAI,MAAM,iBAAAA,QAAK,OAAO,CAAC,CAAC,EAAG,OAAM,sBAAsB;AAC3D;;;ADxEA,IAAIC,SAAQ;AAGL,SAASC,kBAAiB;AAC7B,OAAK,UAAU;AACf,OAAK,YAAY;AACjB,OAAK,eAAe;AACpB,OAAK,UAAU,CAAC,GAAG,KAAK,CAAC;AACzB,OAAK,mBAAmB;AAC5B;AA8BO,SAAS,QAAQ,MAAM,WAAW,WAAW;AAChD,SAAO,OAAO,OAAO,IAAIA,gBAAe,GAAG,IAAI;AAE/C,OAAK,UAAU,KAAK,WAAW,CAAC,GAAG,KAAK,CAAC;AACzC,OAAK,UAAU,KAAK,WAAW;AAC/B,OAAK,eAAe,KAAK,gBAAgB;AACzC,OAAK,YAAY,KAAK,aAAa;AACnC,OAAK,mBAAmB,KAAK;AAC7B,OAAK,SAAS,CAAC;AAGf,OAAK,YAAY;AACjB,OAAK,YAAY;AACrB;AAOA,QAAQ,UAAU,UAAU,SAAU,OAAO,MAAM,UAC/C,aAAa,UAAU,WAAW;AAClC,UAAQ,SAAS,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAC9C,MAAI,OAAO,QAAQ,YAAa,QAAO;AACvC,MAAI,OAAO,YAAY,YAAa,YAAW;AAC/C,MAAI,OAAO,eAAe,YAAa,eAAc;AACrD,MAAI,OAAO,YAAY,YAAa,YAAW;AAC/C,MAAI,IAAI,IAAI,UAAU,OAAO,MAAM,UAAU,aAAa,UAAU,SAAS;AAC7E,OAAK,OAAO,KAAK,CAAC;AAClB,SAAO;AACX;AAGA,QAAQ,UAAU,aAAa,SAAU,GAAG;AACxC,MAAI,IAAI,KAAK,OAAO,QAAQ,CAAC;AAC7B,MAAI,IAAI,EAAG,QAAO;AAClB,OAAK,OAAO,OAAO,GAAG,CAAC;AACvB,IAAE,OAAO,EAAE,YAAY;AAC3B;AASA,IAAI,IAAI,iBAAAC,QAAK,OAAO;AACpB,IAAI,KAAK,iBAAAA,QAAK,OAAO;AACrB,IAAI,KAAK,iBAAAA,QAAK,OAAO;AACrB,IAAI,UAAU,iBAAAA,QAAK,OAAO;AAC1B,IAAI,aAAa,iBAAAA,QAAK,OAAO;AAI7B,QAAQ,UAAU,OAAO,SAAU,IAAI;AAEnC,OAAK,KAAK;AACV,MAAI,YAAYC,QAAO,GAAG,iBAAAD,QAAK,cAAc,KAAK,OAAO,CAAC;AAC1D,OAAK,OAAO,QAAQ,OAAK,YAAY,MAAM,GAAG,IAAI,SAAS,CAAC;AAChE;AAQA,SAAS,YAAY,MAAM,GAAG,IAAI,WAAW;AACzC,mBAAAA,QAAK,KAAK,YAAY,EAAE,OAAO;AAG/B,MAAI,EAAE,QAAQ,GAAG;AACb,qBAAAA,QAAK,IAAI,EAAE,UAAU,GAAG,GAAG,CAAC;AAC5B,qBAAAA,QAAK,IAAI,EAAE,SAAS,GAAG,GAAG,CAAC;AAC3B,qBAAAA,QAAK,IAAI,EAAE,WAAW,GAAG,GAAG,CAAC;AAC7B;AAAA,EACJ;AAGA,MAAI,cAAc,aAAc,EAAE,sBAAsB;AACxD,MAAI,WAAW,MAAM,GAAG,IAAI,WAAW,EAAG;AAC1C,IAAE;AAGF,mBAAiB,MAAM,CAAC;AAGxB,EAAAE,aAAY,EAAE,OAAO;AACrB,EAAAA,aAAY,EAAE,SAAS;AACvB,EAAAA,aAAY,EAAE,QAAQ;AACtB,EAAAA,aAAY,EAAE,OAAO;AAKrB,mBAAAF,QAAK,MAAM,GAAG,EAAE,SAAS,IAAI,EAAE,IAAI;AACnC,mBAAAA,QAAK,YAAY,GAAG,GAAG,KAAK,SAAS,EAAE,iBAAiB;AAIxD,mBAAAA,QAAK,MAAM,IAAI,EAAE,WAAW,IAAI,EAAE,IAAI;AACtC,mBAAAA,QAAK,YAAY,IAAI,IAAI,GAAG,EAAE;AAC9B,mBAAAA,QAAK,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE;AAGnC,MAAI,EAAE,UAAU;AACZ,wBAAoB,GAAG,GAAG,EAAE;AAC5B,wBAAoB,GAAG,GAAG,EAAE;AAC5B,wBAAoB,GAAG,GAAG,EAAE;AAAA,EAChC;AAIA,MAAI,OAAQ,EAAE,WAAW,IAAK,EAAE,UAAU,KAAK;AAC/C,MAAI,EAAE,SAAS;AACX,WAAQ,EAAE,aAAa,IAAK,EAAE,YAAY,KAAK;AAC/C,YAAQ,KAAK,IAAI,EAAE,iBAAiB;AAAA,EACxC;AACA,MAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,EAAE,MAAM,CAAC;AAC7C,mBAAAA,QAAK,MAAM,EAAE,UAAU,EAAE,UAAU,IAAI;AAGvC,mBAAAA,QAAK,MAAM,IAAI,EAAE,UAAU,EAAE;AAG7B,mBAAAA,QAAK,IAAI,EAAE,SAAS,GAAG,GAAG,CAAC;AAC3B,mBAAAA,QAAK,IAAI,EAAE,WAAW,GAAG,GAAG,CAAC;AAG7B,MAAI,EAAE,UAAU;AACZ,cAAU,QAAQ,EAAE,IAAI;AAAA,EAC5B;AAGA,oBAAkB,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO;AAG7C,MAAI,EAAE,UAAU;AACZ,oBAAgB,MAAM,GAAG,QAAQ,EAAE;AAAA,EACvC;AAGA,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,YAAQ,CAAC,IAAI;AACb,QAAI,EAAE,QAAQ,CAAC,GAAG;AAEd,UAAI,CAAC,WAAW,CAAC,EAAG,SAAQ,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC;AAC9C,QAAE,SAAS,CAAC,IAAI;AAAA,IACpB;AAAA,EACJ;AACA,MAAI,MAAM,iBAAAA,QAAK,OAAO,OAAO;AAC7B,MAAI,MAAM,MAAM;AAIZ,qBAAAA,QAAK,MAAM,SAAS,SAAS,EAAE,IAAI;AACnC,QAAI,EAAE,UAAW,GAAE,UAAU,OAAO;AAGpC,QAAI,EAAE,cAAc,KAAK,MAAM,KAAK,kBAAkB;AAClD,uBAAAA,QAAK,MAAM,SAAS,SAAS,EAAE,WAAW;AAC1C,QAAE,aAAa,OAAO;AAAA,IAC1B;AAAA,EACJ;AAIA,MAAI,MAAM,iBAAAA,QAAK,cAAc,EAAE,QAAQ;AACvC,MAAI,MAAM,KAAM,GAAE,YAAY;AAClC;AAaA,SAAS,iBAAiB,MAAM,MAAM;AAGlC,MAAI,MAAM,KAAK;AACf,MAAI,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC;AAC/B,MAAI,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC;AAC/B,MAAI,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC;AAC/B,MAAI,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC;AAE9B,MAAI,CAAC,KAAK,UAAU,IAAI,IAAI,EAAE,GAAG;AAC7B,SAAK,UAAU;AACf,SAAK,eAAe;AACpB;AAAA,EACJ;AAGA,MAAI,YAAY;AAChB,MAAI,KAAK,KAAK;AACd,SAAO,MAAM,MAAM,KAAK,UAAU,IAAI,IAAI,EAAE,GAAG;AAC3C;AACA;AAAA,EACJ;AACA,MAAI,aAAa,KAAK;AACtB,MAAI,gBAAgB,aAAa,IAAI,KAAK,CAAC;AAC3C,MAAI,eAAe,gBAAgB,IAAI,IAAI,CAAC;AAC5C,MAAI,eAAe,EAAG,gBAAe;AACrC,MAAI,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AAC7C,MAAI,YAAY,MAAM;AAEtB,MAAI,IAAI;AACR,mBAAAA,QAAK,MAAM,GAAG,KAAK,SAAS,CAAC,KAAK,eAAe,SAAS;AAC1D,OAAK,WAAW,CAAC;AAEjB,OAAK,UAAU;AACf,OAAK,eAAe;AACxB;AAEA,IAAI,YAAY,iBAAAA,QAAK,OAAO;AAW5B,SAAS,oBAAoB,MAAM,MAAM,MAAM;AAE3C,MAAI,UAAU,KAAK,QAAQ,IAAI;AAC/B,MAAI,UAAU,KAAK,IAAI;AACvB,MAAI,YAAY,EAAG;AACnB,MAAI,UAAU,WAAW,EAAG;AAG5B,mBAAAA,QAAK,KAAK,YAAY,KAAK,QAAQ;AACnC,aAAW,IAAI,IAAI;AACnB,MAAI,QAAQ,iBAAAA,QAAK,OAAO,UAAU;AAClC,MAAIC,QAAO,OAAO,CAAC,EAAG;AAWtB,MAAI,QAAQ,KAAK,IAAI,KAAK,WAAW,OAAO;AAG5C,MAAI,SAAU,QAAQ,SAAU,QAAQ,SAAS,QAAQ;AACzD,OAAK,UAAU,OAAO,KAAK,CAAC,KAAK;AACjC,OAAK,UAAU,OAAO,KAAK,CAAC,KAAK;AACrC;AACA,IAAI,aAAa,iBAAAD,QAAK,OAAO;AAY7B,SAAS,kBAAkB,MAAM,KAAK,UAAU,SAAS;AACrD,mBAAAA,QAAK,IAAI,SAAS,GAAG,GAAG,CAAC;AACzB,aAAO,yBAAAG,SAAM,KAAK,WAAW,KAAK,UAAU,SAAUC,OAAM,MAAM,KAAK,KAAK;AACxE,YAAQ,IAAI,IAAI;AAChB,QAAI,IAAI,IAAI;AAAA,EAChB,CAAC;AACL;AAUA,IAAI,SAAS,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,IAAI,aAAa,iBAAAJ,QAAK,OAAO;AAC7B,IAAI,YAAY,iBAAAA,QAAK,OAAO;AAC5B,IAAI,QAAQ,iBAAAA,QAAK,OAAO;AACxB,IAAI,WAAW,iBAAAA,QAAK,OAAO;AAE3B,SAAS,gBAAgB,MAAM,GAAG,QAAQK,KAAI;AAC1C,MAAI,EAAE,QAAQ,CAAC,KAAK,KAAK,CAAC,EAAE,QAAS;AAGrC,MAAI,WAAY,EAAE,QAAQ,CAAC,MAAM;AACjC,MAAI,WAAY,EAAE,QAAQ,CAAC,MAAM;AACjC,MAAI,EAAE,YAAY,UAAW;AAG7B,MAAI,QAAQ,KAAK,IAAIA,IAAG,CAAC,IAAIA,IAAG,CAAC,CAAC;AAClC,MAAI,SAAS;AACb,MAAI,CAAC,YAAY,QAAQ,OAAQ;AACjC,MAAI,CAAC,YAAY,QAAQ,IAAI,OAAQ;AAGrC,mBAAAL,QAAK,IAAI,WAAW,OAAO,MAAMK,GAAE;AAGnC,MAAI,YAAY,KAAK;AACrB,+BAAAF,SAAM,WAAW,QAAQE,KAAI,SAAUD,OAAM,MAAM,KAAK,KAAK;AACzD,QAAI,SAAS,EAAG,KAAI,IAAI,IAAI;AAAA,QACvB,QAAO;AAAA,EAChB,CAAC;AAED,MAAI,IAAI,EAAE,KAAK,KAAK,CAAC;AACrB,MAAI,QAAQ,KAAK,MAAM,IAAI,KAAK,IAAI;AACpC,mBAAAJ,QAAK,IAAI,OAAO,GAAG,OAAO,CAAC;AAC3B,MAAI,WAAW;AAEf,+BAAAG,SAAM,WAAW,QAAQ,OAAO,SAAUC,OAAM,MAAM,KAAK,KAAK;AAC5D,eAAW;AACX,WAAO;AAAA,EACX,CAAC;AACD,MAAI,SAAU;AAGd,mBAAAJ,QAAK,SAAS,UAAU,WAAW,OAAO,IAAI;AAC9C,WAAS,CAAC,IAAI;AACd,oBAAkB,MAAM,QAAQ,UAAU,UAAU;AAGpD,MAAI,YAAY,CAACC,QAAO,OAAO,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,EAAG;AACvD,MAAI,YAAY,CAACA,QAAO,OAAO,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,EAAG;AAGvD,YAAU,EAAE,MAAM,MAAM;AACxB,IAAE,QAAQ,CAAC,IAAI,WAAW,CAAC;AAC3B,IAAE,QAAQ,CAAC,IAAI,WAAW,CAAC;AAC3B,MAAI,EAAE,OAAQ,GAAE,OAAO;AAC3B;AAUA,SAAS,WAAW,MAAM,MAAM,IAAI,WAAW;AAC3C,MAAI,KAAK,mBAAmB,EAAG,QAAO;AAEtC,MAAI,UAAW,QAAO;AAItB,MAAI,YAAY;AAChB,MAAI,QAAQ,MAAM,KAAK,KAAK,KAAK;AACjC,mBAAAD,QAAK,MAAM,UAAU,KAAK,SAAS,KAAK;AACxC,+BAAAG,SAAM,KAAK,WAAW,KAAK,MAAM,UAAU,WAAY;AACnD,gBAAY;AACZ,WAAO;AAAA,EACX,GAAG,IAAI;AACP,SAAO;AACX;AACA,IAAI,WAAW,iBAAAH,QAAK,OAAO;AAM3B,SAASC,QAAOK,IAAG,GAAG;AAAE,SAAO,KAAK,IAAIA,KAAI,CAAC,IAAI;AAAK;AAEtD,SAAS,UAAU,KAAK,KAAK;AACzB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,QAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC;AACxB,QAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AACtB,QAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AAAA,EAC1B;AACJ;AAIA,IAAIJ,eAAc,SAAU,GAAG;AAAE;AACjC,IAAIJ,OAAO,CAAAI,eAAc,SAAU,GAAG;AAClC,MAAI,MAAM,iBAAAF,QAAK,OAAO,CAAC,CAAC,EAAG,OAAM,sBAAsB;AAC3D;;;AEhbA,IAAIO,kBAAiB;AAAA,EACjB,SAAS,CAAC,GAAG,KAAK,CAAC;AAAA,EACnB,SAAS;AACb;AAwBO,IAAMC,WAAN,cAAsB,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtC,YAAY,KAAK,MAAM;AACnB,WAAO,OAAO,OAAO,CAAC,GAAGD,iBAAgB,IAAI;AAC7C,QAAI,QAAQ,IAAI;AAChB,QAAI,cAAc,IAAI,SAAS;AAC/B,QAAI,cAAc,IAAI,SAAS;AAG/B,QAAI,SAAS,IAAI;AAEjB,QAAI,cAAc,CAAC,GAAG,GAAG,MAAM;AAC3B,UAAI,KAAK,MAAM,WAAW,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC;AACrE,aAAO,YAAY,EAAE;AAAA,IACzB;AACA,QAAI,gBAAgB,CAAC,GAAG,GAAG,MAAM;AAC7B,UAAI,KAAK,MAAM,WAAW,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC;AACrE,aAAO,YAAY,EAAE;AAAA,IACzB;AAEA,UAAM,MAAM,aAAa,aAAa;AAAA,EAC1C;AAEJ;;;AC3DA,IAAAE,iBAAyB;;;ACCzB,IAAAC,kBAAoB;AAwBb,SAAS,MAAM,KAAK,WAAW,IAAI,IAAI,IAAI,MAAM,WAAW,cAAc,IAAI;AACjF,OAAK,MAAM;AACX,OAAK,aAAa;AAGlB,OAAK,WAAW;AAGhB,OAAK,YAAY;AACjB,OAAK,SAAS;AACd,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,OAAO;AACZ,OAAK,IAAI,KAAK;AACd,OAAK,IAAI,KAAK;AACd,OAAK,IAAI,KAAK;AACd,OAAK,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAGlC,OAAK,gBAAgB;AACrB,OAAK,gBAAgB;AAGrB,OAAK,iBAAiB,CAAC;AACvB,MAAI,eAAe,UAAU,IAAI;AACjC,MAAI,cAAc,UAAU,IAAI;AAEhC,OAAK,UAAU;AACf,OAAK,WAAW;AAEhB,OAAK,mBAAmB,MAAM,IAAI,EAAE,KAAK,EAAE;AAC3C,MAAI,eAAe,GAAG;AAClB,SAAK,OAAO,KAAK,KAAK,aAAa,GAAG,KAAK,OAAO,IAAI;AACtD,SAAK,iBAAiB,KAAK,WAAW;AAAA,EAC1C;AAGA,MAAI,OAAO,MAAM,KAAK,MAAM,EAAE,GAAG,MAAM,IAAI;AAC3C,OAAK,iBAAa,gBAAAC,SAAQ,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC;AACrD,OAAK,WAAW,IAAI,GAAG,GAAG,GAAG,IAAI;AACjC,OAAK,iBAAiB;AACtB,OAAK,eAAe;AAIpB,OAAK,oBAAoB,IAAI,cAAc;AAG3C,gBAAc,IAAI;AACtB;AAIA,MAAM,oBAAoB,SAAU,MAAM;AACtC,MAAI,MAAM,IAAI,YAAY,OAAO,OAAO,IAAI;AAC5C,aAAO,gBAAAA,SAAQ,KAAK,CAAC,MAAM,MAAM,IAAI,CAAC;AAC1C;AAEA,MAAM,UAAU,oBAAoB,SAAU,WAAW,cAAc,IAAI;AAEvE,uBAAqB,MAAM,UAAU;AACrC,OAAK,IAAI,cAAc,aAAa,IAAI;AACxC,OAAK,IAAI,eAAe,aAAa,IAAI;AACzC,OAAK,SAAS;AACd,OAAK,gBAAgB;AACrB,OAAK,gBAAgB;AACrB,OAAK,kBAAkB,MAAM;AAC7B,OAAK,IAAI,cAAc,UAAU,IAAI;AACrC,OAAK,IAAI,eAAe,UAAU,IAAI;AAEtC,MAAI,eAAe,GAAG;AAClB,SAAK,iBAAiB,KAAK,WAAW;AAAA,EAC1C,OAAO;AACH,SAAK,iBAAiB,KAAK,EAAE;AAAA,EACjC;AAEA,gBAAc,IAAI;AACtB;AAiBA,MAAM,UAAU,MAAM,SAAU,GAAG,GAAG,GAAG;AACrC,SAAO,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC;AAClC;AAEA,MAAM,UAAU,gBAAgB,SAAU,GAAG,GAAG,GAAG;AAC/C,MAAI,cAAc,KAAK,IAAI,SAAS;AACpC,SAAO,YAAY,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC,CAAC;AAC/C;AAEA,MAAM,UAAU,MAAM,SAAU,GAAG,GAAG,GAAG,OAAO;AAC5C,MAAI,QAAQ,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC;AACnC,MAAI,UAAU,MAAO;AAGrB,OAAK,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK;AAG9B,MAAI,cAAc,KAAK,IAAI,SAAS;AACpC,MAAI,eAAe,KAAK,IAAI,SAAS;AACrC,MAAI,eAAe,KAAK,IAAI,SAAS;AACrC,MAAI,gBAAgB,KAAK,IAAI,SAAS;AAGtC,MAAI,CAAC,aAAa,KAAK,EAAG,MAAK,UAAU;AACzC,MAAI,UAAU,EAAG,MAAK,WAAW;AACjC,MAAI,KAAK,iBAAiB,CAAC,MAAM,MAAO,MAAK,iBAAiB,CAAC,IAAI;AAGnE,MAAI,OAAO,cAAc,KAAK;AAC9B,MAAI,OAAO,cAAc,KAAK;AAC9B,MAAI,KAAM,kBAAiB,MAAM,MAAM,WAAW,GAAG,GAAG,CAAC;AACzD,MAAI,MAAM;AACN,qBAAiB,MAAM,MAAM,SAAS,GAAG,GAAG,CAAC;AAC7C,SAAK,kBAAkB,IAAI,GAAG,GAAG,CAAC;AAAA,EACtC,OAAO;AACH,SAAK,kBAAkB,OAAO,GAAG,GAAG,CAAC;AAAA,EACzC;AAGA,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,SAAS,aAAa,KAAK;AAC/B,MAAI,SAAS,aAAa,KAAK;AAC/B,MAAI,OAAQ,WAAU,eAAe,MAAM,GAAG,GAAG,GAAG,CAAC;AACrD,MAAI,OAAQ,WAAU,eAAe,MAAM,OAAO,GAAG,GAAG,CAAC;AAGzD,MAAI,kBAAmB,YAAY,KAAK,MAAM,YAAY,KAAK;AAC/D,MAAI,iBAAkB,aAAa,KAAK,MAAM,aAAa,KAAK;AAChE,MAAI,aAAa,CAAC,UAAW,UAAU;AACvC,MAAI,aAAa,CAAC,UAAW,UAAU;AAEvC,MAAI,UAAU,OAAQ,MAAK,gBAAgB;AAC3C,MAAI,mBAAmB,kBAAkB,cAAc,YAAY;AAC/D,SAAK,gBAAgB;AAAA,EACzB;AAEA,MAAI,KAAK,iBAAiB,KAAK,eAAe;AAC1C,SAAK,IAAI,MAAM,qBAAqB,IAAI;AAAA,EAC5C;AAGA,MAAI,mBAAmB,gBAAgB;AACnC,QAAI,OAAO,KAAK,OAAO;AACvB,QAAI,OAAQ,MAAM,IAAK,KAAK;AAC5B,QAAI,OAAQ,MAAM,IAAK,KAAK;AAC5B,QAAI,OAAQ,MAAM,IAAK,KAAK;AAC5B,QAAI,OAAQ,MAAM,OAAQ,IAAI;AAC9B,QAAI,OAAQ,MAAM,OAAQ,IAAI;AAC9B,QAAI,OAAQ,MAAM,OAAQ,IAAI;AAC9B,aAAS,KAAK,MAAM,MAAM,MAAM,MAAM;AAClC,eAAS,KAAK,MAAM,MAAM,MAAM,MAAM;AAClC,iBAAS,KAAK,MAAM,MAAM,MAAM,MAAM;AAClC,eAAK,KAAK,KAAK,QAAQ,EAAG;AAC1B,cAAI,MAAM,KAAK,WAAW,IAAI,IAAI,IAAI,EAAE;AACxC,cAAI,CAAC,IAAK;AACV,cAAI,gBAAgB;AACpB,eAAK,IAAI,MAAM,qBAAqB,GAAG;AAAA,QAC3C;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAKA,SAAS,iBAAiB,OAAO,UAAU,MAAM,GAAG,GAAG,GAAG;AACtD,MAAI,UAAU,SAAS,IAAI;AAC3B,MAAI,CAAC,QAAS;AACd,UAAQ,MAAM,IAAI,GAAG,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC;AACjD;AAIA,MAAM,UAAU,eAAe,WAAY;AACvC,MAAI,KAAK,eAAe;AACpB,SAAK,IAAI,eAAe,UAAU,IAAI;AACtC,SAAK;AACL,SAAK,gBAAgB;AAAA,EACzB;AACA,MAAI,KAAK,eAAe;AACpB,SAAK,IAAI,cAAc,kBAAkB;AACzC,SAAK,gBAAgB;AAAA,EACzB;AACJ;AAqBA,SAAS,cAAc,OAAO;AAC1B,MAAI,SAAS,MAAM;AACnB,MAAI,OAAO,OAAO;AAClB,MAAIC,OAAM,OAAO,MAAM,CAAC;AACxB,MAAI,eAAe,MAAM,IAAI,SAAS;AACtC,MAAI,gBAAgB,MAAM,IAAI,SAAS;AACvC,MAAI,eAAe,MAAM,IAAI,SAAS;AACtC,MAAI,cAAc,MAAM,IAAI,SAAS;AACrC,MAAI,YAAY,MAAM,IAAI;AAG1B,MAAI,cAAc;AAClB,MAAI,WAAW;AAGf,WAAS,IAAI,GAAG,IAAIA,MAAK,EAAE,GAAG;AAG1B,QAAI,UAAU,MAAM,iBAAiB,CAAC;AACtC,QAAI,WAAW,KAAK,CAAC,UAAU,OAAO,KAAK,CAAC,cAAc,OAAO,GAAG;AAChE,UAAI,CAAC,aAAa,OAAO,EAAG,eAAc;AAC1C,UAAI,YAAY,EAAG,YAAW;AAC9B;AAAA,IACJ;AAEA,QAAI,aAAa,OAAO,IAAI,GAAG,GAAG,CAAC;AAEnC,aAAS,IAAI,GAAG,IAAIA,MAAK,EAAE,GAAG;AAC1B,UAAI,QAAQ,OAAO,MAAM,GAAG,GAAG,CAAC;AAChC,eAAS,IAAI,GAAG,IAAIA,MAAK,EAAE,GAAG,EAAE,OAAO;AACnC,YAAI,KAAK,KAAK,KAAK;AAGnB,YAAI,cAAc,KAAK,OAAO,WAAY,cAAa;AAGvD,YAAI,OAAO,GAAG;AACV,wBAAc;AACd;AAAA,QACJ;AAEA,YAAI,YAAY,EAAE,GAAG;AACjB,qBAAW;AACX;AAAA,QACJ;AAEA,sBAAc,eAAe,aAAa,EAAE;AAC5C,mBAAW;AACX,YAAI,aAAa,EAAE,GAAG;AAClB,oBAAU,eAAe,OAAO,IAAI,GAAG,GAAG,CAAC;AAC3C,gBAAM,gBAAgB;AAAA,QAC1B;AACA,YAAI,WAAW,cAAc,EAAE;AAC/B,YAAI,UAAU;AACV,gBAAM,kBAAkB,IAAI,GAAG,GAAG,CAAC;AACnC,2BAAiB,OAAO,UAAU,UAAU,GAAG,GAAG,CAAC;AAAA,QACvD;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,cAAc,EAAG,OAAM,iBAAiB,CAAC,IAAI;AAAA,EACrD;AAEA,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,QAAM,gBAAgB,CAAC,MAAM;AACjC;AAaA,MAAM,UAAU,UAAU,WAAY;AAElC,uBAAqB,MAAM,UAAU;AACrC,OAAK,kBAAkB,MAAM;AAG7B,OAAK,IAAI,cAAc,aAAa,IAAI;AACxC,OAAK,IAAI,eAAe,aAAa,IAAI;AAGzC,OAAK,OAAO,OAAO;AACnB,OAAK,SAAS;AACd,OAAK,WAAW,OAAO;AACvB,OAAK,aAAa;AAElB,OAAK,aAAa;AACtB;AAKA,SAAS,qBAAqB,OAAO,MAAM;AACvC,MAAI,SAAS,MAAM;AACnB,MAAI,gBAAgB,MAAM,IAAI,SAAS;AACvC,QAAM,kBAAkB,IAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM;AAC/C,QAAI,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC;AAC3B,qBAAiB,OAAO,cAAc,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC;AAAA,EAC5D,CAAC;AACL;;;AD5VA,IAAIC,iBAAgB;AACpB,IAAI,uBAAuB;AAO3B,IAAIC,kBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,kBAAkB,CAAC,GAAG,CAAC;AAAA;AAAA,EACvB,qBAAqB,CAAC,GAAG,CAAC;AAAA;AAAA,EAC1B,qBAAqB;AAAA,EACrB,6BAA6B;AACjC;AA2BO,IAAM,QAAN,cAAoB,eAAAC,QAAa;AAAA;AAAA,EAGpC,YAAY,KAAK,MAAM;AACnB,UAAM;AACN,WAAO,OAAO,OAAO,CAAC,GAAGD,iBAAgB,IAAI;AAE7C,SAAK,MAAM;AAGX,SAAK,oBAAoB;AAGzB,SAAK,QAAQ;AAOb,SAAK,8BAA8B,CAAC,CAAC,KAAK;AAS1C,SAAK,qBAAqB;AAM1B,SAAK,qBAAqB;AAG1B,SAAK,sBAAsB,CAAC,CAAC,KAAK;AAKlC,SAAK,2BAA2B;AAKhC,SAAK,0BAA0B;AAK/B,SAAK,uBAAuB;AAK5B,SAAK,yBAAyB;AAO9B,SAAK,aAAa,KAAK;AAEvB,SAAK,oBAAoB,CAAC,GAAG,CAAC;AAE9B,SAAK,uBAAuB,CAAC,GAAG,CAAC;AAEjC,SAAK,iBAAiB;AAEtB,SAAK,iBAAiB;AAEtB,SAAK,iBAAiB;AAEtB,SAAK,uBAAuB;AAE5B,SAAK,sBAAsB;AAE3B,SAAK,iBAAiB;AAEtB,SAAK,sBAAsB;AAM3B,SAAK,eAAe,IAAI,cAAc;AAGtC,SAAK,mBAAmB,IAAI,cAAc;AAE1C,SAAK,qBAAqB,IAAI,cAAc;AAE5C,SAAK,kBAAkB,IAAI,cAAc;AAGzC,SAAK,iBAAiB,IAAI,cAAc;AAExC,SAAK,gBAAgB,IAAI,cAAc;AAEvC,SAAK,qBAAqB,IAAI,cAAc;AAK5C,SAAK,oBAAoB,IAAI,cAAc;AAG3C,SAAK,qBAAqB,KAAK,kBAAkB,KAAK,mBAAmB;AAMzE,SAAK,WAAW,IAAI,aAAa;AAGjC,QAAI,KAAK,KAAK;AAEd,SAAK,wBAAwB;AAE7B,SAAK,uBAAuB;AAG5B,QAAI,cAAe,KAAK,KAAK,OAAO;AACpC,QAAI,YAAY;AAEZ,WAAK,kBAAkB,KAAK,KAAK,EAAE,IAAI;AAEvC,WAAK,aAAc,KAAK,IAAK;AAC7B,WAAK,wBAAwB;AAC7B,WAAK,uBAAuB;AAAA,IAChC;AAAA,EACJ;AACJ;AAkBA,MAAM,UAAU,aAAa,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACxD,MAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AACrD,MAAI,QAAQ,KAAK,SAAS,kBAAkB,IAAI,IAAI,EAAE;AACtD,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,qBAAqB,GAAG,GAAG,CAAC;AACjD,SAAO,MAAM,OAAO,IAAI,GAAG,GAAG,CAAC;AACnC;AAEA,MAAM,UAAU,mBAAmB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC9D,MAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AACrD,MAAI,QAAQ,KAAK,SAAS,kBAAkB,IAAI,IAAI,EAAE;AACtD,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,qBAAqB,GAAG,GAAG,CAAC;AACjD,SAAO,CAAC,CAAC,MAAM,cAAc,GAAG,GAAG,CAAC;AACxC;AAEA,MAAM,UAAU,kBAAkB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC7D,MAAI,KAAK,KAAK,WAAW,GAAG,GAAG,CAAC;AAChC,SAAO,KAAK,IAAI,SAAS,gBAAgB,EAAE;AAC/C;AAEA,MAAM,UAAU,mBAAmB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC9D,MAAI,KAAK,KAAK,WAAW,GAAG,GAAG,CAAC;AAChC,SAAO,KAAK,IAAI,SAAS,iBAAiB,EAAE;AAChD;AAEA,MAAM,UAAU,qBAAqB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAChE,MAAI,KAAK,KAAK,WAAW,GAAG,GAAG,CAAC;AAChC,SAAO,KAAK,IAAI,SAAS,cAAc,EAAE;AAC7C;AAGA,MAAM,UAAU,aAAa,SAAU,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAChE,MAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AACrD,MAAI,QAAQ,KAAK,SAAS,kBAAkB,IAAI,IAAI,EAAE;AACtD,MAAI,CAAC,MAAO;AACZ,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,qBAAqB,GAAG,GAAG,CAAC;AACjD,SAAO,MAAM,IAAI,GAAG,GAAG,GAAG,EAAE;AAChC;AAIA,MAAM,UAAU,oBAAoB,SAAU,KAAK;AAC/C,MAAI,OAAO,IAAI;AACf,MAAIE,OAAM,IAAI;AACd,WAAS,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC,GAAG,IAAIA,KAAI,CAAC,IAAI,GAAG,KAAK;AACnD,aAAS,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC,GAAG,IAAIA,KAAI,CAAC,IAAI,GAAG,KAAK;AACnD,eAAS,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC,GAAG,IAAIA,KAAI,CAAC,IAAI,GAAG,KAAK;AACnD,YAAI,KAAK,iBAAiB,GAAG,GAAG,CAAC,EAAG,QAAO;AAAA,MAC/C;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAcA,MAAM,UAAU,eAAe,SAAU,IAAI,OAAO,WAAW,MAAM,cAAc,IAAI;AACnF,eAAa,MAAM,IAAI,OAAO,UAAU,WAAW;AACvD;AAeA,MAAM,UAAU,uBAAuB,SAAU,UAAU,GAAG,UAAU,GAAG;AACvE,MAAI,SAAS,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,SAAS,OAAO;AACjE,MAAI,SAAS,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,SAAS,OAAO;AACjE,MAAI,SAAS;AACb,MAAI,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,OAAQ,QAAO,CAAC,IAAI,OAAO,CAAC,IAAI;AAC5D,MAAI,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,OAAQ,QAAO,CAAC,IAAI,OAAO,CAAC,IAAI;AAC5D,OAAK,oBAAoB;AACzB,OAAK,uBAAuB;AAE5B,OAAK,iBAAiB,yBAAyB,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AACnE,OAAK,iBAAiB,yBAAyB,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AACnE,OAAK,kBAAkB,MAAM;AAE7B,WAAS,IAAI,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK;AACjC,aAAS,IAAI,GAAG,KAAK,GAAG,KAAK;AACzB,eAAS,IAAI,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK;AACjC,YAAI,CAAC,KAAK,eAAe,GAAG,GAAG,CAAC,EAAG;AACnC,aAAK,kBAAkB,IAAI,GAAG,GAAG,CAAC;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEA,OAAK,iBAAiB;AACtB,OAAK,sBAAsB;AAC/B;AAaA,MAAM,UAAU,yBAAyB,SAAU,KAAK;AACpD,wBAAsB,MAAM,GAAG;AACnC;AAQA,MAAM,UAAU,oBAAoB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC/D,MAAI,CAAC,KAAK,4BAA6B,OAAM;AAC7C,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AAClD,OAAK,aAAa,IAAI,GAAG,GAAG,CAAC;AAC7B,OAAK,iBAAiB,IAAI,GAAG,GAAG,CAAC;AACrC;AAOA,MAAM,UAAU,sBAAsB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACjE,MAAI,CAAC,KAAK,4BAA6B,OAAM;AAC7C,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AAClD,OAAK,gBAAgB,IAAI,GAAG,GAAG,CAAC;AAChC,OAAK,cAAc,OAAO,GAAG,GAAG,CAAC;AACjC,OAAK,iBAAiB,OAAO,GAAG,GAAG,CAAC;AACpC,OAAK,mBAAmB,OAAO,GAAG,GAAG,CAAC;AAC1C;AACA,IAAI,YAAY;AAkBhB,MAAM,UAAU,OAAO,WAAY;AAC/B,MAAI,gBAAgB,YAAY,IAAI;AAGpC,MAAI,CAAC,IAAI,IAAI,EAAE,IAAI,sBAAsB,IAAI;AAC7C,MAAI,eAAe,eAAe,IAAI,IAAI,EAAE;AAC5C,MAAI,gBAAiB,iBAAiB,KAAK;AAC3C,MAAI,eAAe;AACf,SAAK,KAAK,sBAAsB,IAAI,IAAI,EAAE;AAC1C,SAAK,uBAAuB;AAC5B,SAAK,sBAAsB;AAAA,EAC/B;AAIA,MAAI,KAAK,mBAAmB,KAAK,IAAI,WAAW;AAC5C,QAAI,CAAC,KAAK,6BAA6B;AACnC,2BAAqB,IAAI;AACzB,WAAK,sBAAsB;AAC3B,yBAAmB,IAAI;AAAA,IAC3B;AACA,SAAK,iBAAiB,KAAK,IAAI;AAAA,EACnC;AAEA,EAAAC,cAAa,OAAO;AACpB,sBAAoB,OAAO;AAG3B,MAAI,CAAC,KAAK,6BAA6B;AACnC,8BAA0B,MAAM,IAAI,IAAI,EAAE;AAC1C,IAAAA,cAAa,UAAU;AACvB,wBAAoB,MAAM,IAAI,IAAI,EAAE;AACpC,IAAAA,cAAa,UAAU;AAAA,EAC3B;AAGA,mBAAiB,IAAI;AAGrB,MAAI,IAAI,YAAY,IAAI;AACxB,MAAI,KAAK,iBAAiB,KAAK,wBAAwB;AACvD,MAAI,IAAI,GAAI,MAAK,IAAI;AACrB,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,SAAO,IAAI,IAAI;AACX,QAAI,CAAC,OAAO;AACR,cAAQ,mBAAmB,IAAI,KACxB,mBAAmB,IAAI;AAC9B,MAAAA,cAAa,SAAS;AAAA,IAC1B;AACA,QAAI,CAAC,OAAO;AACR,cAAQ,oBAAoB,IAAI;AAChC,MAAAA,cAAa,UAAU;AAAA,IAC3B;AACA,QAAI,CAAC,OAAO;AACR,cAAQ,oBAAoB,MAAM,KAAK;AACvC,MAAAA,cAAa,QAAQ;AAAA,IACzB;AACA,QAAI,SAAS,SAAS,MAAO;AAC7B,QAAI,YAAY,IAAI;AAAA,EACxB;AAGA,MAAI,SAAS,KAAK,SAAS,kBAAkB,IAAI,IAAI,EAAE;AACvD,OAAK,oBAAoB,CAAC,CAAC;AAE3B,sBAAoB,OAAO,IAAI;AAC/B,EAAAA,cAAa,KAAK;AACtB;AAIA,MAAM,UAAU,SAAS,WAAY;AAGjC,MAAI,IAAI,YAAY,IAAI;AACxB,MAAI,KAAK,IAAI,KAAK;AAClB,SAAO,IAAI,IAAI;AACX,QAAI,OAAO,oBAAoB,MAAM,IAAI;AACzC,QAAI,KAAM;AACV,QAAI,YAAY,IAAI;AAAA,EACxB;AACJ;AAIA,MAAM,UAAU,oBAAoB,SAAU,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAE/D,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,sBAAsB,GAAG,GAAG,CAAC;AAClD,SAAO,KAAK,SAAS,kBAAkB,GAAG,GAAG,CAAC;AAClD;AAuBA,MAAM,UAAU,uBAAuB,SAAU,OAAO;AACpD,+BAA6B,MAAM,KAAK;AAC5C;AAQA,SAAS,sBAAsB,OAAO;AAClC,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,IAAI,SAAS,YAAY,MAAM,IAAI,YAAY;AACrE,SAAO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC9C;AASA,SAAS,oBAAoB,OAAO,IAAI,IAAI,IAAI;AAC5C,MAAI,YAAY,MAAM;AACtB,MAAI,YAAY,UAAU,MAAM;AAChC,MAAI,YAAY;AAChB,MAAI,aAAa,UAAW;AAG5B,MAAI,aAAa,MAAM,sBAAsB;AAC7C,MAAI,eAAe,MAAM,gBAAgB;AACrC,4BAAwB,OAAO,MAAM,mBAAmB,GAAG,GAAG,GAAG,IAAI;AACrE,UAAM,iBAAiB;AAAA,EAC3B;AAIA,MAAI,UAAU,MAAM,kBAAkB;AACtC,MAAI,KAAK,MAAM;AACf,MAAI,UAAU,KAAK,IAAI,IAAI,QAAQ,SAAS,EAAE;AAC9C,WAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACjC,QAAI,CAAC,IAAI,IAAI,EAAE,IAAI,QAAQ,OAAO,QAAQ,MAAM;AAChD,4BAAwB,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrD,QAAI,UAAU,MAAM,KAAK,UAAW;AAAA,EACxC;AAIA,MAAI,MAAM,mBAAmB,QAAQ,GAAG;AACpC,UAAM,sBAAsB,KAAK,QAAQ;AAAA,EAC7C;AAGA,0BAAwB,OAAO,WAAW,IAAI,IAAI,IAAI,KAAK;AAC/D;AAGA,IAAI,0BAA0B,CAAC,OAAO,IAAI,IAAI,IAAI,GAAG,GAAG,MAAM;AAC1D,mBAAiB,OAAO,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAC9C,MAAI,MAAM,EAAG,kBAAiB,OAAO,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAC3D,MAAI,IAAI,EAAG,yBAAwB,OAAO,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;AAC9D,MAAI,IAAI,EAAG,yBAAwB,OAAO,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AAC9D,MAAI,IAAI,EAAG,yBAAwB,OAAO,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;AAClE;AAEA,IAAI,mBAAmB,CAAC,OAAO,GAAG,GAAG,MAAM;AACvC,MAAI,MAAM,aAAa,SAAS,GAAG,GAAG,CAAC,EAAG;AAC1C,QAAM,aAAa,IAAI,GAAG,GAAG,CAAC;AAC9B,QAAM,iBAAiB,IAAI,GAAG,GAAG,GAAG,IAAI;AAC5C;AAWA,SAAS,0BAA0B,OAAO,IAAI,IAAI,IAAI;AAClD,MAAI,YAAY,MAAM;AACtB,MAAI,WAAW,MAAM;AACrB,MAAI,YAAY,SAAS,MAAM,IAAI,MAAM,mBAAmB,MAAM;AAClE,MAAI,YAAY;AAChB,MAAI,aAAa,UAAW;AAE5B,MAAI,WAAW,MAAM,aAAa;AAClC,MAAI,SAAS,WAAW,EAAG;AAC3B,MAAI,UAAU,KAAK,IAAI,KAAK,SAAS,SAAS,EAAE;AAChD,MAAI,QAAQ;AACZ,WAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACjC,QAAI,CAAC,GAAG,GAAG,CAAC,IAAI,SAAS,qBAAqB,SAAS,MAAM;AAC7D,QAAI,SAAS,SAAS,GAAG,GAAG,CAAC,EAAG;AAChC,QAAI,UAAU,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAG;AAEvC,UAAM,gBAAgB,IAAI,GAAG,GAAG,CAAC;AACjC,UAAM,iBAAiB,OAAO,GAAG,GAAG,CAAC;AACrC,UAAM,cAAc,OAAO,GAAG,GAAG,CAAC;AAClC,UAAM,mBAAmB,OAAO,GAAG,GAAG,CAAC;AACvC,YAAQ;AACR;AACA,QAAI,YAAY,UAAW;AAAA,EAC/B;AACA,qBAAmB,mBAAmB,SAAS;AAC/C,MAAI,MAAO,yBAAwB,OAAO,UAAU,IAAI,IAAI,EAAE;AAClE;AACA,IAAI,mBAAmB;AAOvB,SAAS,iBAAiB,OAAO;AAC7B,MAAI,YAAY;AAChB,MAAI,YAAY,MAAM,cAAc,MAAM,IAAI,MAAM,mBAAmB,MAAM;AAC7E,MAAI,YAAY,UAAW;AAC3B,MAAI,WAAW,MAAM,aAAa;AAClC,MAAI,UAAU,KAAK,IAAI,IAAI,SAAS,SAAS,EAAE;AAC/C,WAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACjC,QAAI,CAAC,GAAG,GAAG,CAAC,IAAI,SAAS,mBAAmB,SAAS,MAAM;AAC3D,QAAI,QAAQ,MAAM,SAAS,kBAAkB,GAAG,GAAG,CAAC;AACpD,QAAI,CAAC,MAAO;AACZ,QAAI,MAAM,6BAA6B,OAAO,KAAK;AACnD,QAAI,IAAK;AACT,QAAI,YAAY,UAAW;AAAA,EAC/B;AACA,oBAAkB,SAAS;AAC/B;AACA,IAAI,iBAAiB;AAWrB,SAAS,sBAAsB,OAAO,KAAK;AACvC,MAAIC,OAAM,MAAM,sBAAsB,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;AAC3E,MAAIF,OAAM,MAAM,sBAAsB,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;AACxE,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,QAAI,CAAC,OAAO,SAAS,IAAI,KAAK,CAAC,CAAC,EAAG,CAAAE,KAAI,CAAC,IAAI,IAAI,KAAK,CAAC;AACtD,QAAI,CAAC,OAAO,SAAS,IAAI,IAAI,CAAC,CAAC,EAAG,CAAAF,KAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AAAA,EACxD;AACA,QAAM,aAAa,QAAQ,SAAO;AAC9B,QAAI,CAACG,IAAG,GAAG,CAAC,IAAI;AAChB,QAAIA,KAAID,KAAI,CAAC,KAAKC,MAAKH,KAAI,CAAC,EAAG;AAC/B,QAAI,IAAIE,KAAI,CAAC,KAAK,KAAKF,KAAI,CAAC,EAAG;AAC/B,QAAI,IAAIE,KAAI,CAAC,KAAK,KAAKF,KAAI,CAAC,EAAG;AAC/B,UAAM,mBAAmB,IAAIG,IAAG,GAAG,CAAC;AACpC,UAAM,gBAAgB,OAAOA,IAAG,GAAG,CAAC;AACpC,UAAM,iBAAiB,OAAOA,IAAG,GAAG,CAAC;AACrC,UAAM,cAAc,OAAOA,IAAG,GAAG,CAAC;AAClC,UAAM,mBAAmB,OAAOA,IAAG,GAAG,CAAC;AAAA,EAC3C,CAAC;AACL;AAQA,SAAS,qBAAqB,OAAO;AACjC,QAAM,mBAAmB,SAAS,MAAM,YAAY;AACpD,QAAM,gBAAgB,MAAM;AAC5B,QAAM,iBAAiB,MAAM;AAC7B,QAAM,cAAc,MAAM;AAC1B,QAAM,mBAAmB,MAAM;AAC/B,0BAAwB,OAAO,MAAM,kBAAkB;AAC3D;AAaA,SAAS,oBAAoB,OAAO;AAChC,MAAI,YAAY,MAAM;AACtB,MAAI,UAAU,QAAQ,EAAG,QAAO;AAEhC,MAAI,UAAU,MAAM,eAAe,MAAM;AACzC,MAAI,SAAS,MAAM,cAAc,MAAM;AACvC,MAAI,WAAW,MAAM,yBAA0B,QAAO;AACtD,MAAI,UAAU,MAAM,wBAAyB,QAAO;AACpD,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,UAAU,IAAI;AAC9B,kBAAgB,OAAO,GAAG,GAAG,CAAC;AAC9B,SAAO,UAAU,QAAQ;AAC7B;AAIA,SAAS,mBAAmB,OAAO;AAC/B,MAAI,QAAQ,MAAM;AAClB,MAAI,MAAM,QAAQ,EAAG,SAAQ,MAAM;AACnC,MAAI,MAAM,QAAQ,EAAG,QAAO;AAC5B,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,IAAI;AAC1B,cAAY,OAAO,GAAG,GAAG,CAAC;AAC1B,SAAQ,MAAM,QAAQ;AAC1B;AAOA,SAAS,oBAAoB,OAAO,WAAW;AAC3C,MAAI,QAAQ,MAAM;AAClB,MAAI,MAAM,QAAQ,KAAK,CAAC,UAAW,SAAQ,MAAM;AACjD,MAAI,MAAM,QAAQ,EAAG,QAAO;AAC5B,MAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,IAAI;AAC1B,MAAI,MAAM,gBAAgB,SAAS,GAAG,GAAG,CAAC,EAAG;AAC7C,MAAI,QAAQ,MAAM,SAAS,kBAAkB,GAAG,GAAG,CAAC;AACpD,MAAI,MAAO,eAAc,OAAO,KAAK;AACzC;AAIA,SAAS,6BAA6B,OAAO,OAAO;AAChD,MAAI,EAAE,MAAM,iBAAiB,MAAM,eAAgB,QAAO;AAC1D,MAAI,MAAM,iBAAiB,MAAM,mBAAoB,QAAO;AAC5D,MAAI,MAAM,cAAc,SAAS,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,EAAG,QAAO;AACpE,MAAI,MAAM,mBAAmB,SAAS,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,EAAG,QAAO;AACzE,MAAI,QAAS,MAAM,mBAAmB,KAClC,MAAM,qBAAqB,MAAM;AACrC,QAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;AACnC,QAAM;AACN,MAAI,MAAM,sBAAsB,IAAI;AAChC,4BAAwB,OAAO,KAAK;AACpC,UAAM,sBAAsB;AAAA,EAChC;AACA,SAAO;AACX;AAsBA,SAAS,gBAAgB,OAAO,GAAG,GAAG,GAAG;AACrC,MAAI,OAAO,MAAM;AACjB,MAAI,UAAU,MAAM,kBAAkB,MAAM,UAAU;AACtD,MAAI,YAAY,MAAM,IAAI;AAC1B,MAAI,YAAY,CAAC,GAAG,GAAG,GAAG,SAAS,EAAE,KAAK,GAAG;AAC7C,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,QAAM,eAAe,IAAI,GAAG,GAAG,CAAC;AAChC,QAAM,KAAK,mBAAmB,WAAW,SAAS,GAAG,GAAG,GAAG,SAAS;AACpE,sBAAoB,SAAS;AACjC;AAOA,SAAS,aAAa,OAAO,OAAO,OAAO,UAAU,aAAa;AAC9D,MAAI,MAAM,MAAM,MAAM,GAAG;AACzB,MAAI,IAAI,SAAS,IAAI,MAAM,CAAC;AAC5B,MAAI,IAAI,SAAS,IAAI,MAAM,CAAC;AAC5B,MAAI,IAAI,SAAS,IAAI,MAAM,CAAC;AAC5B,MAAI,YAAY,IAAI,KAAK,GAAG;AAC5B,QAAM,eAAe,OAAO,GAAG,GAAG,CAAC;AAEnC,MAAI,cAAc,MAAM,IAAI,UAAW;AAEvC,MAAI,CAAC,MAAM,aAAa,SAAS,GAAG,GAAG,CAAC,EAAG;AAC3C,MAAI,MAAM,gBAAgB,SAAS,GAAG,GAAG,CAAC,EAAG;AAE7C,MAAI,QAAQ,MAAM,SAAS,kBAAkB,GAAG,GAAG,CAAC;AACpD,MAAI,CAAC,OAAO;AAER,QAAI,OAAO,MAAM;AACjB,YAAQ,IAAI,MAAM,MAAM,KAAK,OAAO,GAAG,GAAG,GAAG,MAAM,OAAO,WAAW;AACrE,UAAM,SAAS,oBAAoB,GAAG,GAAG,GAAG,KAAK;AACjD,UAAM,WAAW;AACjB,UAAM,IAAI,UAAU,yBAAyB,KAAK;AAClD,UAAM,KAAK,cAAc,KAAK;AAAA,EAClC,OAAO;AAEH,UAAM,kBAAkB,OAAO,WAAW;AAAA,EAC9C;AAEA,+BAA6B,OAAO,KAAK;AACzC,yBAAuB,OAAO,GAAG,GAAG,GAAG,KAAK;AAE5C,sBAAoB,SAAS;AACjC;AAQA,SAAS,YAAY,OAAO,GAAG,GAAG,GAAG;AACjC,MAAI,QAAQ,MAAM,SAAS,kBAAkB,GAAG,GAAG,CAAC;AAEpD,MAAI,OAAO;AACP,UAAM,KAAK,qBAAqB,MAAM,WAAW,MAAM,QAAQ,MAAM,QAAQ;AAC7E,UAAM,IAAI,UAAU,yBAAyB,KAAK;AAClD,UAAM,QAAQ;AACd,wBAAoB,SAAS;AAC7B,2BAAuB,OAAO,GAAG,GAAG,GAAG,IAAI;AAAA,EAC/C;AAEA,QAAM,SAAS,qBAAqB,GAAG,GAAG,CAAC;AAC3C,QAAM,aAAa,OAAO,GAAG,GAAG,CAAC;AACjC,QAAM,cAAc,OAAO,GAAG,GAAG,CAAC;AAClC,QAAM,gBAAgB,OAAO,GAAG,GAAG,CAAC;AACpC,QAAM,mBAAmB,OAAO,GAAG,GAAG,CAAC;AAC3C;AAIA,SAAS,cAAc,OAAO,OAAO;AACjC,QAAM,cAAc,OAAO,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;AACpD,QAAM,mBAAmB,OAAO,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;AACzD,QAAM,aAAa;AACnB,sBAAoB,MAAM;AAC9B;AAoBA,SAAS,4BAA4B,GAAG,GAAG,GAAG;AAC1C,MAAI,KAAK,KAAK;AACd,SAAO,CAAC,KAAK,MAAM,IAAI,EAAE,IAAI,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,CAAC;AAClF;AACA,SAAS,2BAA2B,GAAG,GAAG,GAAG;AACzC,MAAI,KAAK,KAAK;AACd,MAAI,IAAK,IAAI,KAAM;AAAG,MAAI,IAAI,EAAG,MAAK;AACtC,MAAI,IAAK,IAAI,KAAM;AAAG,MAAI,IAAI,EAAG,MAAK;AACtC,MAAI,IAAK,IAAI,KAAM;AAAG,MAAI,IAAI,EAAG,MAAK;AACtC,SAAO,CAAC,GAAG,GAAG,CAAC;AACnB;AACA,SAAS,+BAA+B,GAAG,GAAG,GAAG;AAC7C,MAAI,QAAQ,KAAK;AACjB,SAAO,CAAE,KAAK,QAAS,GAAI,KAAK,QAAS,GAAI,KAAK,QAAS,CAAC;AAChE;AACA,SAAS,8BAA8B,GAAG,GAAG,GAAG;AAC5C,MAAI,OAAO,KAAK;AAChB,SAAO,CAAE,IAAI,OAAQ,GAAI,IAAI,OAAQ,GAAI,IAAI,OAAQ,CAAC;AAC1D;AAsBA,SAAS,wBAAwB,OAAO,OAAO,IAAI,IAAI,IAAI,UAAU,OAAO;AACxE,MAAI,SAAS,MAAM,sBAAsB;AACzC,MAAI,YAAY,CAAC,GAAG,GAAG,MAAM,OAAO,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAC1D,MAAI,OAAO,QAAW;AAClB,KAAC,IAAI,IAAI,EAAE,IAAI,sBAAsB,KAAK;AAAA,EAC9C;AACA,QAAM,eAAe,WAAW,OAAO;AAC3C;AACA,IAAI,sBAAsB,CAAC,GAAG,GAAG,MAAO,IAAI,IAAM,IAAI,IAAM,IAAI;AAShE,SAAS,uBAAuB,OAAO,IAAI,IAAI,IAAI,OAAO;AACtD,MAAI,iBAAkB,CAAC,SAAW,SAAS,CAAC,MAAM;AAClD,WAAS,IAAI,IAAI,KAAK,GAAG,KAAK;AAC1B,aAAS,IAAI,IAAI,KAAK,GAAG,KAAK;AAC1B,eAAS,IAAI,IAAI,KAAK,GAAG,KAAK;AAC1B,aAAK,IAAI,IAAI,OAAO,EAAG;AACvB,YAAI,WAAW,MAAM,SAAS,kBAAkB,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACtE,YAAI,CAAC,SAAU;AAEf,YAAI,eAAgB,UAAS,gBAAgB;AAE7C,YAAI,SAAS,CAAC,MAAM,WAAW,IAAI,GAAG,GAAG,CAAC,GAAG;AACzC,gBAAM;AACN,gBAAM,WAAW,IAAI,GAAG,GAAG,GAAG,QAAQ;AAAA,QAC1C;AACA,YAAI,SAAS,SAAS,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/C,YAAI,SAAS,CAAC,QAAQ;AAClB,mBAAS;AACT,mBAAS,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AAEzC,cAAI,SAAS,mBAAmB,IAAI;AAChC,yCAA6B,OAAO,QAAQ;AAAA,UAChD;AAAA,QACJ;AACA,YAAI,CAAC,SAAS,QAAQ;AAClB,mBAAS;AACT,mBAAS,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI;AAAA,QAC5C;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAIA,SAAS,yBAAyB,OAAO,OAAO;AAC5C,MAAI,MAAM,QAAQ;AAClB,MAAI,MAAM,QAAQ;AAElB,MAAI,UAAU,MAAO,QAAO,CAAC,GAAG,GAAG,MAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;AAEnE,MAAI,QAAQ,MAAO,QAAO,CAAC,GAAG,GAAG,MAAM;AACnC,QAAI,KAAK,IAAI,CAAC,IAAI,MAAO,QAAO;AAChC,WAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;AAAA,EACrC;AACA,SAAO,CAAC,GAAG,GAAG,MAAM;AAChB,QAAI,OAAO,IAAI,IAAI,IAAI;AACvB,QAAI,OAAO,IAAK,QAAO;AACvB,WAAQ,OAAO,IAAI,KAAK;AAAA,EAC5B;AACJ;AAwBA,MAAM,UAAU,SAAS,WAAY;AACjC,UAAQ,IAAI,sCAAsC,KAAK,iBAAiB;AACxE,UAAQ,MAAM,iBAAiB,KAAK,aAAa,KAAK,IAAI;AAC1D,UAAQ,MAAM,iBAAiB,KAAK,iBAAiB,KAAK,CAAC;AAC3D,UAAQ,MAAM,iBAAiB,KAAK,gBAAgB,KAAK,CAAC;AAC1D,UAAQ,MAAM,iBAAiB,KAAK,mBAAmB,KAAK,CAAC;AAC7D,UAAQ,MAAM,iBAAiB,KAAK,eAAe,KAAK,CAAC;AACzD,UAAQ,MAAM,iBAAiB,KAAK,cAAc,KAAK,CAAC;AACxD,UAAQ,MAAM,iBAAiB,KAAK,mBAAmB,KAAK,CAAC;AACjE;AAEA,SAAS,QAAQ,OAAO,MAAM,KAAK,KAAK;AACpC,MAAI,OAAO,GACP,QAAQ,GACR,QAAQ,GACR,aAAa,GACb,WAAW,CAAC;AAChB,MAAI,QAAQ,SAAO;AACf,QAAI,QAAQ,MAAM,SAAS,kBAAkB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACnE,QAAI,CAAC,MAAO;AACZ;AACA,aAAS,KAAK,MAAM,YAAY;AAChC,QAAI,MAAM,QAAS;AACnB,QAAI,MAAM,SAAU;AACpB,QAAI,MAAM,mBAAmB,GAAI;AAAA,EACrC,CAAC;AACD,MAAI,MAAM,IAAI,OAAO,SAAS,EAAE,OAAO,CAAC;AACxC,UAAQ,YAAY,OAAO,OAAO,EAAE;AACpC,UAAQ,WAAW,MAAM,OAAO,EAAE;AAClC,UAAQ,YAAY,OAAO,OAAO,EAAE;AACpC,UAAQ,WAAW,YAAY,OAAO,EAAE;AACxC,MAAI,KAAK;AACL,QAAI,MAAM,SAAS,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC;AACpD,QAAIH,OAAM,SAAS,OAAO,CAAC,KAAK,QAAQ,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC;AAC7D,QAAIE,OAAM,SAAS,OAAO,CAAC,KAAK,QAAQ,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC;AAC7D,WAAO,wBAAwB,MAAM,OAAO,QAAQ,CAAC;AACrD,WAAO,WAAWF;AAClB,WAAO,WAAWE;AAAA,EACtB;AACA,UAAQ,IAAI,MAAM,GAAG;AACzB;AAIA,IAAID,gBAAe,gBAAgBJ,gBAAe,gBAAgB,CAAC;AACnE,IAAI,uBAAuB,CAAC,UAAU;AAClC,MAAI,EAAE,QAAQ,GAAI,QAAO,MAAM;AAAA,EAAE;AACjC,MAAI,OAAO;AACX,MAAI,SAAS,CAAC;AACd,MAAI,SAAS,CAAC;AACd,MAAI,UAAU,YAAY,IAAI;AAC9B,SAAO,SAASO,qBAAoB,OAAO,OAAO;AAC9C,QAAI,UAAU,QAAS;AACvB,QAAI,UAAU,MAAO,QAAO,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK;AACnE,WAAO,SAAS,OAAO,SAAS,KAAK,MAAM,iBAAiB,MAAM;AAClE,WAAO,SAAS,OAAO,SAAS,KAAK,MAAM,eAAe,MAAM;AAChE,WAAO,UAAU,OAAO,UAAU,KAAK,MAAM,cAAc,MAAM,IAAI,MAAM,mBAAmB,MAAM;AACpG,WAAO,WAAW,OAAO,WAAW,KAAK,MAAM,mBAAmB,MAAM;AACxE,WAAO,SAAS,OAAO,SAAS,KAAK,MAAM,gBAAgB,MAAM;AACjE,QAAI,EAAE,OAAO,MAAO;AACpB,QAAI,IAAI,YAAY,IAAI,GAAG,KAAK,IAAI;AACpC,QAAI,MAAM,CAAC;AACX,WAAO,KAAK,MAAM,EAAE,QAAQ,OAAK;AAC7B,UAAI,MAAM,KAAK,OAAO,OAAO,CAAC,KAAK,KAAK,IAAI;AAC5C,UAAI,CAAC,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC;AAAA,IAClC,CAAC;AACD,WAAO,KAAK,MAAM,EAAE,QAAQ,OAAK;AAC7B,UAAI,MAAM,KAAK,OAAO,OAAO,CAAC,KAAK,KAAK,MAAO,EAAE;AACjD,UAAI,CAAC,KAAK,KAAK,KAAK,SAAS,CAAC;AAAA,IAClC,CAAC;AACD,YAAQ;AAAA,MAAI;AAAA,MACR,GAAG,IAAI,KAAK,MAAM,IAAI,WAAW,CAAC;AAAA,MAClC,GAAG,IAAI,KAAK,MAAM,IAAI,WAAW,CAAC;AAAA,MAClC,GAAI,IAAI,MAAO,MAAM,IAAI,QAAQ,CAAC;AAAA,MAClC,GAAG,IAAI,KAAK,MAAM,IAAI,WAAW,CAAC;AAAA,MAClC,eAAe,IAAI,QAAQ,KAAK,CAAC;AAAA,IACrC;AACA,WAAO;AACP,aAAS,CAAC;AACV,aAAS,CAAC;AACV,cAAU,YAAY,IAAI;AAAA,EAC9B;AACJ,GAAG,oBAAoB;;;AEviCvB,IAAAC,mBAAA;AAAA,EACI,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,OAAS;AAAA,IACL;AAAA,IACA;AAAA,EACJ;AAAA,EACA,SAAW;AAAA,IACP,OAAS;AAAA,IACT,OAAS;AAAA,IACT,MAAQ;AAAA,EACZ;AAAA,EACA,QAAU;AAAA,EACV,SAAW;AAAA,EACX,YAAc;AAAA,IACV,MAAQ;AAAA,IACR,KAAO;AAAA,EACX;AAAA,EACA,MAAQ;AAAA,IACJ,KAAO;AAAA,EACX;AAAA,EACA,cAAgB;AAAA,IACZ,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,QAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,eAAe;AAAA,IACf,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,SAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,wBAAwB;AAAA,EAC5B;AAAA,EACA,kBAAoB;AAAA,IAChB,mBAAmB;AAAA,EACvB;AAAA,EACA,iBAAmB;AAAA,IACf,QAAU;AAAA,IACV,eAAe;AAAA,IACf,SAAW;AAAA,IACX,kCAAkC;AAAA,IAClC,YAAc;AAAA,EAClB;AAAA,EACA,UAAY;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;;;AtCxBA,IAAIC,WAAUC,iBAAY;AAK1B,IAAIC,WAAU;AACd,IAAI,iBAAiB;AAGrB,IAAIC,kBAAiB;AAAA,EACjB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,cAAc;AAAA,EACd,aAAa;AAAA,EACb,aAAa,CAAC,GAAG,IAAI,CAAC;AAAA,EACtB,gBAAgB;AAAA,EAChB,uBAAuB;AAAA,EACvB,UAAU;AAAA;AAAA,EACV,eAAe;AAAA;AAAA,EACf,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,8BAA8B;AAAA,EAC9B,kBAAkB;AAAA,EAClB,yBAAyB;AAAA,EACzB,sBAAsB;AAC1B;AAoBO,IAAMC,UAAN,cAAqB,4BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuCrC,YAAY,OAAO,CAAC,GAAG;AACnB,UAAM;AACN,WAAO,OAAO,OAAO,CAAC,GAAGD,iBAAgB,IAAI;AAG7C,SAAK,UAAUH;AACf,QAAI,CAAC,KAAK,QAAQ;AACd,UAAI,WAAY,KAAK,QAAS,aAAa;AAC3C,cAAQ,IAAI,eAAe,KAAK,OAAO,GAAG,QAAQ,EAAE;AAAA,IACxD;AAGA,SAAK,UAAU;AAGf,SAAK,wBAAwB,KAAK;AAIlC,SAAK,oBAAoB,CAAC,GAAG,GAAG,CAAC;AAIjC,SAAK,wBAAwB;AAM7B,SAAK,YAAY;AAOjB,SAAK,YAAY;AAGjB,SAAK,YAAY,IAAI,UAAU,MAAM,IAAI;AAMzC,SAAK,WAAW,KAAK,UAAU,OAAO;AACtC,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,IACrC,CAAC;AAKD,SAAK,gBAAgB,KAAK,UAAU,OAAO;AAC3C,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,MACjC,KAAK,CAAC,MAAM;AAAE,aAAK,UAAU,OAAO,gBAAgB,KAAK;AAAA,MAAE;AAAA,IAC/D,CAAC;AAID,SAAK,SAAS,IAAI,OAAO,MAAM,MAAM,KAAK,UAAU,OAAO;AAG3D,SAAK,WAAW,IAAI,SAAS,MAAM,IAAI;AAGvC,SAAK,QAAQ,IAAI,MAAM,MAAM,IAAI;AAEjC,QAAI,cAAc,QAAQ;AAC1B,QAAI,KAAK,cAAe,SAAQ,MAAM,MAAM;AAAA,IAAE;AAG9C,SAAK,YAAY,IAAI,UAAU,MAAM,MAAM,KAAK,UAAU,MAAM;AAEhE,QAAI,KAAK,cAAe,SAAQ,MAAM;AAGtC,SAAK,UAAU,IAAIK,SAAQ,MAAM,IAAI;AAGrC,SAAK,WAAW,IAAI,SAAS,MAAM,IAAI;AAGvC,SAAK,OAAO,KAAK;AACjB,QAAI,OAAO,KAAK;AAGhB,SAAK,eAAe,KAAK;AAAA,MACrB,KAAK;AAAA;AAAA,MACL,KAAK;AAAA,MAAa,KAAK;AAAA,MACvB;AAAA,MAAM;AAAA;AAAA,MACN;AAAA,MAAM,KAAK;AAAA,IACf;AAGA,SAAK,aAAa,KAAK,cAAc,KAAK,MAAM,cAAc;AAC9D,SAAK,aAAa,KAAK,cAAc,KAAK,MAAM,eAAe;AAG/D,QAAI,OAAO,KAAK,WAAW,KAAK,YAAY,EAAE;AAC9C,SAAK,oBAAoB;AACzB,SAAK,WAAW,KAAK;AAGrB,SAAK,aAAa,KAAK,cAAc,KAAK,MAAM,cAAc;AAG9D,SAAK,aAAa,KAAK,cAAc,KAAK,MAAM,UAAU;AAG1D,SAAK,aAAa,KAAK,cAAc,KAAK,MAAM,UAAU;AAAA,MACtD,UAAU;AAAA,IACd,CAAC;AAGD,SAAK,SAAS,IAAI,OAAO,MAAM,IAAI;AAKnC,SAAK,oBAAoB,KAAK;AAO9B,SAAK,qBAAqB,KAAK,SAAS;AAWxC,SAAK,gBAAgB;AAGrB,QAAI,CAAC,KAAK,yBAAyB;AAE/B,WAAK,gCAAgC,CAAC,QAAQ;AAC1C,YAAI,KAAK;AACL,eAAK,UAAU,mBAAmB,MAAM,IAAI,UAAU,IAAI,MAAM;AAAA,QACpE,OAAO;AACH,eAAK,UAAU,mBAAmB,KAAK;AAAA,QAC3C;AAAA,MACJ;AACA,WAAK,GAAG,sBAAsB,KAAK,6BAA6B;AAAA,IACpE;AAUA,SAAK,iBAAiB,IAAI,cAAc,IAAI;AAG5C,SAAK,gBAAgB,IAAI,aAAa,IAAI;AAG1C,SAAK,oBAAoB;AAAA,MACrB,SAAS;AAAA,MACT,UAAU,iBAAAC,QAAK,OAAO;AAAA,MACtB,QAAQ,iBAAAA,QAAK,OAAO;AAAA,MACpB,UAAU,iBAAAA,QAAK,OAAO;AAAA,IAC1B;AAGA,SAAK,kBAAkB;AAIvB,SAAK,WAAW,iBAAAA,QAAK,OAAO;AAG5B,SAAK,cAAc;AAAA,MACf,gBAAgB,iBAAAA,QAAK,OAAO;AAAA,MAC5B,UAAU,CAAC,GAAG,GAAG,CAAC;AAAA,MAClB,QAAQ,CAAC,GAAG,GAAG,CAAC;AAAA,IACpB;AAOA,QAAI,KAAK,OAAO;AAGZ,WAAK,OAAO,iBAAAA;AAEZ,WAAK,UAAU,gBAAAC;AAEf,WAAK,YAAY,CAAC,EAAE,WAAW;AAE/B,UAAI;AAAA;AAAA,QAA0B;AAAA;AAC9B,UAAI,MAAM;AACV,UAAI,OAAO,iBAAAD;AACX,UAAI,UAAU,gBAAAC;AACd,UAAI,QAAQ,KAAK,UAAU;AAAA,IAC/B;AAGA,mBAAe,IAAI;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,KAAK,IAAI;AACL,UAAM,KAAK,aAAa;AAGxB,QAAI,KAAK,SAAS;AACd,UAAI,KAAK,MAAM,oBAAqB,MAAK,MAAM,KAAK;AACpD;AAAA,IACJ;AACA,IAAAC,cAAa,OAAO;AACpB,qBAAiB,IAAI;AACrB,SAAK,MAAM,KAAK;AAChB,IAAAA,cAAa,OAAO;AACpB,QAAI,CAAC,KAAK,MAAM,mBAAmB;AAE/B,WAAK,UAAU,KAAK,EAAE;AACtB;AAAA,IACJ;AACA,SAAK,QAAQ,KAAK,EAAE;AACpB,IAAAA,cAAa,SAAS;AACtB,SAAK,cAAc,KAAK;AACxB,SAAK,UAAU,KAAK,EAAE;AACtB,IAAAA,cAAa,WAAW;AACxB,uBAAmB,IAAI;AACvB,IAAAA,cAAa,SAAS;AACtB,SAAK,SAAS,KAAK,EAAE;AACrB,IAAAA,cAAa,UAAU;AACvB,SAAK,KAAK,QAAQ,EAAE;AACpB,IAAAA,cAAa,YAAY;AACzB,IAAAA,cAAa,KAAK;AAElB,QAAI,MAAM,KAAK,OAAO;AACtB,QAAI,UAAU,IAAI,UAAU,IAAI,UAAU;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,OAAO,IAAI,WAAW;AAClB,UAAM,KAAK,aAAa;AAOxB,SAAK,wBAAwB;AAG7B,QAAI,KAAK,SAAS;AACd,UAAI,KAAK,MAAM,oBAAqB,MAAK,MAAM,OAAO;AACtD;AAAA,IACJ;AAEA,wBAAoB,OAAO;AAG3B,SAAK,OAAO,oBAAoB;AAChC,wBAAoB,MAAM;AAG1B,SAAK,MAAM,OAAO;AAClB,wBAAoB,SAAS;AAG7B,SAAK,OAAO,gCAAgC;AAC5C,SAAK,SAAS,OAAO,EAAE;AACvB,SAAK,OAAO,+BAA+B;AAC3C,wBAAoB,UAAU;AAG9B,SAAK,KAAK,gBAAgB,EAAE;AAC5B,wBAAoB,eAAe;AAEnC,SAAK,UAAU,OAAO;AACtB,SAAK,UAAU,WAAW;AAC1B,wBAAoB,QAAQ;AAE5B,SAAK,KAAK,eAAe,EAAE;AAC3B,wBAAoB,cAAc;AAClC,wBAAoB,KAAK;AAGzB,SAAK,OAAO,aAAa,KAAK,KAAK,OAAO,aAAa,KAAK;AAAA,EAChE;AAAA;AAAA,EAMA,UAAU,SAAS,OAAO;AACtB,SAAK,UAAU,CAAC,CAAC;AAEjB,QAAI,CAAC,QAAQ;AACT,WAAK,OAAO,aAAa,KAAK,KAAK,OAAO,aAAa,KAAK;AAAA,IAChE;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,GAAG,IAAI,GAAG,IAAI,GAAG;AACtB,QAAI,EAAE,OAAQ,QAAO,KAAK,MAAM,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC3D,WAAO,KAAK,MAAM,WAAW,GAAG,GAAG,CAAC;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC1B,QAAI,EAAE,OAAQ,QAAO,KAAK,MAAM,WAAW,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC/D,WAAO,KAAK,MAAM,WAAW,IAAI,GAAG,GAAG,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAE1B,QAAI,EAAE,QAAQ;AACV,UAAI,KAAK,SAAS,iBAAiB,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAG;AACtD,WAAK,MAAM,WAAW,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1C,aAAO;AAAA,IACX,OAAO;AACH,UAAI,KAAK,SAAS,iBAAiB,GAAG,GAAG,CAAC,EAAG;AAC7C,WAAK,MAAM,WAAW,IAAI,GAAG,GAAG,CAAC;AACjC,aAAO;AAAA,IACX;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA,cAAcC,SAAQ,eAAeC,QAAO;AACxC,QAAI,MAAM,KAAK;AACf,QAAI,eAAe;AACf,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAI,QAAQD,QAAO,CAAC,IAAI,IAAI,CAAC;AAC7B,iBAAS,cAAc,CAAC;AACxB,QAAAC,OAAM,CAAC,IAAI;AAAA,MACf;AACA,aAAOA;AAAA,IACX,OAAO;AACH,aAAO,iBAAAJ,QAAK,SAASI,QAAOD,SAAQ,GAAG;AAAA,IAC3C;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,cAAcC,QAAOD,SAAQ,gBAAgB,MAAM;AAC/C,QAAI,MAAM,KAAK;AACf,QAAI,eAAe;AACf,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAI,UAAU,KAAK,MAAMC,OAAM,CAAC,CAAC;AACjC,QAAAD,QAAO,CAAC,IAAI,UAAU,IAAI,CAAC;AAC3B,sBAAc,CAAC,IAAIC,OAAM,CAAC,IAAI;AAAA,MAClC;AACA,aAAOD;AAAA,IACX,OAAO;AACH,aAAO,iBAAAH,QAAK,IAAIG,SAAQC,QAAO,GAAG;AAAA,IACtC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,KAAK,MAAM,MAAM,MAAM,MAAMC,QAAO,IAAI,oBAAoB,MAAM;AAC9D,QAAIA,UAAS,EAAG,QAAO;AAEvB,QAAI,UAAU,KAAK;AACnB,QAAI,KAAK;AACL,WAAK,cAAc,KAAK,MAAM,OAAO;AACrC,YAAM;AAAA,IACV;AACA,WAAO,KAAK,WAAW,KAAK,KAAKA,OAAM,iBAAiB;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,WAAW,MAAM,MAAM,MAAM,MAAMA,QAAO,IAAI,oBAAoB,MAAM;AAEpE,QAAIA,UAAS,EAAG,QAAO;AACvB,QAAI,SAAS,qBAAqB,KAAK,SAAS;AAChD,QAAI,QAAQ,KAAK;AACjB,QAAI,MAAM,KAAK;AACf,QAAI,YAAY,SAAU,GAAG,GAAG,GAAG;AAC/B,UAAI,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;AAC5D,aAAO,OAAO,EAAE;AAAA,IACpB;AACA,QAAI,CAAC,IAAK,OAAM,KAAK,OAAO,wBAAwB;AACpD,UAAM,OAAO,KAAK,OAAO,aAAa;AACtC,IAAAA,QAAOA,SAAQ;AACf,QAAIA,QAAO,EAAG,CAAAA,QAAO,KAAK;AAC1B,QAAI,SAAS,KAAK;AAClB,QAAI,OAAO,OAAO;AAClB,QAAI,QAAQ,OAAO;AACnB,QAAI,UAAM,0BAAAC,SAAQ,WAAW,KAAK,KAAKD,OAAM,MAAM,KAAK;AACxD,QAAI,CAAC,IAAK,QAAO;AAGjB,qBAAAL,QAAK,YAAY,MAAM,MAAM,OAAO,IAAI;AAExC,SAAK,cAAc,MAAM,OAAO,QAAQ;AACxC,WAAO;AAAA,EACX;AAEJ;AAuBA,SAAS,iBAAiB,KAAK;AAC3B,MAAI,OAAO,IAAI,KAAK,gBAAgB,IAAI,YAAY,EAAE;AACtD,MAAI,SAAS,IAAI;AACjB,MAAI,iBAAAA,QAAK,OAAO,IAAI,IAAI,SAAS,OAAQ;AACzC,MAAI,QAAQ,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,UAAM,CAAC,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC;AAC7B,QAAI,kBAAkB,CAAC,KAAK,MAAM,CAAC;AAAA,EACvC;AACA,MAAI,UAAU,cAAc,KAAK;AACjC,MAAI,SAAS,cAAc,KAAK;AAChC,MAAI,cAAc,cAAc,KAAK;AACzC;AAQA,SAAS,mBAAmB,KAAK;AAC7B,MAAI,UAAU;AACd,MAAI,YAAY,IAAI,sBAAsB,IAAI,SAAS;AACvD,MAAI,SAAS,IAAI,WAAW,MAAM,MAAM,MAAM,SAAS;AACvD,MAAI,QAAQ;AACR,QAAI,MAAM,IAAI;AAEd,qBAAAA,QAAK,MAAM,IAAI,UAAU,OAAO,QAAQ;AACxC,qBAAAA,QAAK,KAAK,IAAI,QAAQ,OAAO,MAAM;AACnC,qBAAAA,QAAK,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,MAAM;AACpD,QAAI,UAAU,IAAI,MAAM,WAAW,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC;AACpF,QAAI,gBAAgB;AAEpB,QAAI,MAAM,IAAI,UAAU,OAAO,IAAI;AACnC,QAAI,IAAI,eAAe,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3D,SAAK,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,CAAC;AAC3D,cAAU;AAAA,EACd,OAAO;AACH,QAAI,gBAAgB;AAAA,EACxB;AACA,MAAI,WAAW,IAAI,iBAAiB;AAChC,QAAI,KAAK,sBAAsB,IAAI,aAAa;AAChD,QAAI,kBAAkB;AAAA,EAC1B;AACJ;AAUA,SAAS,eAAe,KAAK;AACzB,MAAI,MAAM;AACV,MAAI,MAAM,CAAC,KAAK,MAAM,QAAQ;AAC1B,QAAI,UAAU,MAAM;AAAE,YAAM,4BAA4B,GAAG,MAAM,GAAG;AAAA,IAAG;AACvE,WAAO,eAAe,KAAK,MAAM,EAAE,KAAK,SAAS,KAAK,QAAQ,CAAC;AAAA,EACnE;AACA,MAAI,KAAK,wBAAwB,4EAA4E;AAC7G,MAAI,KAAK,wBAAwB,4EAA4E;AAC7G,MAAI,KAAK,qBAAqB,yDAAyD;AACvF,MAAI,KAAK,mBAAmB,+BAA+B;AAC3D,MAAI,KAAK,iBAAiB,8DAA8D;AACxF,MAAI,KAAK,cAAc,iDAAiD;AACxE,MAAI,IAAI,WAAW,gBAAgB,+BAA+B;AAClE,MAAI,IAAI,WAAW,gBAAgB,8BAA8B;AACjE,MAAI,IAAI,WAAW,oBAAoB,4BAA4B;AACnE,MAAI,IAAI,WAAW,mBAAmB,+BAA+B;AACrE,MAAI,IAAI,WAAW,qBAAqB,mCAAmC;AAC3E,MAAI,IAAI,WAAW,qBAAqB,iDAAiD;AACzF,MAAI,IAAI,WAAW,qBAAqB,4DAA4D;AACpG,QAAM;AACN,MAAI,IAAI,WAAW,oBAAoB,8CAA+C;AACtF,MAAI,IAAI,OAAO,6BAA6B,yCAAyC;AACrF,MAAI,IAAI,OAAO,4BAA4B,wCAAwC;AACnF,MAAI,IAAI,OAAO,yBAAyB,qCAAqC;AAC7E,MAAI,IAAI,OAAO,2BAA2B,uCAAuC;AACjF,QAAM;AACN,MAAI,KAAK,cAAc,wDAAwD;AAC/E,QAAM;AACN,MAAI,KAAK,aAAa,mCAAmC;AACzD,MAAI,IAAI,WAAW,aAAa,mCAAmC;AACnE,QAAM;AACN,MAAI,IAAI,OAAO,aAAa,qDAAqD;AACjF,MAAI,IAAI,OAAO,oBAAoB,gDAAgD;AACnF,MAAI,IAAI,OAAO,uBAAuB,gDAAgD;AACtF,QAAM;AACN,MAAI,IAAI,WAAW,4BAA4B,gDAAgD;AACnG;AAIA,IAAIE,gBAAgBN,WAAU,IAC1B,gBAAgBA,UAAS,SAAS,IAAI,MAAM;AAAE;AAClD,IAAI,sBAAuB,iBAAiB,IACxC,gBAAgB,gBAAgB,SAAS,IAAI,MAAM;AAAE;",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "len", "once", "copy", "create", "clone", "a", "fromValues", "normalize", "a", "len", "dot", "a", "angle", "fromValues", "normalize", "dot", "a", "copy", "a", "set", "equals", "EPSILON", "a", "a2", "exactEquals", "a", "add", "a", "subtract", "a", "multiply", "a", "divide", "a", "min", "a", "max", "a", "floor", "a", "ceil", "a", "round", "a", "scale", "a", "scaleAndAdd", "a", "scale", "distance", "a", "squaredDistance", "a", "length", "a", "squaredLength", "a", "negate", "a", "inverse", "a", "cross", "a", "lerp", "a", "random", "scale", "transformMat4", "a", "transformMat3", "a", "transformQuat", "a", "rotateX", "a", "rotateY", "a", "rotateZ", "a", "forEach", "a", "a", "i", "dx", "floor", "max", "floor", "i", "dist", "done", "dv", "axis", "step", "sweep", "ECS", "a", "state", "require_is_buffer", "a", "sweep", "sweep", "boxIntersect", "import_events", "import_gl_vec3", "import_ndarray", "dx", "scale", "a", "down", "import_events", "a", "create", "round", "create", "a", "round", "scale", "len", "angle", "a2", "create", "normalize", "a", "len", "forEach", "create", "a", "create", "slerp", "a", "normalize", "create", "a", "dot", "normalize", "slerp", "create", "forEach", "create", "a", "max", "min", "vec3", "dx", "dist", "sweep", "import_gl_vec3", "import_gl_vec3", "vec3", "import_gl_vec3", "vec3", "boxIntersect", "a", "noa", "dx", "import_gl_vec3", "vec3", "import_gl_vec3", "vec3", "import_gl_vec3", "vec3", "import_gl_vec3", "distance", "dist", "vec3", "scale", "defaultOptions", "ECS", "vec3", "min", "max", "a", "add", "len", "profile_hook", "ndarray", "len", "dv", "defaults", "opts", "import_gl_vec3", "min", "max", "PROFILE", "defaults", "profile_hook", "dist", "glvec3", "mat", "mats", "div", "min", "import_gl_vec3", "import_voxel_aabb_sweep", "import_gl_vec3", "vec3", "DEBUG", "DefaultOptions", "vec3", "equals", "sanityCheck", "sweep", "dist", "dx", "a", "defaultOptions", "Physics", "import_events", "import_ndarray", "ndarray", "len", "PROFILE_EVERY", "defaultOptions", "EventEmitter", "max", "profile_hook", "min", "i", "profile_queues_hook", "package_default", "version", "package_default", "PROFILE", "defaultOptions", "Engine", "Physics", "vec3", "ndarray", "profile_hook", "global", "local", "dist", "raycast"]
}
